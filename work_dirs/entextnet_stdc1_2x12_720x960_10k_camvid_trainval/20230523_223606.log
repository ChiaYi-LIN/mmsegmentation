2023-05-23 22:36:06,961 - mmseg - INFO - Multi-processing start method is `None`
2023-05-23 22:36:06,968 - mmseg - INFO - OpenCV num_threads is `96
2023-05-23 22:36:06,968 - mmseg - INFO - OMP num threads is 1
2023-05-23 22:36:07,030 - mmseg - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.16 (default, Mar  2 2023, 03:21:46) [GCC 11.2.0]
CUDA available: True
GPU 0,1: NVIDIA GeForce RTX 3090
CUDA_HOME: None
GCC: gcc (Ubuntu 11.3.0-1ubuntu1~22.04.1) 11.3.0
PyTorch: 1.12.1+cu113
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.13.1+cu113
OpenCV: 4.7.0
MMCV: 1.7.0
MMCV Compiler: GCC 9.3
MMCV CUDA Compiler: 11.3
MMSegmentation: 0.30.0+7bf68e5
------------------------------------------------------------

2023-05-23 22:36:07,031 - mmseg - INFO - Distributed training: True
2023-05-23 22:36:08,000 - mmseg - INFO - Config:
norm_cfg = dict(type='BN', requires_grad=True)
model = dict(
    type='EncoderDecoder',
    pretrained=None,
    backbone=dict(
        type='STDCEnTextNet',
        backbone_cfg=dict(
            type='STDCNet',
            stdc_type='STDCNet1',
            in_channels=3,
            channels=(32, 64, 256, 512, 1024),
            bottleneck_type='cat',
            num_convs=4,
            norm_cfg=dict(type='BN', requires_grad=True),
            act_cfg=dict(type='ReLU'),
            with_final_conv=False,
            init_cfg=dict(
                type='Pretrained',
                checkpoint=
                'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth'
            )),
        last_in_channels=(1035, 512),
        out_channels=128,
        ffm_cfg=dict(in_channels=384, out_channels=256, scale_factor=4),
        text_embeddings='./pretrained/textfeat_camvid_11_RN50_1024.pth'),
    decode_head=dict(
        type='FCNHead',
        in_channels=256,
        channels=256,
        num_convs=1,
        num_classes=19,
        in_index=3,
        concat_input=False,
        dropout_ratio=0.1,
        norm_cfg=dict(type='BN', requires_grad=True),
        align_corners=True,
        sampler=dict(type='OHEMPixelSampler', thresh=0.7, min_kept=510000),
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
    auxiliary_head=[
        dict(
            type='FCNHead',
            in_channels=128,
            channels=64,
            num_convs=1,
            num_classes=11,
            in_index=2,
            norm_cfg=dict(type='BN', requires_grad=True),
            concat_input=False,
            align_corners=False,
            sampler=dict(type='OHEMPixelSampler', thresh=0.7, min_kept=510000),
            loss_decode=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
        dict(
            type='FCNHead',
            in_channels=128,
            channels=64,
            num_convs=1,
            num_classes=11,
            in_index=1,
            norm_cfg=dict(type='BN', requires_grad=True),
            concat_input=False,
            align_corners=False,
            sampler=dict(type='OHEMPixelSampler', thresh=0.7, min_kept=510000),
            loss_decode=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
        dict(
            type='STDCHead',
            in_channels=256,
            channels=64,
            num_convs=1,
            num_classes=2,
            boundary_threshold=0.1,
            in_index=0,
            norm_cfg=dict(type='BN', requires_grad=True),
            concat_input=False,
            align_corners=True,
            loss_decode=[
                dict(
                    type='CrossEntropyLoss',
                    loss_name='loss_ce',
                    use_sigmoid=True,
                    loss_weight=1.0),
                dict(type='DiceLoss', loss_name='loss_dice', loss_weight=1.0)
            ]),
        dict(
            type='VanillaHead',
            temperature=0.07,
            in_channels=11,
            channels=1,
            num_classes=11,
            in_index=4,
            sampler=dict(type='OHEMPixelSampler', thresh=0.7, min_kept=510000),
            loss_decode=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0))
    ],
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
dataset_type = 'CamVidDataset'
data_root = 'data/CamVid/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
crop_size = (720, 960)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(
        type='Resize',
        img_scale=(960, 720),
        ratio_range=(0.5, 2.5),
        scale_step_size=0.25),
    dict(type='RandomCrop', crop_size=(720, 960), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size=(720, 960), pad_val=0, seg_pad_val=255),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_semantic_seg'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(960, 720),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=12,
    workers_per_gpu=4,
    train=dict(
        type='CamVidDataset',
        data_root='data/CamVid/',
        img_dir='trainval',
        ann_dir='trainval_labelIds',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations'),
            dict(
                type='Resize',
                img_scale=(960, 720),
                ratio_range=(0.5, 2.5),
                scale_step_size=0.25),
            dict(type='RandomCrop', crop_size=(720, 960), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size=(720, 960), pad_val=0, seg_pad_val=255),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_semantic_seg'])
        ]),
    val=dict(
        type='CamVidDataset',
        data_root='data/CamVid/',
        img_dir='test',
        ann_dir='test_labelIds',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(960, 720),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CamVidDataset',
        data_root='data/CamVid/',
        img_dir='test',
        ann_dir='test_labelIds',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(960, 720),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
log_config = dict(
    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
cudnn_benchmark = True
optimizer = dict(
    type='SGD',
    lr=0.1,
    momentum=0.9,
    weight_decay=0.0005,
    paramwise_cfg=dict(
        custom_keys=dict(
            {
                'backbone.backbone': dict(lr_mult=0.1),
                'backbone.text_encoder': dict(lr_mult=0.0, decay_mult=0.0),
                '.bn.': dict(decay_mult=0.0)
            })))
optimizer_config = dict()
lr_config = dict(
    policy='poly',
    power=0.9,
    min_lr=1e-06,
    by_epoch=False,
    warmup='linear',
    warmup_iters=200,
    warmup_ratio=1e-05)
runner = dict(type='IterBasedRunner', max_iters=10000)
checkpoint_config = dict(by_epoch=False, interval=1000)
evaluation = dict(
    interval=1000, metric='mIoU', pre_eval=True, save_best='mIoU')
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth'
work_dir = './work_dirs/entextnet_stdc1_2x12_720x960_10k_camvid_trainval'
gpu_ids = range(0, 2)
auto_resume = False

2023-05-23 22:36:11,131 - mmseg - INFO - Set random seed to 1501984628, deterministic: False
2023-05-23 22:36:11,144 - mmseg - INFO - Loaded 468 images
2023-05-23 22:36:12,359 - mmseg - INFO - initialize STDCNet with init_cfg {'type': 'Pretrained', 'checkpoint': 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth'}
2023-05-23 22:36:12,708 - mmseg - INFO - initialize FCNHead with init_cfg {'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
Name of parameter - Initialization information

backbone.text_embeddings - torch.Size([11, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.backbone.stages.0.conv.weight - torch.Size([32, 3, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.0.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.0.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.1.conv.weight - torch.Size([64, 32, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.1.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.0.conv.weight - torch.Size([128, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.0.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.0.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.1.conv.weight - torch.Size([64, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.1.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.2.conv.weight - torch.Size([32, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.2.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.2.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.3.conv.weight - torch.Size([32, 32, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.3.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.3.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.downsample.conv.weight - torch.Size([128, 1, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.downsample.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.downsample.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.0.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.0.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.0.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.1.conv.weight - torch.Size([64, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.1.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.2.conv.weight - torch.Size([32, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.2.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.2.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.3.conv.weight - torch.Size([32, 32, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.3.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.3.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.0.conv.weight - torch.Size([256, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.0.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.0.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.1.conv.weight - torch.Size([128, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.1.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.1.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.2.conv.weight - torch.Size([64, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.2.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.2.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.3.conv.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.3.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.3.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.downsample.conv.weight - torch.Size([256, 1, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.downsample.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.downsample.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.0.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.0.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.0.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.1.conv.weight - torch.Size([128, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.1.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.1.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.2.conv.weight - torch.Size([64, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.2.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.2.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.3.conv.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.3.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.3.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.0.conv.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.0.bn.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.0.bn.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.1.conv.weight - torch.Size([256, 512, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.1.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.1.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.2.conv.weight - torch.Size([128, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.2.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.2.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.3.conv.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.3.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.3.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.downsample.conv.weight - torch.Size([512, 1, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.downsample.bn.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.downsample.bn.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.0.conv.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.0.bn.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.0.bn.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.1.conv.weight - torch.Size([256, 512, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.1.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.1.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.2.conv.weight - torch.Size([128, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.2.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.2.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.3.conv.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.3.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.3.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.arms.0.conv_layer.conv.weight - torch.Size([128, 1035, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.arms.0.conv_layer.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.0.conv_layer.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.0.atten_conv_layer.1.conv.weight - torch.Size([128, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.0.atten_conv_layer.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.0.atten_conv_layer.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.conv_layer.conv.weight - torch.Size([128, 512, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.arms.1.conv_layer.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.conv_layer.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.atten_conv_layer.1.conv.weight - torch.Size([128, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.atten_conv_layer.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.atten_conv_layer.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.convs.0.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.convs.0.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.convs.0.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.convs.1.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.convs.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.convs.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.conv_avg.conv.weight - torch.Size([128, 1035, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.conv_avg.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.conv_avg.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.ffm.conv0.conv.weight - torch.Size([256, 384, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.ffm.conv0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.ffm.conv0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.ffm.attention.1.conv.weight - torch.Size([64, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.ffm.attention.2.conv.weight - torch.Size([256, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.conv_seg.weight - torch.Size([19, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.conv_seg.bias - torch.Size([19]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.conv_seg.weight - torch.Size([11, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.conv_seg.bias - torch.Size([11]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.convs.0.conv.weight - torch.Size([64, 128, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.convs.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.convs.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.conv_seg.weight - torch.Size([11, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.conv_seg.bias - torch.Size([11]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.convs.0.conv.weight - torch.Size([64, 128, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.convs.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.convs.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.fusion_kernel - torch.Size([1, 3, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.conv_seg.weight - torch.Size([2, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.conv_seg.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.convs.0.conv.weight - torch.Size([64, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.convs.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.convs.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
2023-05-23 22:36:12,710 - mmseg - INFO - EncoderDecoder(
  (backbone): STDCEnTextNet(
    (backbone): STDCNet(
      (stages): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (1): ConvModule(
          (conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (2): Sequential(
          (0): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
            (downsample): ConvModule(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
              (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (skip): AvgPool2d(kernel_size=3, stride=2, padding=1)
          )
          (1): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
          )
        )
        (3): Sequential(
          (0): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
            (downsample): ConvModule(
              (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=256, bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (skip): AvgPool2d(kernel_size=3, stride=2, padding=1)
          )
          (1): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
          )
        )
        (4): Sequential(
          (0): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
            (downsample): ConvModule(
              (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=512, bias=False)
              (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (skip): AvgPool2d(kernel_size=3, stride=2, padding=1)
          )
          (1): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
          )
        )
      )
    )
    init_cfg={'type': 'Pretrained', 'checkpoint': 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth'}
    (arms): ModuleList(
      (0): AttentionRefinementModule(
        (conv_layer): ConvModule(
          (conv): Conv2d(1035, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (atten_conv_layer): Sequential(
          (0): AdaptiveAvgPool2d(output_size=(1, 1))
          (1): ConvModule(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): Sigmoid()
        )
      )
      (1): AttentionRefinementModule(
        (conv_layer): ConvModule(
          (conv): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (atten_conv_layer): Sequential(
          (0): AdaptiveAvgPool2d(output_size=(1, 1))
          (1): ConvModule(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): Sigmoid()
        )
      )
    )
    (convs): ModuleList(
      (0): ConvModule(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
      (1): ConvModule(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
    (conv_avg): ConvModule(
      (conv): Conv2d(1035, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activate): ReLU(inplace=True)
    )
    (ffm): FeatureFusionModule(
      (conv0): ConvModule(
        (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
      (attention): Sequential(
        (0): AdaptiveAvgPool2d(output_size=(1, 1))
        (1): ConvModule(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (activate): ReLU(inplace=True)
        )
        (2): ConvModule(
          (conv): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (3): Sigmoid()
      )
    )
  )
  (decode_head): FCNHead(
    input_transform=None, ignore_index=255, align_corners=True
    (loss_decode): CrossEntropyLoss(avg_non_ignore=False)
    (conv_seg): Conv2d(256, 19, kernel_size=(1, 1), stride=(1, 1))
    (dropout): Dropout2d(p=0.1, inplace=False)
    (convs): Sequential(
      (0): ConvModule(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
  )
  init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
  (auxiliary_head): ModuleList(
    (0): FCNHead(
      input_transform=None, ignore_index=255, align_corners=False
      (loss_decode): CrossEntropyLoss(avg_non_ignore=False)
      (conv_seg): Conv2d(64, 11, kernel_size=(1, 1), stride=(1, 1))
      (dropout): Dropout2d(p=0.1, inplace=False)
      (convs): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
    init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
    (1): FCNHead(
      input_transform=None, ignore_index=255, align_corners=False
      (loss_decode): CrossEntropyLoss(avg_non_ignore=False)
      (conv_seg): Conv2d(64, 11, kernel_size=(1, 1), stride=(1, 1))
      (dropout): Dropout2d(p=0.1, inplace=False)
      (convs): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
    init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
    (2): STDCHead(
      input_transform=None, ignore_index=255, align_corners=True
      (loss_decode): ModuleList(
        (0): CrossEntropyLoss(avg_non_ignore=False)
        (1): DiceLoss()
      )
      (conv_seg): Conv2d(64, 2, kernel_size=(1, 1), stride=(1, 1))
      (dropout): Dropout2d(p=0.1, inplace=False)
      (convs): Sequential(
        (0): ConvModule(
          (conv): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
    init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
    (3): VanillaHead(
      input_transform=None, ignore_index=255, align_corners=False
      (loss_decode): CrossEntropyLoss(avg_non_ignore=False)
      (conv_seg): None
      (dropout): Dropout2d(p=0.1, inplace=False)
    )
    init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
  )
)
2023-05-23 22:36:12,791 - mmseg - INFO - Loaded 233 images
2023-05-23 22:36:12,791 - mmseg - INFO - Start running, host: linchiayi@cml9, work_dir: /tmp2/linchiayi/mmsegmentation/work_dirs/entextnet_stdc1_2x12_720x960_10k_camvid_trainval
2023-05-23 22:36:12,792 - mmseg - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-05-23 22:36:12,792 - mmseg - INFO - workflow: [('train', 1)], max: 10000 iters
2023-05-23 22:36:12,792 - mmseg - INFO - Checkpoints will be saved to /tmp2/linchiayi/mmsegmentation/work_dirs/entextnet_stdc1_2x12_720x960_10k_camvid_trainval by HardDiskBackend.
2023-05-23 22:37:19,596 - mmseg - INFO - Iter [50/10000]	lr: 2.439e-02, eta: 3:39:37, time: 1.324, data_time: 0.570, memory: 17038, decode.loss_ce: 1.3501, decode.acc_seg: 48.8999, aux_0.loss_ce: 1.2758, aux_0.acc_seg: 45.9357, aux_1.loss_ce: 1.3419, aux_1.acc_seg: 41.0216, aux_2.loss_ce: 0.3259, aux_2.loss_dice: 0.4942, aux_2.acc_seg: 90.4782, aux_3.loss_ce: 1.8605, aux_3.acc_seg: 4.1009, loss: 6.6483
2023-05-23 22:38:01,381 - mmseg - INFO - Iter [100/10000]	lr: 4.906e-02, eta: 2:58:17, time: 0.837, data_time: 0.258, memory: 17038, decode.loss_ce: 0.4835, decode.acc_seg: 80.5270, aux_0.loss_ce: 0.4921, aux_0.acc_seg: 81.0102, aux_1.loss_ce: 0.5382, aux_1.acc_seg: 79.1151, aux_2.loss_ce: 0.1565, aux_2.loss_dice: 0.4204, aux_2.acc_seg: 95.9584, aux_3.loss_ce: 1.6428, aux_3.acc_seg: 47.9123, loss: 3.7336
2023-05-23 22:38:39,058 - mmseg - INFO - Iter [150/10000]	lr: 7.350e-02, eta: 2:39:30, time: 0.754, data_time: 0.185, memory: 17038, decode.loss_ce: 0.3263, decode.acc_seg: 86.6569, aux_0.loss_ce: 0.3372, aux_0.acc_seg: 86.6787, aux_1.loss_ce: 0.3688, aux_1.acc_seg: 85.6666, aux_2.loss_ce: 0.1410, aux_2.loss_dice: 0.3249, aux_2.acc_seg: 96.0562, aux_3.loss_ce: 1.2597, aux_3.acc_seg: 80.0024, loss: 2.7579
2023-05-23 22:39:21,297 - mmseg - INFO - Iter [200/10000]	lr: 9.772e-02, eta: 2:33:28, time: 0.844, data_time: 0.263, memory: 17038, decode.loss_ce: 0.2422, decode.acc_seg: 89.9377, aux_0.loss_ce: 0.2556, aux_0.acc_seg: 89.7334, aux_1.loss_ce: 0.2814, aux_1.acc_seg: 88.7433, aux_2.loss_ce: 0.1343, aux_2.loss_dice: 0.3060, aux_2.acc_seg: 96.1066, aux_3.loss_ce: 0.9857, aux_3.acc_seg: 84.9908, loss: 2.2052
2023-05-23 22:40:02,225 - mmseg - INFO - Iter [250/10000]	lr: 9.776e-02, eta: 2:28:47, time: 0.820, data_time: 0.248, memory: 17038, decode.loss_ce: 0.2323, decode.acc_seg: 90.1734, aux_0.loss_ce: 0.2414, aux_0.acc_seg: 89.9572, aux_1.loss_ce: 0.2657, aux_1.acc_seg: 89.0461, aux_2.loss_ce: 0.1311, aux_2.loss_dice: 0.2965, aux_2.acc_seg: 96.1969, aux_3.loss_ce: 0.8190, aux_3.acc_seg: 87.0777, loss: 1.9860
2023-05-23 22:40:39,589 - mmseg - INFO - Iter [300/10000]	lr: 9.730e-02, eta: 2:23:27, time: 0.746, data_time: 0.177, memory: 17038, decode.loss_ce: 0.2017, decode.acc_seg: 91.4655, aux_0.loss_ce: 0.2129, aux_0.acc_seg: 91.1841, aux_1.loss_ce: 0.2385, aux_1.acc_seg: 90.2784, aux_2.loss_ce: 0.1321, aux_2.loss_dice: 0.2923, aux_2.acc_seg: 96.1201, aux_3.loss_ce: 0.7436, aux_3.acc_seg: 88.8008, loss: 1.8211
2023-05-23 22:41:20,961 - mmseg - INFO - Iter [350/10000]	lr: 9.685e-02, eta: 2:21:21, time: 0.828, data_time: 0.250, memory: 17038, decode.loss_ce: 0.1696, decode.acc_seg: 92.5376, aux_0.loss_ce: 0.1769, aux_0.acc_seg: 92.3061, aux_1.loss_ce: 0.2049, aux_1.acc_seg: 91.2889, aux_2.loss_ce: 0.1282, aux_2.loss_dice: 0.2843, aux_2.acc_seg: 96.2266, aux_3.loss_ce: 0.6494, aux_3.acc_seg: 89.9948, loss: 1.6133
2023-05-23 22:42:01,777 - mmseg - INFO - Iter [400/10000]	lr: 9.640e-02, eta: 2:19:23, time: 0.817, data_time: 0.255, memory: 17038, decode.loss_ce: 0.1673, decode.acc_seg: 92.8523, aux_0.loss_ce: 0.1740, aux_0.acc_seg: 92.6345, aux_1.loss_ce: 0.2049, aux_1.acc_seg: 91.5957, aux_2.loss_ce: 0.1277, aux_2.loss_dice: 0.2832, aux_2.acc_seg: 96.1752, aux_3.loss_ce: 0.6279, aux_3.acc_seg: 90.4514, loss: 1.5850
2023-05-23 22:42:40,622 - mmseg - INFO - Iter [450/10000]	lr: 9.595e-02, eta: 2:16:59, time: 0.777, data_time: 0.193, memory: 17038, decode.loss_ce: 0.1688, decode.acc_seg: 92.7275, aux_0.loss_ce: 0.1759, aux_0.acc_seg: 92.5049, aux_1.loss_ce: 0.2061, aux_1.acc_seg: 91.4910, aux_2.loss_ce: 0.1291, aux_2.loss_dice: 0.2821, aux_2.acc_seg: 96.1634, aux_3.loss_ce: 0.6049, aux_3.acc_seg: 90.3202, loss: 1.5669
2023-05-23 22:43:21,745 - mmseg - INFO - Iter [500/10000]	lr: 9.550e-02, eta: 2:15:40, time: 0.823, data_time: 0.254, memory: 17038, decode.loss_ce: 0.1574, decode.acc_seg: 93.1207, aux_0.loss_ce: 0.1629, aux_0.acc_seg: 92.9103, aux_1.loss_ce: 0.1923, aux_1.acc_seg: 91.9052, aux_2.loss_ce: 0.1249, aux_2.loss_dice: 0.2765, aux_2.acc_seg: 96.2611, aux_3.loss_ce: 0.5673, aux_3.acc_seg: 90.9061, loss: 1.4812
2023-05-23 22:43:59,163 - mmseg - INFO - Iter [550/10000]	lr: 9.505e-02, eta: 2:13:22, time: 0.747, data_time: 0.180, memory: 17038, decode.loss_ce: 0.1417, decode.acc_seg: 93.8228, aux_0.loss_ce: 0.1473, aux_0.acc_seg: 93.6081, aux_1.loss_ce: 0.1776, aux_1.acc_seg: 92.5915, aux_2.loss_ce: 0.1276, aux_2.loss_dice: 0.2785, aux_2.acc_seg: 96.1621, aux_3.loss_ce: 0.5446, aux_3.acc_seg: 91.5007, loss: 1.4174
2023-05-23 22:44:40,670 - mmseg - INFO - Iter [600/10000]	lr: 9.459e-02, eta: 2:12:27, time: 0.830, data_time: 0.259, memory: 17038, decode.loss_ce: 0.1559, decode.acc_seg: 93.0386, aux_0.loss_ce: 0.1602, aux_0.acc_seg: 92.8605, aux_1.loss_ce: 0.1896, aux_1.acc_seg: 91.8807, aux_2.loss_ce: 0.1265, aux_2.loss_dice: 0.2771, aux_2.acc_seg: 96.2302, aux_3.loss_ce: 0.5348, aux_3.acc_seg: 91.0289, loss: 1.4442
2023-05-23 22:45:21,554 - mmseg - INFO - Iter [650/10000]	lr: 9.414e-02, eta: 2:11:25, time: 0.818, data_time: 0.255, memory: 17038, decode.loss_ce: 0.1328, decode.acc_seg: 94.1382, aux_0.loss_ce: 0.1387, aux_0.acc_seg: 93.9136, aux_1.loss_ce: 0.1675, aux_1.acc_seg: 92.9226, aux_2.loss_ce: 0.1266, aux_2.loss_dice: 0.2772, aux_2.acc_seg: 96.2122, aux_3.loss_ce: 0.5112, aux_3.acc_seg: 91.7491, loss: 1.3539
2023-05-23 22:45:59,463 - mmseg - INFO - Iter [700/10000]	lr: 9.369e-02, eta: 2:09:47, time: 0.759, data_time: 0.187, memory: 17038, decode.loss_ce: 0.1243, decode.acc_seg: 94.4607, aux_0.loss_ce: 0.1296, aux_0.acc_seg: 94.2622, aux_1.loss_ce: 0.1586, aux_1.acc_seg: 93.2180, aux_2.loss_ce: 0.1260, aux_2.loss_dice: 0.2736, aux_2.acc_seg: 96.1724, aux_3.loss_ce: 0.4898, aux_3.acc_seg: 92.1005, loss: 1.3021
2023-05-23 22:46:40,716 - mmseg - INFO - Iter [750/10000]	lr: 9.323e-02, eta: 2:08:57, time: 0.824, data_time: 0.252, memory: 17038, decode.loss_ce: 0.1236, decode.acc_seg: 94.4697, aux_0.loss_ce: 0.1288, aux_0.acc_seg: 94.2555, aux_1.loss_ce: 0.1563, aux_1.acc_seg: 93.2968, aux_2.loss_ce: 0.1254, aux_2.loss_dice: 0.2738, aux_2.acc_seg: 96.2174, aux_3.loss_ce: 0.4805, aux_3.acc_seg: 92.0867, loss: 1.2885
2023-05-23 22:47:21,527 - mmseg - INFO - Iter [800/10000]	lr: 9.278e-02, eta: 2:08:04, time: 0.817, data_time: 0.252, memory: 17038, decode.loss_ce: 0.1238, decode.acc_seg: 94.4401, aux_0.loss_ce: 0.1281, aux_0.acc_seg: 94.2763, aux_1.loss_ce: 0.1560, aux_1.acc_seg: 93.2566, aux_2.loss_ce: 0.1239, aux_2.loss_dice: 0.2722, aux_2.acc_seg: 96.2512, aux_3.loss_ce: 0.4721, aux_3.acc_seg: 92.1594, loss: 1.2762
2023-05-23 22:47:59,217 - mmseg - INFO - Iter [850/10000]	lr: 9.233e-02, eta: 2:06:38, time: 0.754, data_time: 0.179, memory: 17038, decode.loss_ce: 0.1176, decode.acc_seg: 94.7041, aux_0.loss_ce: 0.1232, aux_0.acc_seg: 94.4961, aux_1.loss_ce: 0.1500, aux_1.acc_seg: 93.5196, aux_2.loss_ce: 0.1238, aux_2.loss_dice: 0.2724, aux_2.acc_seg: 96.2470, aux_3.loss_ce: 0.4594, aux_3.acc_seg: 92.5118, loss: 1.2463
2023-05-23 22:48:40,011 - mmseg - INFO - Iter [900/10000]	lr: 9.187e-02, eta: 2:05:49, time: 0.815, data_time: 0.244, memory: 17038, decode.loss_ce: 0.1122, decode.acc_seg: 94.8448, aux_0.loss_ce: 0.1165, aux_0.acc_seg: 94.6572, aux_1.loss_ce: 0.1418, aux_1.acc_seg: 93.6849, aux_2.loss_ce: 0.1219, aux_2.loss_dice: 0.2693, aux_2.acc_seg: 96.2887, aux_3.loss_ce: 0.4446, aux_3.acc_seg: 92.5660, loss: 1.2063
2023-05-23 22:49:17,278 - mmseg - INFO - Iter [950/10000]	lr: 9.142e-02, eta: 2:04:28, time: 0.746, data_time: 0.175, memory: 17038, decode.loss_ce: 0.1133, decode.acc_seg: 94.7969, aux_0.loss_ce: 0.1183, aux_0.acc_seg: 94.5944, aux_1.loss_ce: 0.1433, aux_1.acc_seg: 93.5906, aux_2.loss_ce: 0.1224, aux_2.loss_dice: 0.2679, aux_2.acc_seg: 96.2218, aux_3.loss_ce: 0.4371, aux_3.acc_seg: 92.5358, loss: 1.2022
2023-05-23 22:49:58,412 - mmseg - INFO - Saving checkpoint at 1000 iterations
2023-05-23 22:49:58,734 - mmseg - INFO - Exp name: entextnet_stdc1_2x12_720x960_10k_camvid_trainval.py
2023-05-23 22:49:58,734 - mmseg - INFO - Iter [1000/10000]	lr: 9.096e-02, eta: 2:03:49, time: 0.831, data_time: 0.249, memory: 17038, decode.loss_ce: 0.1077, decode.acc_seg: 95.0210, aux_0.loss_ce: 0.1127, aux_0.acc_seg: 94.8032, aux_1.loss_ce: 0.1380, aux_1.acc_seg: 93.8230, aux_2.loss_ce: 0.1227, aux_2.loss_dice: 0.2678, aux_2.acc_seg: 96.2052, aux_3.loss_ce: 0.4358, aux_3.acc_seg: 92.6653, loss: 1.1847
2023-05-23 22:50:18,856 - mmseg - INFO - per class results:
2023-05-23 22:50:18,857 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 49.97 | 67.87 |
|   Building  | 87.84 | 92.97 |
|     Car     | 89.65 | 92.44 |
| Column_Pole | 26.67 | 37.17 |
|    Fence    |  55.1 | 65.93 |
|  Pedestrian | 57.73 | 71.36 |
|     Road    | 94.22 | 97.82 |
|   Sidewalk  | 83.64 | 91.17 |
|  SignSymbol | 11.42 | 11.51 |
|     Sky     | 91.43 | 94.41 |
|     Tree    | 78.76 |  92.6 |
+-------------+-------+-------+
2023-05-23 22:50:18,857 - mmseg - INFO - Summary:
2023-05-23 22:50:18,858 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 92.78 | 66.04 | 74.11 |
+-------+-------+-------+
2023-05-23 22:50:19,057 - mmseg - INFO - Now best checkpoint is saved as best_mIoU_iter_1000.pth.
2023-05-23 22:50:19,057 - mmseg - INFO - Best mIoU is 0.6604 at 1000 iter.
2023-05-23 22:50:19,057 - mmseg - INFO - Exp name: entextnet_stdc1_2x12_720x960_10k_camvid_trainval.py
2023-05-23 22:50:19,058 - mmseg - INFO - Iter(val) [117]	aAcc: 0.9278, mIoU: 0.6604, mAcc: 0.7411, IoU.Bicyclist: 0.4997, IoU.Building: 0.8784, IoU.Car: 0.8965, IoU.Column_Pole: 0.2667, IoU.Fence: 0.5510, IoU.Pedestrian: 0.5773, IoU.Road: 0.9422, IoU.Sidewalk: 0.8364, IoU.SignSymbol: 0.1142, IoU.Sky: 0.9143, IoU.Tree: 0.7876, Acc.Bicyclist: 0.6787, Acc.Building: 0.9297, Acc.Car: 0.9244, Acc.Column_Pole: 0.3717, Acc.Fence: 0.6593, Acc.Pedestrian: 0.7136, Acc.Road: 0.9782, Acc.Sidewalk: 0.9117, Acc.SignSymbol: 0.1151, Acc.Sky: 0.9441, Acc.Tree: 0.9260
2023-05-23 22:51:00,739 - mmseg - INFO - Iter [1050/10000]	lr: 9.051e-02, eta: 2:06:03, time: 1.238, data_time: 0.660, memory: 17038, decode.loss_ce: 0.1149, decode.acc_seg: 94.7703, aux_0.loss_ce: 0.1198, aux_0.acc_seg: 94.5686, aux_1.loss_ce: 0.1453, aux_1.acc_seg: 93.6001, aux_2.loss_ce: 0.1227, aux_2.loss_dice: 0.2688, aux_2.acc_seg: 96.2336, aux_3.loss_ce: 0.4362, aux_3.acc_seg: 92.5366, loss: 1.2076
2023-05-23 22:51:38,717 - mmseg - INFO - Iter [1100/10000]	lr: 9.005e-02, eta: 2:04:47, time: 0.760, data_time: 0.187, memory: 17038, decode.loss_ce: 0.1091, decode.acc_seg: 94.9165, aux_0.loss_ce: 0.1135, aux_0.acc_seg: 94.7236, aux_1.loss_ce: 0.1378, aux_1.acc_seg: 93.7346, aux_2.loss_ce: 0.1216, aux_2.loss_dice: 0.2669, aux_2.acc_seg: 96.2719, aux_3.loss_ce: 0.4221, aux_3.acc_seg: 92.7201, loss: 1.1711
2023-05-23 22:52:19,912 - mmseg - INFO - Iter [1150/10000]	lr: 8.960e-02, eta: 2:03:58, time: 0.823, data_time: 0.249, memory: 17038, decode.loss_ce: 0.1098, decode.acc_seg: 95.0228, aux_0.loss_ce: 0.1149, aux_0.acc_seg: 94.7963, aux_1.loss_ce: 0.1400, aux_1.acc_seg: 93.8348, aux_2.loss_ce: 0.1231, aux_2.loss_dice: 0.2687, aux_2.acc_seg: 96.2314, aux_3.loss_ce: 0.4289, aux_3.acc_seg: 92.7516, loss: 1.1854
2023-05-23 22:53:00,484 - mmseg - INFO - Iter [1200/10000]	lr: 8.914e-02, eta: 2:03:05, time: 0.811, data_time: 0.237, memory: 17038, decode.loss_ce: 0.1038, decode.acc_seg: 95.1901, aux_0.loss_ce: 0.1086, aux_0.acc_seg: 94.9927, aux_1.loss_ce: 0.1321, aux_1.acc_seg: 94.0297, aux_2.loss_ce: 0.1224, aux_2.loss_dice: 0.2661, aux_2.acc_seg: 96.1934, aux_3.loss_ce: 0.4154, aux_3.acc_seg: 93.0059, loss: 1.1484
2023-05-23 22:53:38,417 - mmseg - INFO - Iter [1250/10000]	lr: 8.869e-02, eta: 2:01:55, time: 0.758, data_time: 0.186, memory: 17038, decode.loss_ce: 0.1001, decode.acc_seg: 95.3373, aux_0.loss_ce: 0.1049, aux_0.acc_seg: 95.1383, aux_1.loss_ce: 0.1271, aux_1.acc_seg: 94.2204, aux_2.loss_ce: 0.1205, aux_2.loss_dice: 0.2651, aux_2.acc_seg: 96.2770, aux_3.loss_ce: 0.4122, aux_3.acc_seg: 93.0603, loss: 1.1298
2023-05-23 22:54:19,442 - mmseg - INFO - Iter [1300/10000]	lr: 8.823e-02, eta: 2:01:08, time: 0.821, data_time: 0.261, memory: 17038, decode.loss_ce: 0.1088, decode.acc_seg: 95.0238, aux_0.loss_ce: 0.1136, aux_0.acc_seg: 94.8537, aux_1.loss_ce: 0.1371, aux_1.acc_seg: 93.8770, aux_2.loss_ce: 0.1220, aux_2.loss_dice: 0.2657, aux_2.acc_seg: 96.2278, aux_3.loss_ce: 0.4117, aux_3.acc_seg: 92.9296, loss: 1.1589
2023-05-23 22:55:00,746 - mmseg - INFO - Iter [1350/10000]	lr: 8.777e-02, eta: 2:00:23, time: 0.825, data_time: 0.259, memory: 17038, decode.loss_ce: 0.1044, decode.acc_seg: 95.1140, aux_0.loss_ce: 0.1092, aux_0.acc_seg: 94.9185, aux_1.loss_ce: 0.1324, aux_1.acc_seg: 93.9189, aux_2.loss_ce: 0.1207, aux_2.loss_dice: 0.2646, aux_2.acc_seg: 96.2483, aux_3.loss_ce: 0.4034, aux_3.acc_seg: 93.0441, loss: 1.1348
2023-05-23 22:55:38,258 - mmseg - INFO - Iter [1400/10000]	lr: 8.732e-02, eta: 1:59:15, time: 0.750, data_time: 0.179, memory: 17038, decode.loss_ce: 0.0976, decode.acc_seg: 95.4031, aux_0.loss_ce: 0.1018, aux_0.acc_seg: 95.2211, aux_1.loss_ce: 0.1235, aux_1.acc_seg: 94.2831, aux_2.loss_ce: 0.1219, aux_2.loss_dice: 0.2644, aux_2.acc_seg: 96.1715, aux_3.loss_ce: 0.3984, aux_3.acc_seg: 93.1815, loss: 1.1076
2023-05-23 22:56:18,959 - mmseg - INFO - Iter [1450/10000]	lr: 8.686e-02, eta: 1:58:28, time: 0.814, data_time: 0.252, memory: 17038, decode.loss_ce: 0.0973, decode.acc_seg: 95.4210, aux_0.loss_ce: 0.1022, aux_0.acc_seg: 95.2423, aux_1.loss_ce: 0.1248, aux_1.acc_seg: 94.2733, aux_2.loss_ce: 0.1219, aux_2.loss_dice: 0.2642, aux_2.acc_seg: 96.1973, aux_3.loss_ce: 0.3947, aux_3.acc_seg: 93.2098, loss: 1.1051
2023-05-23 22:56:56,432 - mmseg - INFO - Iter [1500/10000]	lr: 8.640e-02, eta: 1:57:24, time: 0.749, data_time: 0.184, memory: 17038, decode.loss_ce: 0.0951, decode.acc_seg: 95.5386, aux_0.loss_ce: 0.0990, aux_0.acc_seg: 95.3997, aux_1.loss_ce: 0.1211, aux_1.acc_seg: 94.4232, aux_2.loss_ce: 0.1203, aux_2.loss_dice: 0.2635, aux_2.acc_seg: 96.2518, aux_3.loss_ce: 0.3904, aux_3.acc_seg: 93.4223, loss: 1.0894
2023-05-23 22:57:38,104 - mmseg - INFO - Iter [1550/10000]	lr: 8.594e-02, eta: 1:56:43, time: 0.834, data_time: 0.259, memory: 17038, decode.loss_ce: 0.0949, decode.acc_seg: 95.5910, aux_0.loss_ce: 0.0988, aux_0.acc_seg: 95.4385, aux_1.loss_ce: 0.1215, aux_1.acc_seg: 94.4896, aux_2.loss_ce: 0.1209, aux_2.loss_dice: 0.2637, aux_2.acc_seg: 96.2296, aux_3.loss_ce: 0.3931, aux_3.acc_seg: 93.3650, loss: 1.0928
2023-05-23 22:58:18,770 - mmseg - INFO - Iter [1600/10000]	lr: 8.549e-02, eta: 1:55:58, time: 0.813, data_time: 0.247, memory: 17038, decode.loss_ce: 0.0969, decode.acc_seg: 95.4715, aux_0.loss_ce: 0.1002, aux_0.acc_seg: 95.3406, aux_1.loss_ce: 0.1231, aux_1.acc_seg: 94.3815, aux_2.loss_ce: 0.1229, aux_2.loss_dice: 0.2649, aux_2.acc_seg: 96.1889, aux_3.loss_ce: 0.3916, aux_3.acc_seg: 93.3281, loss: 1.0995
2023-05-23 22:58:56,724 - mmseg - INFO - Iter [1650/10000]	lr: 8.503e-02, eta: 1:54:59, time: 0.760, data_time: 0.192, memory: 17038, decode.loss_ce: 0.0962, decode.acc_seg: 95.4687, aux_0.loss_ce: 0.1004, aux_0.acc_seg: 95.3029, aux_1.loss_ce: 0.1230, aux_1.acc_seg: 94.3319, aux_2.loss_ce: 0.1205, aux_2.loss_dice: 0.2628, aux_2.acc_seg: 96.2088, aux_3.loss_ce: 0.3866, aux_3.acc_seg: 93.3110, loss: 1.0895
2023-05-23 22:59:39,976 - mmseg - INFO - Iter [1700/10000]	lr: 8.457e-02, eta: 1:54:27, time: 0.864, data_time: 0.285, memory: 17038, decode.loss_ce: 0.1001, decode.acc_seg: 95.3268, aux_0.loss_ce: 0.1044, aux_0.acc_seg: 95.1566, aux_1.loss_ce: 0.1265, aux_1.acc_seg: 94.2063, aux_2.loss_ce: 0.1218, aux_2.loss_dice: 0.2624, aux_2.acc_seg: 96.1701, aux_3.loss_ce: 0.3896, aux_3.acc_seg: 93.1695, loss: 1.1049
2023-05-23 23:00:39,438 - mmseg - INFO - Iter [1750/10000]	lr: 8.411e-02, eta: 1:55:11, time: 1.189, data_time: 0.265, memory: 17038, decode.loss_ce: 0.0977, decode.acc_seg: 95.4142, aux_0.loss_ce: 0.1023, aux_0.acc_seg: 95.2290, aux_1.loss_ce: 0.1237, aux_1.acc_seg: 94.2713, aux_2.loss_ce: 0.1197, aux_2.loss_dice: 0.2619, aux_2.acc_seg: 96.2487, aux_3.loss_ce: 0.3822, aux_3.acc_seg: 93.4026, loss: 1.0874
2023-05-23 23:01:38,858 - mmseg - INFO - Iter [1800/10000]	lr: 8.365e-02, eta: 1:55:49, time: 1.189, data_time: 0.189, memory: 17038, decode.loss_ce: 0.0921, decode.acc_seg: 95.6191, aux_0.loss_ce: 0.0964, aux_0.acc_seg: 95.4465, aux_1.loss_ce: 0.1167, aux_1.acc_seg: 94.5566, aux_2.loss_ce: 0.1206, aux_2.loss_dice: 0.2625, aux_2.acc_seg: 96.2169, aux_3.loss_ce: 0.3796, aux_3.acc_seg: 93.5196, loss: 1.0679
2023-05-23 23:02:40,729 - mmseg - INFO - Iter [1850/10000]	lr: 8.319e-02, eta: 1:56:32, time: 1.237, data_time: 0.268, memory: 17038, decode.loss_ce: 0.0907, decode.acc_seg: 95.6480, aux_0.loss_ce: 0.0947, aux_0.acc_seg: 95.4959, aux_1.loss_ce: 0.1158, aux_1.acc_seg: 94.5595, aux_2.loss_ce: 0.1194, aux_2.loss_dice: 0.2606, aux_2.acc_seg: 96.2230, aux_3.loss_ce: 0.3741, aux_3.acc_seg: 93.5449, loss: 1.0552
2023-05-23 23:03:40,718 - mmseg - INFO - Iter [1900/10000]	lr: 8.273e-02, eta: 1:57:02, time: 1.199, data_time: 0.192, memory: 17038, decode.loss_ce: 0.0916, decode.acc_seg: 95.5491, aux_0.loss_ce: 0.0947, aux_0.acc_seg: 95.4454, aux_1.loss_ce: 0.1159, aux_1.acc_seg: 94.4957, aux_2.loss_ce: 0.1184, aux_2.loss_dice: 0.2596, aux_2.acc_seg: 96.2604, aux_3.loss_ce: 0.3704, aux_3.acc_seg: 93.5439, loss: 1.0506
2023-05-23 23:04:41,281 - mmseg - INFO - Iter [1950/10000]	lr: 8.227e-02, eta: 1:57:30, time: 1.211, data_time: 0.260, memory: 17038, decode.loss_ce: 0.0879, decode.acc_seg: 95.8399, aux_0.loss_ce: 0.0919, aux_0.acc_seg: 95.6909, aux_1.loss_ce: 0.1124, aux_1.acc_seg: 94.7680, aux_2.loss_ce: 0.1192, aux_2.loss_dice: 0.2602, aux_2.acc_seg: 96.2551, aux_3.loss_ce: 0.3713, aux_3.acc_seg: 93.7339, loss: 1.0429
2023-05-23 23:05:44,753 - mmseg - INFO - Saving checkpoint at 2000 iterations
2023-05-23 23:05:45,075 - mmseg - INFO - Exp name: entextnet_stdc1_2x12_720x960_10k_camvid_trainval.py
2023-05-23 23:05:45,075 - mmseg - INFO - Iter [2000/10000]	lr: 8.181e-02, eta: 1:58:07, time: 1.278, data_time: 0.274, memory: 17038, decode.loss_ce: 0.0844, decode.acc_seg: 95.9319, aux_0.loss_ce: 0.0884, aux_0.acc_seg: 95.7785, aux_1.loss_ce: 0.1083, aux_1.acc_seg: 94.8754, aux_2.loss_ce: 0.1179, aux_2.loss_dice: 0.2581, aux_2.acc_seg: 96.2445, aux_3.loss_ce: 0.3618, aux_3.acc_seg: 93.8196, loss: 1.0189
2023-05-23 23:06:36,023 - mmseg - INFO - per class results:
2023-05-23 23:06:36,024 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 63.03 | 73.54 |
|   Building  |  87.6 | 93.19 |
|     Car     | 91.01 | 95.01 |
| Column_Pole | 24.14 | 28.04 |
|    Fence    | 54.48 | 59.57 |
|  Pedestrian | 65.41 | 81.63 |
|     Road    | 95.51 | 98.42 |
|   Sidewalk  | 87.25 | 92.31 |
|  SignSymbol | 28.37 | 29.51 |
|     Sky     | 91.96 | 95.45 |
|     Tree    | 78.52 | 93.11 |
+-------------+-------+-------+
2023-05-23 23:06:36,024 - mmseg - INFO - Summary:
2023-05-23 23:06:36,025 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 93.38 | 69.75 | 76.34 |
+-------+-------+-------+
2023-05-23 23:06:36,027 - mmseg - INFO - The previous best checkpoint /tmp2/linchiayi/mmsegmentation/work_dirs/entextnet_stdc1_2x12_720x960_10k_camvid_trainval/best_mIoU_iter_1000.pth was removed
2023-05-23 23:06:36,214 - mmseg - INFO - Now best checkpoint is saved as best_mIoU_iter_2000.pth.
2023-05-23 23:06:36,214 - mmseg - INFO - Best mIoU is 0.6975 at 2000 iter.
2023-05-23 23:06:36,214 - mmseg - INFO - Exp name: entextnet_stdc1_2x12_720x960_10k_camvid_trainval.py
2023-05-23 23:06:36,214 - mmseg - INFO - Iter(val) [117]	aAcc: 0.9338, mIoU: 0.6975, mAcc: 0.7634, IoU.Bicyclist: 0.6303, IoU.Building: 0.8760, IoU.Car: 0.9101, IoU.Column_Pole: 0.2414, IoU.Fence: 0.5448, IoU.Pedestrian: 0.6541, IoU.Road: 0.9551, IoU.Sidewalk: 0.8725, IoU.SignSymbol: 0.2837, IoU.Sky: 0.9196, IoU.Tree: 0.7852, Acc.Bicyclist: 0.7354, Acc.Building: 0.9319, Acc.Car: 0.9501, Acc.Column_Pole: 0.2804, Acc.Fence: 0.5957, Acc.Pedestrian: 0.8163, Acc.Road: 0.9842, Acc.Sidewalk: 0.9231, Acc.SignSymbol: 0.2951, Acc.Sky: 0.9545, Acc.Tree: 0.9311
2023-05-23 23:07:35,683 - mmseg - INFO - Iter [2050/10000]	lr: 8.135e-02, eta: 2:01:39, time: 2.210, data_time: 1.209, memory: 17038, decode.loss_ce: 0.0857, decode.acc_seg: 95.9070, aux_0.loss_ce: 0.0896, aux_0.acc_seg: 95.7774, aux_1.loss_ce: 0.1100, aux_1.acc_seg: 94.8740, aux_2.loss_ce: 0.1203, aux_2.loss_dice: 0.2603, aux_2.acc_seg: 96.1774, aux_3.loss_ce: 0.3658, aux_3.acc_seg: 93.8372, loss: 1.0317
2023-05-23 23:08:36,473 - mmseg - INFO - Iter [2100/10000]	lr: 8.089e-02, eta: 2:01:49, time: 1.216, data_time: 0.271, memory: 17038, decode.loss_ce: 0.0871, decode.acc_seg: 95.7853, aux_0.loss_ce: 0.0906, aux_0.acc_seg: 95.6612, aux_1.loss_ce: 0.1107, aux_1.acc_seg: 94.7602, aux_2.loss_ce: 0.1188, aux_2.loss_dice: 0.2582, aux_2.acc_seg: 96.2104, aux_3.loss_ce: 0.3639, aux_3.acc_seg: 93.7189, loss: 1.0292
2023-05-23 23:09:39,300 - mmseg - INFO - Iter [2150/10000]	lr: 8.043e-02, eta: 2:02:03, time: 1.257, data_time: 0.260, memory: 17038, decode.loss_ce: 0.0851, decode.acc_seg: 95.8785, aux_0.loss_ce: 0.0885, aux_0.acc_seg: 95.7605, aux_1.loss_ce: 0.1087, aux_1.acc_seg: 94.8412, aux_2.loss_ce: 0.1193, aux_2.loss_dice: 0.2591, aux_2.acc_seg: 96.1936, aux_3.loss_ce: 0.3616, aux_3.acc_seg: 93.7859, loss: 1.0222
2023-05-23 23:10:38,425 - mmseg - INFO - Iter [2200/10000]	lr: 7.997e-02, eta: 2:02:01, time: 1.182, data_time: 0.183, memory: 17038, decode.loss_ce: 0.0861, decode.acc_seg: 95.8051, aux_0.loss_ce: 0.0897, aux_0.acc_seg: 95.6614, aux_1.loss_ce: 0.1096, aux_1.acc_seg: 94.7487, aux_2.loss_ce: 0.1186, aux_2.loss_dice: 0.2591, aux_2.acc_seg: 96.2683, aux_3.loss_ce: 0.3560, aux_3.acc_seg: 93.7632, loss: 1.0190
2023-05-23 23:11:41,723 - mmseg - INFO - Iter [2250/10000]	lr: 7.951e-02, eta: 2:02:10, time: 1.266, data_time: 0.265, memory: 17038, decode.loss_ce: 0.0822, decode.acc_seg: 95.9914, aux_0.loss_ce: 0.0857, aux_0.acc_seg: 95.8561, aux_1.loss_ce: 0.1057, aux_1.acc_seg: 94.9402, aux_2.loss_ce: 0.1184, aux_2.loss_dice: 0.2583, aux_2.acc_seg: 96.2325, aux_3.loss_ce: 0.3554, aux_3.acc_seg: 93.9091, loss: 1.0058
2023-05-23 23:12:42,656 - mmseg - INFO - Iter [2300/10000]	lr: 7.905e-02, eta: 2:02:09, time: 1.219, data_time: 0.269, memory: 17038, decode.loss_ce: 0.0820, decode.acc_seg: 95.9724, aux_0.loss_ce: 0.0856, aux_0.acc_seg: 95.8262, aux_1.loss_ce: 0.1057, aux_1.acc_seg: 94.9184, aux_2.loss_ce: 0.1188, aux_2.loss_dice: 0.2576, aux_2.acc_seg: 96.1903, aux_3.loss_ce: 0.3532, aux_3.acc_seg: 93.8351, loss: 1.0030
2023-05-23 23:13:41,987 - mmseg - INFO - Iter [2350/10000]	lr: 7.859e-02, eta: 2:01:59, time: 1.187, data_time: 0.189, memory: 17038, decode.loss_ce: 0.0968, decode.acc_seg: 95.5591, aux_0.loss_ce: 0.1010, aux_0.acc_seg: 95.4068, aux_1.loss_ce: 0.1208, aux_1.acc_seg: 94.5097, aux_2.loss_ce: 0.1187, aux_2.loss_dice: 0.2592, aux_2.acc_seg: 96.2512, aux_3.loss_ce: 0.3678, aux_3.acc_seg: 93.6277, loss: 1.0642
2023-05-23 23:14:45,036 - mmseg - INFO - Iter [2400/10000]	lr: 7.812e-02, eta: 2:02:00, time: 1.261, data_time: 0.255, memory: 17038, decode.loss_ce: 0.1015, decode.acc_seg: 95.2617, aux_0.loss_ce: 0.1050, aux_0.acc_seg: 95.1051, aux_1.loss_ce: 0.1287, aux_1.acc_seg: 94.0641, aux_2.loss_ce: 0.1202, aux_2.loss_dice: 0.2603, aux_2.acc_seg: 96.2155, aux_3.loss_ce: 0.3790, aux_3.acc_seg: 93.3583, loss: 1.0946
2023-05-23 23:15:44,229 - mmseg - INFO - Iter [2450/10000]	lr: 7.766e-02, eta: 2:01:46, time: 1.184, data_time: 0.183, memory: 17038, decode.loss_ce: 0.0965, decode.acc_seg: 95.5444, aux_0.loss_ce: 0.1007, aux_0.acc_seg: 95.3935, aux_1.loss_ce: 0.1232, aux_1.acc_seg: 94.4166, aux_2.loss_ce: 0.1190, aux_2.loss_dice: 0.2578, aux_2.acc_seg: 96.1822, aux_3.loss_ce: 0.3657, aux_3.acc_seg: 93.6660, loss: 1.0629
2023-05-23 23:16:44,835 - mmseg - INFO - Iter [2500/10000]	lr: 7.720e-02, eta: 2:01:34, time: 1.212, data_time: 0.260, memory: 17038, decode.loss_ce: 0.0902, decode.acc_seg: 95.7168, aux_0.loss_ce: 0.0928, aux_0.acc_seg: 95.6254, aux_1.loss_ce: 0.1136, aux_1.acc_seg: 94.6858, aux_2.loss_ce: 0.1171, aux_2.loss_dice: 0.2581, aux_2.acc_seg: 96.3121, aux_3.loss_ce: 0.3614, aux_3.acc_seg: 93.7788, loss: 1.0332
2023-05-23 23:17:30,624 - mmseg - INFO - Iter [2550/10000]	lr: 7.674e-02, eta: 2:00:37, time: 0.916, data_time: 0.277, memory: 17038, decode.loss_ce: 0.1103, decode.acc_seg: 94.9931, aux_0.loss_ce: 0.1133, aux_0.acc_seg: 94.8778, aux_1.loss_ce: 0.1340, aux_1.acc_seg: 93.9605, aux_2.loss_ce: 0.1215, aux_2.loss_dice: 0.2626, aux_2.acc_seg: 96.2252, aux_3.loss_ce: 0.3758, aux_3.acc_seg: 93.1549, loss: 1.1175
2023-05-23 23:18:15,708 - mmseg - INFO - Iter [2600/10000]	lr: 7.627e-02, eta: 1:59:38, time: 0.901, data_time: 0.201, memory: 17038, decode.loss_ce: 0.0983, decode.acc_seg: 95.4089, aux_0.loss_ce: 0.1018, aux_0.acc_seg: 95.2912, aux_1.loss_ce: 0.1233, aux_1.acc_seg: 94.3280, aux_2.loss_ce: 0.1193, aux_2.loss_dice: 0.2604, aux_2.acc_seg: 96.2442, aux_3.loss_ce: 0.3655, aux_3.acc_seg: 93.5251, loss: 1.0686
2023-05-23 23:19:18,105 - mmseg - INFO - Iter [2650/10000]	lr: 7.581e-02, eta: 1:59:28, time: 1.248, data_time: 0.257, memory: 17038, decode.loss_ce: 0.0860, decode.acc_seg: 95.8202, aux_0.loss_ce: 0.0890, aux_0.acc_seg: 95.7047, aux_1.loss_ce: 0.1090, aux_1.acc_seg: 94.8095, aux_2.loss_ce: 0.1180, aux_2.loss_dice: 0.2566, aux_2.acc_seg: 96.2336, aux_3.loss_ce: 0.3508, aux_3.acc_seg: 93.8204, loss: 1.0095
2023-05-23 23:20:21,290 - mmseg - INFO - Iter [2700/10000]	lr: 7.534e-02, eta: 1:59:19, time: 1.264, data_time: 0.261, memory: 17038, decode.loss_ce: 0.0815, decode.acc_seg: 96.0029, aux_0.loss_ce: 0.0848, aux_0.acc_seg: 95.8794, aux_1.loss_ce: 0.1047, aux_1.acc_seg: 94.9711, aux_2.loss_ce: 0.1176, aux_2.loss_dice: 0.2571, aux_2.acc_seg: 96.2461, aux_3.loss_ce: 0.3459, aux_3.acc_seg: 94.0436, loss: 0.9915
2023-05-23 23:21:20,891 - mmseg - INFO - Iter [2750/10000]	lr: 7.488e-02, eta: 1:58:57, time: 1.192, data_time: 0.196, memory: 17038, decode.loss_ce: 0.0831, decode.acc_seg: 95.9427, aux_0.loss_ce: 0.0861, aux_0.acc_seg: 95.8389, aux_1.loss_ce: 0.1059, aux_1.acc_seg: 94.9274, aux_2.loss_ce: 0.1169, aux_2.loss_dice: 0.2557, aux_2.acc_seg: 96.2600, aux_3.loss_ce: 0.3471, aux_3.acc_seg: 93.9592, loss: 0.9949
2023-05-23 23:22:21,188 - mmseg - INFO - Iter [2800/10000]	lr: 7.441e-02, eta: 1:58:37, time: 1.206, data_time: 0.262, memory: 17038, decode.loss_ce: 0.0895, decode.acc_seg: 95.7984, aux_0.loss_ce: 0.0923, aux_0.acc_seg: 95.6769, aux_1.loss_ce: 0.1127, aux_1.acc_seg: 94.7722, aux_2.loss_ce: 0.1191, aux_2.loss_dice: 0.2577, aux_2.acc_seg: 96.2194, aux_3.loss_ce: 0.3519, aux_3.acc_seg: 93.7878, loss: 1.0231
2023-05-23 23:23:20,899 - mmseg - INFO - Iter [2850/10000]	lr: 7.395e-02, eta: 1:58:13, time: 1.194, data_time: 0.195, memory: 17038, decode.loss_ce: 0.0841, decode.acc_seg: 95.9392, aux_0.loss_ce: 0.0870, aux_0.acc_seg: 95.8246, aux_1.loss_ce: 0.1064, aux_1.acc_seg: 94.9389, aux_2.loss_ce: 0.1181, aux_2.loss_dice: 0.2572, aux_2.acc_seg: 96.2352, aux_3.loss_ce: 0.3437, aux_3.acc_seg: 93.9819, loss: 0.9965
2023-05-23 23:24:24,060 - mmseg - INFO - Iter [2900/10000]	lr: 7.348e-02, eta: 1:57:57, time: 1.264, data_time: 0.265, memory: 17038, decode.loss_ce: 0.0818, decode.acc_seg: 96.0497, aux_0.loss_ce: 0.0850, aux_0.acc_seg: 95.9267, aux_1.loss_ce: 0.1045, aux_1.acc_seg: 95.0316, aux_2.loss_ce: 0.1181, aux_2.loss_dice: 0.2564, aux_2.acc_seg: 96.2263, aux_3.loss_ce: 0.3417, aux_3.acc_seg: 94.0787, loss: 0.9875
2023-05-23 23:25:26,983 - mmseg - INFO - Iter [2950/10000]	lr: 7.302e-02, eta: 1:57:38, time: 1.258, data_time: 0.263, memory: 17038, decode.loss_ce: 0.0814, decode.acc_seg: 96.0251, aux_0.loss_ce: 0.0846, aux_0.acc_seg: 95.9212, aux_1.loss_ce: 0.1033, aux_1.acc_seg: 95.0501, aux_2.loss_ce: 0.1168, aux_2.loss_dice: 0.2548, aux_2.acc_seg: 96.2477, aux_3.loss_ce: 0.3411, aux_3.acc_seg: 94.0686, loss: 0.9818
2023-05-23 23:26:23,948 - mmseg - INFO - Saving checkpoint at 3000 iterations
2023-05-23 23:26:24,333 - mmseg - INFO - Exp name: entextnet_stdc1_2x12_720x960_10k_camvid_trainval.py
2023-05-23 23:26:24,334 - mmseg - INFO - Iter [3000/10000]	lr: 7.255e-02, eta: 1:57:05, time: 1.149, data_time: 0.189, memory: 17038, decode.loss_ce: 0.0818, decode.acc_seg: 96.0152, aux_0.loss_ce: 0.0847, aux_0.acc_seg: 95.9105, aux_1.loss_ce: 0.1048, aux_1.acc_seg: 94.9925, aux_2.loss_ce: 0.1182, aux_2.loss_dice: 0.2570, aux_2.acc_seg: 96.2064, aux_3.loss_ce: 0.3455, aux_3.acc_seg: 94.0064, loss: 0.9919
2023-05-23 23:27:58,379 - mmseg - INFO - per class results:
2023-05-23 23:27:58,380 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 65.77 |  74.7 |
|   Building  | 88.31 | 94.87 |
|     Car     | 91.31 | 95.27 |
| Column_Pole | 29.27 | 35.69 |
|    Fence    | 56.78 | 62.33 |
|  Pedestrian | 67.33 | 78.87 |
|     Road    | 95.58 |  97.5 |
|   Sidewalk  | 88.12 | 94.78 |
|  SignSymbol | 24.49 | 24.79 |
|     Sky     | 90.71 | 92.43 |
|     Tree    | 79.24 | 94.43 |
+-------------+-------+-------+
2023-05-23 23:27:58,380 - mmseg - INFO - Summary:
2023-05-23 23:27:58,381 - mmseg - INFO - 
+------+-------+-------+
| aAcc |  mIoU |  mAcc |
+------+-------+-------+
| 93.5 | 70.63 | 76.88 |
+------+-------+-------+
2023-05-23 23:27:58,383 - mmseg - INFO - The previous best checkpoint /tmp2/linchiayi/mmsegmentation/work_dirs/entextnet_stdc1_2x12_720x960_10k_camvid_trainval/best_mIoU_iter_2000.pth was removed
2023-05-23 23:27:58,597 - mmseg - INFO - Now best checkpoint is saved as best_mIoU_iter_3000.pth.
2023-05-23 23:27:58,597 - mmseg - INFO - Best mIoU is 0.7063 at 3000 iter.
2023-05-23 23:27:58,597 - mmseg - INFO - Exp name: entextnet_stdc1_2x12_720x960_10k_camvid_trainval.py
2023-05-23 23:27:58,598 - mmseg - INFO - Iter(val) [117]	aAcc: 0.9350, mIoU: 0.7063, mAcc: 0.7688, IoU.Bicyclist: 0.6577, IoU.Building: 0.8831, IoU.Car: 0.9131, IoU.Column_Pole: 0.2927, IoU.Fence: 0.5678, IoU.Pedestrian: 0.6733, IoU.Road: 0.9558, IoU.Sidewalk: 0.8812, IoU.SignSymbol: 0.2449, IoU.Sky: 0.9071, IoU.Tree: 0.7924, Acc.Bicyclist: 0.7470, Acc.Building: 0.9487, Acc.Car: 0.9527, Acc.Column_Pole: 0.3569, Acc.Fence: 0.6233, Acc.Pedestrian: 0.7887, Acc.Road: 0.9750, Acc.Sidewalk: 0.9478, Acc.SignSymbol: 0.2479, Acc.Sky: 0.9243, Acc.Tree: 0.9443
2023-05-23 23:29:01,449 - mmseg - INFO - Iter [3050/10000]	lr: 7.208e-02, eta: 2:00:19, time: 3.140, data_time: 2.154, memory: 17038, decode.loss_ce: 0.0837, decode.acc_seg: 95.9209, aux_0.loss_ce: 0.0866, aux_0.acc_seg: 95.8155, aux_1.loss_ce: 0.1056, aux_1.acc_seg: 94.9393, aux_2.loss_ce: 0.1188, aux_2.loss_dice: 0.2563, aux_2.acc_seg: 96.1603, aux_3.loss_ce: 0.3430, aux_3.acc_seg: 94.0002, loss: 0.9940
2023-05-23 23:30:03,372 - mmseg - INFO - Iter [3100/10000]	lr: 7.162e-02, eta: 1:59:49, time: 1.239, data_time: 0.266, memory: 17038, decode.loss_ce: 0.0797, decode.acc_seg: 96.1106, aux_0.loss_ce: 0.0821, aux_0.acc_seg: 96.0326, aux_1.loss_ce: 0.1010, aux_1.acc_seg: 95.1654, aux_2.loss_ce: 0.1175, aux_2.loss_dice: 0.2556, aux_2.acc_seg: 96.2136, aux_3.loss_ce: 0.3403, aux_3.acc_seg: 94.1750, loss: 0.9762
2023-05-23 23:31:02,703 - mmseg - INFO - Iter [3150/10000]	lr: 7.115e-02, eta: 1:59:12, time: 1.187, data_time: 0.194, memory: 17038, decode.loss_ce: 0.0804, decode.acc_seg: 96.0894, aux_0.loss_ce: 0.0832, aux_0.acc_seg: 96.0048, aux_1.loss_ce: 0.1017, aux_1.acc_seg: 95.1456, aux_2.loss_ce: 0.1184, aux_2.loss_dice: 0.2571, aux_2.acc_seg: 96.2011, aux_3.loss_ce: 0.3399, aux_3.acc_seg: 94.1491, loss: 0.9808
2023-05-23 23:32:05,428 - mmseg - INFO - Iter [3200/10000]	lr: 7.068e-02, eta: 1:58:43, time: 1.255, data_time: 0.270, memory: 17038, decode.loss_ce: 0.0761, decode.acc_seg: 96.2230, aux_0.loss_ce: 0.0790, aux_0.acc_seg: 96.1291, aux_1.loss_ce: 0.0974, aux_1.acc_seg: 95.2558, aux_2.loss_ce: 0.1170, aux_2.loss_dice: 0.2551, aux_2.acc_seg: 96.2346, aux_3.loss_ce: 0.3336, aux_3.acc_seg: 94.1965, loss: 0.9582
2023-05-23 23:33:07,616 - mmseg - INFO - Iter [3250/10000]	lr: 7.022e-02, eta: 1:58:11, time: 1.243, data_time: 0.252, memory: 17038, decode.loss_ce: 0.0788, decode.acc_seg: 96.0652, aux_0.loss_ce: 0.0818, aux_0.acc_seg: 95.9703, aux_1.loss_ce: 0.1005, aux_1.acc_seg: 95.0869, aux_2.loss_ce: 0.1165, aux_2.loss_dice: 0.2540, aux_2.acc_seg: 96.2140, aux_3.loss_ce: 0.3337, aux_3.acc_seg: 94.1614, loss: 0.9654
2023-05-23 23:34:05,260 - mmseg - INFO - Iter [3300/10000]	lr: 6.975e-02, eta: 1:57:28, time: 1.153, data_time: 0.187, memory: 17038, decode.loss_ce: 0.0811, decode.acc_seg: 96.0164, aux_0.loss_ce: 0.0840, aux_0.acc_seg: 95.9357, aux_1.loss_ce: 0.1022, aux_1.acc_seg: 95.0898, aux_2.loss_ce: 0.1178, aux_2.loss_dice: 0.2557, aux_2.acc_seg: 96.1865, aux_3.loss_ce: 0.3367, aux_3.acc_seg: 94.0184, loss: 0.9774
2023-05-23 23:34:50,852 - mmseg - INFO - Iter [3350/10000]	lr: 6.928e-02, eta: 1:56:22, time: 0.912, data_time: 0.273, memory: 17038, decode.loss_ce: 0.0814, decode.acc_seg: 95.9999, aux_0.loss_ce: 0.0836, aux_0.acc_seg: 95.9279, aux_1.loss_ce: 0.1021, aux_1.acc_seg: 95.0758, aux_2.loss_ce: 0.1174, aux_2.loss_dice: 0.2553, aux_2.acc_seg: 96.2118, aux_3.loss_ce: 0.3357, aux_3.acc_seg: 94.1008, loss: 0.9755
2023-05-23 23:35:30,474 - mmseg - INFO - Iter [3400/10000]	lr: 6.881e-02, eta: 1:55:04, time: 0.793, data_time: 0.198, memory: 17038, decode.loss_ce: 0.0829, decode.acc_seg: 95.9836, aux_0.loss_ce: 0.0861, aux_0.acc_seg: 95.8758, aux_1.loss_ce: 0.1048, aux_1.acc_seg: 95.0243, aux_2.loss_ce: 0.1167, aux_2.loss_dice: 0.2547, aux_2.acc_seg: 96.2216, aux_3.loss_ce: 0.3350, aux_3.acc_seg: 94.0966, loss: 0.9802
2023-05-23 23:36:20,429 - mmseg - INFO - Iter [3450/10000]	lr: 6.834e-02, eta: 1:54:08, time: 0.999, data_time: 0.258, memory: 17038, decode.loss_ce: 0.0810, decode.acc_seg: 96.0543, aux_0.loss_ce: 0.0837, aux_0.acc_seg: 95.9614, aux_1.loss_ce: 0.1028, aux_1.acc_seg: 95.0863, aux_2.loss_ce: 0.1168, aux_2.loss_dice: 0.2538, aux_2.acc_seg: 96.2157, aux_3.loss_ce: 0.3331, aux_3.acc_seg: 94.1330, loss: 0.9712
2023-05-23 23:37:22,129 - mmseg - INFO - Iter [3500/10000]	lr: 6.787e-02, eta: 1:53:33, time: 1.234, data_time: 0.246, memory: 17038, decode.loss_ce: 0.0805, decode.acc_seg: 96.0404, aux_0.loss_ce: 0.0835, aux_0.acc_seg: 95.9455, aux_1.loss_ce: 0.1024, aux_1.acc_seg: 95.0702, aux_2.loss_ce: 0.1182, aux_2.loss_dice: 0.2554, aux_2.acc_seg: 96.1726, aux_3.loss_ce: 0.3347, aux_3.acc_seg: 94.0807, loss: 0.9746
2023-05-23 23:38:21,443 - mmseg - INFO - Iter [3550/10000]	lr: 6.740e-02, eta: 1:52:53, time: 1.186, data_time: 0.196, memory: 17038, decode.loss_ce: 0.0779, decode.acc_seg: 96.2005, aux_0.loss_ce: 0.0810, aux_0.acc_seg: 96.0933, aux_1.loss_ce: 0.1000, aux_1.acc_seg: 95.2185, aux_2.loss_ce: 0.1179, aux_2.loss_dice: 0.2547, aux_2.acc_seg: 96.1815, aux_3.loss_ce: 0.3318, aux_3.acc_seg: 94.2276, loss: 0.9632
2023-05-23 23:39:23,357 - mmseg - INFO - Iter [3600/10000]	lr: 6.693e-02, eta: 1:52:17, time: 1.238, data_time: 0.249, memory: 17038, decode.loss_ce: 0.0776, decode.acc_seg: 96.1915, aux_0.loss_ce: 0.0802, aux_0.acc_seg: 96.1065, aux_1.loss_ce: 0.0979, aux_1.acc_seg: 95.2753, aux_2.loss_ce: 0.1183, aux_2.loss_dice: 0.2552, aux_2.acc_seg: 96.1661, aux_3.loss_ce: 0.3327, aux_3.acc_seg: 94.2341, loss: 0.9618
2023-05-23 23:40:23,400 - mmseg - INFO - Iter [3650/10000]	lr: 6.646e-02, eta: 1:51:37, time: 1.201, data_time: 0.255, memory: 17038, decode.loss_ce: 0.0756, decode.acc_seg: 96.2218, aux_0.loss_ce: 0.0784, aux_0.acc_seg: 96.1319, aux_1.loss_ce: 0.0957, aux_1.acc_seg: 95.3141, aux_2.loss_ce: 0.1164, aux_2.loss_dice: 0.2528, aux_2.acc_seg: 96.1994, aux_3.loss_ce: 0.3264, aux_3.acc_seg: 94.2601, loss: 0.9453
2023-05-23 23:41:22,423 - mmseg - INFO - Iter [3700/10000]	lr: 6.599e-02, eta: 1:50:55, time: 1.181, data_time: 0.186, memory: 17038, decode.loss_ce: 0.0769, decode.acc_seg: 96.1627, aux_0.loss_ce: 0.0794, aux_0.acc_seg: 96.0723, aux_1.loss_ce: 0.0969, aux_1.acc_seg: 95.2404, aux_2.loss_ce: 0.1163, aux_2.loss_dice: 0.2527, aux_2.acc_seg: 96.2107, aux_3.loss_ce: 0.3248, aux_3.acc_seg: 94.2430, loss: 0.9470
2023-05-23 23:42:24,992 - mmseg - INFO - Iter [3750/10000]	lr: 6.552e-02, eta: 1:50:19, time: 1.251, data_time: 0.256, memory: 17038, decode.loss_ce: 0.0761, decode.acc_seg: 96.2029, aux_0.loss_ce: 0.0791, aux_0.acc_seg: 96.1028, aux_1.loss_ce: 0.0962, aux_1.acc_seg: 95.2574, aux_2.loss_ce: 0.1164, aux_2.loss_dice: 0.2533, aux_2.acc_seg: 96.2255, aux_3.loss_ce: 0.3269, aux_3.acc_seg: 94.1405, loss: 0.9480
2023-05-23 23:43:24,032 - mmseg - INFO - Iter [3800/10000]	lr: 6.505e-02, eta: 1:49:36, time: 1.181, data_time: 0.182, memory: 17038, decode.loss_ce: 0.0748, decode.acc_seg: 96.3212, aux_0.loss_ce: 0.0772, aux_0.acc_seg: 96.2420, aux_1.loss_ce: 0.0946, aux_1.acc_seg: 95.4296, aux_2.loss_ce: 0.1152, aux_2.loss_dice: 0.2532, aux_2.acc_seg: 96.2694, aux_3.loss_ce: 0.3248, aux_3.acc_seg: 94.3374, loss: 0.9397
2023-05-23 23:44:24,333 - mmseg - INFO - Iter [3850/10000]	lr: 6.457e-02, eta: 1:48:54, time: 1.206, data_time: 0.261, memory: 17038, decode.loss_ce: 0.0747, decode.acc_seg: 96.2775, aux_0.loss_ce: 0.0767, aux_0.acc_seg: 96.2089, aux_1.loss_ce: 0.0946, aux_1.acc_seg: 95.3772, aux_2.loss_ce: 0.1177, aux_2.loss_dice: 0.2542, aux_2.acc_seg: 96.1717, aux_3.loss_ce: 0.3249, aux_3.acc_seg: 94.3177, loss: 0.9427
2023-05-23 23:45:27,029 - mmseg - INFO - Iter [3900/10000]	lr: 6.410e-02, eta: 1:48:16, time: 1.254, data_time: 0.262, memory: 17038, decode.loss_ce: 0.0770, decode.acc_seg: 96.2047, aux_0.loss_ce: 0.0795, aux_0.acc_seg: 96.1350, aux_1.loss_ce: 0.0975, aux_1.acc_seg: 95.2793, aux_2.loss_ce: 0.1174, aux_2.loss_dice: 0.2551, aux_2.acc_seg: 96.2011, aux_3.loss_ce: 0.3280, aux_3.acc_seg: 94.2605, loss: 0.9545
2023-05-23 23:46:25,492 - mmseg - INFO - Iter [3950/10000]	lr: 6.363e-02, eta: 1:47:31, time: 1.169, data_time: 0.178, memory: 17038, decode.loss_ce: 0.0729, decode.acc_seg: 96.3654, aux_0.loss_ce: 0.0755, aux_0.acc_seg: 96.2796, aux_1.loss_ce: 0.0920, aux_1.acc_seg: 95.4792, aux_2.loss_ce: 0.1149, aux_2.loss_dice: 0.2507, aux_2.acc_seg: 96.2341, aux_3.loss_ce: 0.3208, aux_3.acc_seg: 94.4024, loss: 0.9268
2023-05-23 23:47:27,705 - mmseg - INFO - Saving checkpoint at 4000 iterations
2023-05-23 23:47:28,028 - mmseg - INFO - Exp name: entextnet_stdc1_2x12_720x960_10k_camvid_trainval.py
2023-05-23 23:47:28,028 - mmseg - INFO - Iter [4000/10000]	lr: 6.315e-02, eta: 1:46:52, time: 1.253, data_time: 0.261, memory: 17038, decode.loss_ce: 0.0739, decode.acc_seg: 96.3284, aux_0.loss_ce: 0.0761, aux_0.acc_seg: 96.2466, aux_1.loss_ce: 0.0935, aux_1.acc_seg: 95.4233, aux_2.loss_ce: 0.1154, aux_2.loss_dice: 0.2528, aux_2.acc_seg: 96.2574, aux_3.loss_ce: 0.3217, aux_3.acc_seg: 94.3525, loss: 0.9334
2023-05-23 23:53:52,438 - mmseg - INFO - per class results:
2023-05-23 23:53:52,455 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 62.32 | 69.67 |
|   Building  | 88.71 | 95.06 |
|     Car     | 90.77 | 95.17 |
| Column_Pole | 21.78 | 23.83 |
|    Fence    | 56.08 | 62.71 |
|  Pedestrian | 66.74 | 82.88 |
|     Road    | 95.77 | 98.32 |
|   Sidewalk  | 88.55 | 93.17 |
|  SignSymbol |  24.0 | 24.58 |
|     Sky     | 92.09 | 95.29 |
|     Tree    |  80.1 | 92.68 |
+-------------+-------+-------+
2023-05-23 23:53:52,455 - mmseg - INFO - Summary:
2023-05-23 23:53:52,455 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 93.81 | 69.72 | 75.76 |
+-------+-------+-------+
2023-05-23 23:53:52,456 - mmseg - INFO - Exp name: entextnet_stdc1_2x12_720x960_10k_camvid_trainval.py
2023-05-23 23:53:52,456 - mmseg - INFO - Iter(val) [117]	aAcc: 0.9381, mIoU: 0.6972, mAcc: 0.7576, IoU.Bicyclist: 0.6232, IoU.Building: 0.8871, IoU.Car: 0.9077, IoU.Column_Pole: 0.2178, IoU.Fence: 0.5608, IoU.Pedestrian: 0.6674, IoU.Road: 0.9577, IoU.Sidewalk: 0.8855, IoU.SignSymbol: 0.2400, IoU.Sky: 0.9209, IoU.Tree: 0.8010, Acc.Bicyclist: 0.6967, Acc.Building: 0.9506, Acc.Car: 0.9517, Acc.Column_Pole: 0.2383, Acc.Fence: 0.6271, Acc.Pedestrian: 0.8288, Acc.Road: 0.9832, Acc.Sidewalk: 0.9317, Acc.SignSymbol: 0.2458, Acc.Sky: 0.9529, Acc.Tree: 0.9268
2023-05-23 23:54:52,405 - mmseg - INFO - Iter [4050/10000]	lr: 6.268e-02, eta: 1:55:32, time: 8.886, data_time: 7.935, memory: 17038, decode.loss_ce: 0.0715, decode.acc_seg: 96.3700, aux_0.loss_ce: 0.0739, aux_0.acc_seg: 96.2961, aux_1.loss_ce: 0.0910, aux_1.acc_seg: 95.4936, aux_2.loss_ce: 0.1154, aux_2.loss_dice: 0.2523, aux_2.acc_seg: 96.2499, aux_3.loss_ce: 0.3177, aux_3.acc_seg: 94.4176, loss: 0.9218
2023-05-23 23:55:51,207 - mmseg - INFO - Iter [4100/10000]	lr: 6.221e-02, eta: 1:54:35, time: 1.176, data_time: 0.189, memory: 17038, decode.loss_ce: 0.0733, decode.acc_seg: 96.3571, aux_0.loss_ce: 0.0756, aux_0.acc_seg: 96.2733, aux_1.loss_ce: 0.0932, aux_1.acc_seg: 95.4635, aux_2.loss_ce: 0.1167, aux_2.loss_dice: 0.2538, aux_2.acc_seg: 96.2054, aux_3.loss_ce: 0.3222, aux_3.acc_seg: 94.4013, loss: 0.9348
2023-05-23 23:56:53,573 - mmseg - INFO - Iter [4150/10000]	lr: 6.173e-02, eta: 1:53:42, time: 1.247, data_time: 0.261, memory: 17038, decode.loss_ce: 0.0714, decode.acc_seg: 96.4085, aux_0.loss_ce: 0.0737, aux_0.acc_seg: 96.3453, aux_1.loss_ce: 0.0911, aux_1.acc_seg: 95.5048, aux_2.loss_ce: 0.1158, aux_2.loss_dice: 0.2522, aux_2.acc_seg: 96.2046, aux_3.loss_ce: 0.3180, aux_3.acc_seg: 94.4323, loss: 0.9222
2023-05-23 23:57:55,572 - mmseg - INFO - Iter [4200/10000]	lr: 6.126e-02, eta: 1:52:49, time: 1.240, data_time: 0.256, memory: 17038, decode.loss_ce: 0.0728, decode.acc_seg: 96.4015, aux_0.loss_ce: 0.0752, aux_0.acc_seg: 96.3501, aux_1.loss_ce: 0.0921, aux_1.acc_seg: 95.5478, aux_2.loss_ce: 0.1171, aux_2.loss_dice: 0.2543, aux_2.acc_seg: 96.1955, aux_3.loss_ce: 0.3251, aux_3.acc_seg: 94.4669, loss: 0.9367
2023-05-23 23:58:53,820 - mmseg - INFO - Iter [4250/10000]	lr: 6.078e-02, eta: 1:51:51, time: 1.165, data_time: 0.208, memory: 17038, decode.loss_ce: 0.0751, decode.acc_seg: 96.3048, aux_0.loss_ce: 0.0771, aux_0.acc_seg: 96.2488, aux_1.loss_ce: 0.0948, aux_1.acc_seg: 95.4174, aux_2.loss_ce: 0.1159, aux_2.loss_dice: 0.2526, aux_2.acc_seg: 96.2206, aux_3.loss_ce: 0.3194, aux_3.acc_seg: 94.4584, loss: 0.9348
2023-05-23 23:59:55,265 - mmseg - INFO - Iter [4300/10000]	lr: 6.031e-02, eta: 1:50:56, time: 1.228, data_time: 0.238, memory: 17038, decode.loss_ce: 0.0717, decode.acc_seg: 96.3883, aux_0.loss_ce: 0.0742, aux_0.acc_seg: 96.3148, aux_1.loss_ce: 0.0914, aux_1.acc_seg: 95.4792, aux_2.loss_ce: 0.1170, aux_2.loss_dice: 0.2531, aux_2.acc_seg: 96.1664, aux_3.loss_ce: 0.3163, aux_3.acc_seg: 94.4504, loss: 0.9238
2023-05-24 00:00:53,788 - mmseg - INFO - Iter [4350/10000]	lr: 5.983e-02, eta: 1:49:58, time: 1.171, data_time: 0.177, memory: 17038, decode.loss_ce: 0.0722, decode.acc_seg: 96.3318, aux_0.loss_ce: 0.0740, aux_0.acc_seg: 96.2895, aux_1.loss_ce: 0.0914, aux_1.acc_seg: 95.4622, aux_2.loss_ce: 0.1151, aux_2.loss_dice: 0.2513, aux_2.acc_seg: 96.2242, aux_3.loss_ce: 0.3150, aux_3.acc_seg: 94.4212, loss: 0.9192
2023-05-24 00:01:54,679 - mmseg - INFO - Iter [4400/10000]	lr: 5.935e-02, eta: 1:49:03, time: 1.218, data_time: 0.231, memory: 17038, decode.loss_ce: 0.0717, decode.acc_seg: 96.3701, aux_0.loss_ce: 0.0737, aux_0.acc_seg: 96.3096, aux_1.loss_ce: 0.0911, aux_1.acc_seg: 95.5012, aux_2.loss_ce: 0.1162, aux_2.loss_dice: 0.2524, aux_2.acc_seg: 96.1899, aux_3.loss_ce: 0.3176, aux_3.acc_seg: 94.4005, loss: 0.9227
2023-05-24 00:02:54,908 - mmseg - INFO - Iter [4450/10000]	lr: 5.888e-02, eta: 1:48:07, time: 1.205, data_time: 0.239, memory: 17038, decode.loss_ce: 0.0713, decode.acc_seg: 96.4593, aux_0.loss_ce: 0.0735, aux_0.acc_seg: 96.4067, aux_1.loss_ce: 0.0910, aux_1.acc_seg: 95.5568, aux_2.loss_ce: 0.1157, aux_2.loss_dice: 0.2518, aux_2.acc_seg: 96.2125, aux_3.loss_ce: 0.3178, aux_3.acc_seg: 94.5015, loss: 0.9210
2023-05-24 00:03:51,337 - mmseg - INFO - Iter [4500/10000]	lr: 5.840e-02, eta: 1:47:06, time: 1.128, data_time: 0.176, memory: 17038, decode.loss_ce: 0.0706, decode.acc_seg: 96.4086, aux_0.loss_ce: 0.0731, aux_0.acc_seg: 96.3274, aux_1.loss_ce: 0.0898, aux_1.acc_seg: 95.5123, aux_2.loss_ce: 0.1160, aux_2.loss_dice: 0.2521, aux_2.acc_seg: 96.2051, aux_3.loss_ce: 0.3146, aux_3.acc_seg: 94.4047, loss: 0.9161
2023-05-24 00:04:52,740 - mmseg - INFO - Iter [4550/10000]	lr: 5.792e-02, eta: 1:46:11, time: 1.228, data_time: 0.239, memory: 17038, decode.loss_ce: 0.0681, decode.acc_seg: 96.5314, aux_0.loss_ce: 0.0706, aux_0.acc_seg: 96.4654, aux_1.loss_ce: 0.0875, aux_1.acc_seg: 95.6465, aux_2.loss_ce: 0.1142, aux_2.loss_dice: 0.2504, aux_2.acc_seg: 96.2650, aux_3.loss_ce: 0.3148, aux_3.acc_seg: 94.5432, loss: 0.9055
2023-05-24 00:05:55,181 - mmseg - INFO - Iter [4600/10000]	lr: 5.744e-02, eta: 1:45:17, time: 1.249, data_time: 0.260, memory: 17038, decode.loss_ce: 0.0711, decode.acc_seg: 96.4849, aux_0.loss_ce: 0.0737, aux_0.acc_seg: 96.4128, aux_1.loss_ce: 0.0904, aux_1.acc_seg: 95.6247, aux_2.loss_ce: 0.1158, aux_2.loss_dice: 0.2525, aux_2.acc_seg: 96.2193, aux_3.loss_ce: 0.3192, aux_3.acc_seg: 94.5377, loss: 0.9227
2023-05-24 00:06:53,999 - mmseg - INFO - Iter [4650/10000]	lr: 5.696e-02, eta: 1:44:19, time: 1.176, data_time: 0.181, memory: 17038, decode.loss_ce: 0.0697, decode.acc_seg: 96.5037, aux_0.loss_ce: 0.0720, aux_0.acc_seg: 96.4454, aux_1.loss_ce: 0.0892, aux_1.acc_seg: 95.6320, aux_2.loss_ce: 0.1158, aux_2.loss_dice: 0.2523, aux_2.acc_seg: 96.1979, aux_3.loss_ce: 0.3161, aux_3.acc_seg: 94.5481, loss: 0.9151
2023-05-24 00:07:53,608 - mmseg - INFO - Iter [4700/10000]	lr: 5.648e-02, eta: 1:43:22, time: 1.192, data_time: 0.252, memory: 17038, decode.loss_ce: 0.0767, decode.acc_seg: 96.1952, aux_0.loss_ce: 0.0781, aux_0.acc_seg: 96.1583, aux_1.loss_ce: 0.0964, aux_1.acc_seg: 95.2953, aux_2.loss_ce: 0.1168, aux_2.loss_dice: 0.2527, aux_2.acc_seg: 96.1663, aux_3.loss_ce: 0.3205, aux_3.acc_seg: 94.3179, loss: 0.9412
2023-05-24 00:08:32,766 - mmseg - INFO - Iter [4750/10000]	lr: 5.600e-02, eta: 1:42:02, time: 0.783, data_time: 0.193, memory: 17038, decode.loss_ce: 0.0721, decode.acc_seg: 96.3896, aux_0.loss_ce: 0.0740, aux_0.acc_seg: 96.3412, aux_1.loss_ce: 0.0906, aux_1.acc_seg: 95.5665, aux_2.loss_ce: 0.1165, aux_2.loss_dice: 0.2519, aux_2.acc_seg: 96.1769, aux_3.loss_ce: 0.3143, aux_3.acc_seg: 94.5455, loss: 0.9194
2023-05-24 00:09:20,194 - mmseg - INFO - Iter [4800/10000]	lr: 5.552e-02, eta: 1:40:52, time: 0.948, data_time: 0.259, memory: 17038, decode.loss_ce: 0.0688, decode.acc_seg: 96.4961, aux_0.loss_ce: 0.0710, aux_0.acc_seg: 96.4277, aux_1.loss_ce: 0.0874, aux_1.acc_seg: 95.6455, aux_2.loss_ce: 0.1147, aux_2.loss_dice: 0.2508, aux_2.acc_seg: 96.2452, aux_3.loss_ce: 0.3106, aux_3.acc_seg: 94.5939, loss: 0.9032
2023-05-24 00:10:21,949 - mmseg - INFO - Iter [4850/10000]	lr: 5.504e-02, eta: 1:39:57, time: 1.235, data_time: 0.255, memory: 17038, decode.loss_ce: 0.0702, decode.acc_seg: 96.4782, aux_0.loss_ce: 0.0722, aux_0.acc_seg: 96.4212, aux_1.loss_ce: 0.0891, aux_1.acc_seg: 95.5974, aux_2.loss_ce: 0.1155, aux_2.loss_dice: 0.2509, aux_2.acc_seg: 96.1869, aux_3.loss_ce: 0.3125, aux_3.acc_seg: 94.5570, loss: 0.9105
2023-05-24 00:11:20,701 - mmseg - INFO - Iter [4900/10000]	lr: 5.456e-02, eta: 1:39:00, time: 1.175, data_time: 0.187, memory: 17038, decode.loss_ce: 0.0716, decode.acc_seg: 96.4394, aux_0.loss_ce: 0.0736, aux_0.acc_seg: 96.3872, aux_1.loss_ce: 0.0904, aux_1.acc_seg: 95.5885, aux_2.loss_ce: 0.1175, aux_2.loss_dice: 0.2526, aux_2.acc_seg: 96.1323, aux_3.loss_ce: 0.3168, aux_3.acc_seg: 94.5292, loss: 0.9226
2023-05-24 00:12:23,272 - mmseg - INFO - Iter [4950/10000]	lr: 5.408e-02, eta: 1:38:06, time: 1.251, data_time: 0.261, memory: 17038, decode.loss_ce: 0.0687, decode.acc_seg: 96.4784, aux_0.loss_ce: 0.0709, aux_0.acc_seg: 96.4195, aux_1.loss_ce: 0.0877, aux_1.acc_seg: 95.5903, aux_2.loss_ce: 0.1140, aux_2.loss_dice: 0.2501, aux_2.acc_seg: 96.2594, aux_3.loss_ce: 0.3089, aux_3.acc_seg: 94.5146, loss: 0.9002
2023-05-24 00:13:25,727 - mmseg - INFO - Saving checkpoint at 5000 iterations
2023-05-24 00:13:26,052 - mmseg - INFO - Exp name: entextnet_stdc1_2x12_720x960_10k_camvid_trainval.py
2023-05-24 00:13:26,053 - mmseg - INFO - Iter [5000/10000]	lr: 5.360e-02, eta: 1:37:12, time: 1.258, data_time: 0.260, memory: 17038, decode.loss_ce: 0.0712, decode.acc_seg: 96.3978, aux_0.loss_ce: 0.0733, aux_0.acc_seg: 96.3463, aux_1.loss_ce: 0.0897, aux_1.acc_seg: 95.5504, aux_2.loss_ce: 0.1147, aux_2.loss_dice: 0.2498, aux_2.acc_seg: 96.2098, aux_3.loss_ce: 0.3100, aux_3.acc_seg: 94.5693, loss: 0.9087
2023-05-24 00:15:12,891 - mmseg - INFO - per class results:
2023-05-24 00:15:12,892 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 64.56 | 77.85 |
|   Building  | 88.65 |  93.9 |
|     Car     | 91.42 | 94.24 |
| Column_Pole | 34.73 | 55.76 |
|    Fence    | 52.63 | 55.91 |
|  Pedestrian | 68.31 | 81.89 |
|     Road    | 95.87 | 98.68 |
|   Sidewalk  | 88.44 |  93.4 |
|  SignSymbol | 35.13 | 38.73 |
|     Sky     | 92.17 | 96.44 |
|     Tree    | 80.72 | 89.35 |
+-------------+-------+-------+
2023-05-24 00:15:12,892 - mmseg - INFO - Summary:
2023-05-24 00:15:12,892 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 93.82 | 72.06 | 79.65 |
+-------+-------+-------+
2023-05-24 00:15:12,894 - mmseg - INFO - The previous best checkpoint /tmp2/linchiayi/mmsegmentation/work_dirs/entextnet_stdc1_2x12_720x960_10k_camvid_trainval/best_mIoU_iter_3000.pth was removed
2023-05-24 00:15:13,084 - mmseg - INFO - Now best checkpoint is saved as best_mIoU_iter_5000.pth.
2023-05-24 00:15:13,084 - mmseg - INFO - Best mIoU is 0.7206 at 5000 iter.
2023-05-24 00:15:13,084 - mmseg - INFO - Exp name: entextnet_stdc1_2x12_720x960_10k_camvid_trainval.py
2023-05-24 00:15:13,084 - mmseg - INFO - Iter(val) [117]	aAcc: 0.9382, mIoU: 0.7206, mAcc: 0.7965, IoU.Bicyclist: 0.6456, IoU.Building: 0.8865, IoU.Car: 0.9142, IoU.Column_Pole: 0.3473, IoU.Fence: 0.5263, IoU.Pedestrian: 0.6831, IoU.Road: 0.9587, IoU.Sidewalk: 0.8844, IoU.SignSymbol: 0.3513, IoU.Sky: 0.9217, IoU.Tree: 0.8072, Acc.Bicyclist: 0.7785, Acc.Building: 0.9390, Acc.Car: 0.9424, Acc.Column_Pole: 0.5576, Acc.Fence: 0.5591, Acc.Pedestrian: 0.8189, Acc.Road: 0.9868, Acc.Sidewalk: 0.9340, Acc.SignSymbol: 0.3873, Acc.Sky: 0.9644, Acc.Tree: 0.8935
2023-05-24 00:16:09,254 - mmseg - INFO - Iter [5050/10000]	lr: 5.312e-02, eta: 1:37:57, time: 3.262, data_time: 2.315, memory: 17038, decode.loss_ce: 0.0697, decode.acc_seg: 96.4974, aux_0.loss_ce: 0.0718, aux_0.acc_seg: 96.4460, aux_1.loss_ce: 0.0887, aux_1.acc_seg: 95.6444, aux_2.loss_ce: 0.1155, aux_2.loss_dice: 0.2521, aux_2.acc_seg: 96.2231, aux_3.loss_ce: 0.3128, aux_3.acc_seg: 94.6018, loss: 0.9104
2023-05-24 00:17:11,940 - mmseg - INFO - Iter [5100/10000]	lr: 5.263e-02, eta: 1:37:00, time: 1.254, data_time: 0.273, memory: 17038, decode.loss_ce: 0.0681, decode.acc_seg: 96.5816, aux_0.loss_ce: 0.0703, aux_0.acc_seg: 96.5254, aux_1.loss_ce: 0.0872, aux_1.acc_seg: 95.7169, aux_2.loss_ce: 0.1176, aux_2.loss_dice: 0.2528, aux_2.acc_seg: 96.1189, aux_3.loss_ce: 0.3124, aux_3.acc_seg: 94.6353, loss: 0.9085
2023-05-24 00:18:14,716 - mmseg - INFO - Iter [5150/10000]	lr: 5.215e-02, eta: 1:36:04, time: 1.255, data_time: 0.266, memory: 17038, decode.loss_ce: 0.0692, decode.acc_seg: 96.5429, aux_0.loss_ce: 0.0709, aux_0.acc_seg: 96.5005, aux_1.loss_ce: 0.0879, aux_1.acc_seg: 95.7099, aux_2.loss_ce: 0.1162, aux_2.loss_dice: 0.2518, aux_2.acc_seg: 96.1646, aux_3.loss_ce: 0.3124, aux_3.acc_seg: 94.6384, loss: 0.9085
2023-05-24 00:19:13,457 - mmseg - INFO - Iter [5200/10000]	lr: 5.167e-02, eta: 1:35:04, time: 1.175, data_time: 0.187, memory: 17038, decode.loss_ce: 0.0673, decode.acc_seg: 96.5794, aux_0.loss_ce: 0.0693, aux_0.acc_seg: 96.5356, aux_1.loss_ce: 0.0859, aux_1.acc_seg: 95.7274, aux_2.loss_ce: 0.1150, aux_2.loss_dice: 0.2510, aux_2.acc_seg: 96.2233, aux_3.loss_ce: 0.3091, aux_3.acc_seg: 94.6341, loss: 0.8976
2023-05-24 00:20:12,813 - mmseg - INFO - Iter [5250/10000]	lr: 5.118e-02, eta: 1:34:05, time: 1.187, data_time: 0.252, memory: 17038, decode.loss_ce: 0.0671, decode.acc_seg: 96.6088, aux_0.loss_ce: 0.0690, aux_0.acc_seg: 96.5552, aux_1.loss_ce: 0.0853, aux_1.acc_seg: 95.7741, aux_2.loss_ce: 0.1146, aux_2.loss_dice: 0.2495, aux_2.acc_seg: 96.2035, aux_3.loss_ce: 0.3079, aux_3.acc_seg: 94.6921, loss: 0.8935
2023-05-24 00:21:11,646 - mmseg - INFO - Iter [5300/10000]	lr: 5.070e-02, eta: 1:33:05, time: 1.177, data_time: 0.187, memory: 17038, decode.loss_ce: 0.0768, decode.acc_seg: 96.1994, aux_0.loss_ce: 0.0779, aux_0.acc_seg: 96.1870, aux_1.loss_ce: 0.0952, aux_1.acc_seg: 95.3843, aux_2.loss_ce: 0.1165, aux_2.loss_dice: 0.2517, aux_2.acc_seg: 96.1527, aux_3.loss_ce: 0.3151, aux_3.acc_seg: 94.3681, loss: 0.9332
2023-05-24 00:22:14,816 - mmseg - INFO - Iter [5350/10000]	lr: 5.021e-02, eta: 1:32:09, time: 1.263, data_time: 0.264, memory: 17038, decode.loss_ce: 0.0736, decode.acc_seg: 96.3684, aux_0.loss_ce: 0.0758, aux_0.acc_seg: 96.3116, aux_1.loss_ce: 0.0931, aux_1.acc_seg: 95.4953, aux_2.loss_ce: 0.1162, aux_2.loss_dice: 0.2518, aux_2.acc_seg: 96.1781, aux_3.loss_ce: 0.3164, aux_3.acc_seg: 94.4539, loss: 0.9267
2023-05-24 00:23:16,929 - mmseg - INFO - Iter [5400/10000]	lr: 4.972e-02, eta: 1:31:11, time: 1.242, data_time: 0.248, memory: 17038, decode.loss_ce: 0.0662, decode.acc_seg: 96.6186, aux_0.loss_ce: 0.0681, aux_0.acc_seg: 96.5597, aux_1.loss_ce: 0.0845, aux_1.acc_seg: 95.7751, aux_2.loss_ce: 0.1143, aux_2.loss_dice: 0.2500, aux_2.acc_seg: 96.2486, aux_3.loss_ce: 0.3033, aux_3.acc_seg: 94.7559, loss: 0.8865
2023-05-24 00:24:13,309 - mmseg - INFO - Iter [5450/10000]	lr: 4.924e-02, eta: 1:30:09, time: 1.128, data_time: 0.187, memory: 17038, decode.loss_ce: 0.0667, decode.acc_seg: 96.5642, aux_0.loss_ce: 0.0687, aux_0.acc_seg: 96.5091, aux_1.loss_ce: 0.0850, aux_1.acc_seg: 95.7098, aux_2.loss_ce: 0.1135, aux_2.loss_dice: 0.2485, aux_2.acc_seg: 96.2561, aux_3.loss_ce: 0.3046, aux_3.acc_seg: 94.6147, loss: 0.8869
2023-05-24 00:25:09,525 - mmseg - INFO - Iter [5500/10000]	lr: 4.875e-02, eta: 1:29:07, time: 1.125, data_time: 0.254, memory: 17038, decode.loss_ce: 0.0683, decode.acc_seg: 96.5238, aux_0.loss_ce: 0.0702, aux_0.acc_seg: 96.4782, aux_1.loss_ce: 0.0867, aux_1.acc_seg: 95.6749, aux_2.loss_ce: 0.1136, aux_2.loss_dice: 0.2500, aux_2.acc_seg: 96.2696, aux_3.loss_ce: 0.3069, aux_3.acc_seg: 94.6094, loss: 0.8957
2023-05-24 00:25:52,828 - mmseg - INFO - Iter [5550/10000]	lr: 4.826e-02, eta: 1:27:55, time: 0.866, data_time: 0.281, memory: 17038, decode.loss_ce: 0.0663, decode.acc_seg: 96.5829, aux_0.loss_ce: 0.0679, aux_0.acc_seg: 96.5334, aux_1.loss_ce: 0.0841, aux_1.acc_seg: 95.7392, aux_2.loss_ce: 0.1128, aux_2.loss_dice: 0.2489, aux_2.acc_seg: 96.3003, aux_3.loss_ce: 0.2995, aux_3.acc_seg: 94.7095, loss: 0.8796
2023-05-24 00:26:47,023 - mmseg - INFO - Iter [5600/10000]	lr: 4.778e-02, eta: 1:26:52, time: 1.084, data_time: 0.188, memory: 17038, decode.loss_ce: 0.0654, decode.acc_seg: 96.6579, aux_0.loss_ce: 0.0672, aux_0.acc_seg: 96.6101, aux_1.loss_ce: 0.0833, aux_1.acc_seg: 95.8331, aux_2.loss_ce: 0.1140, aux_2.loss_dice: 0.2492, aux_2.acc_seg: 96.2123, aux_3.loss_ce: 0.3039, aux_3.acc_seg: 94.7886, loss: 0.8830
2023-05-24 00:27:49,002 - mmseg - INFO - Iter [5650/10000]	lr: 4.729e-02, eta: 1:25:54, time: 1.240, data_time: 0.257, memory: 17038, decode.loss_ce: 0.0679, decode.acc_seg: 96.5122, aux_0.loss_ce: 0.0701, aux_0.acc_seg: 96.4474, aux_1.loss_ce: 0.0869, aux_1.acc_seg: 95.6492, aux_2.loss_ce: 0.1155, aux_2.loss_dice: 0.2501, aux_2.acc_seg: 96.1635, aux_3.loss_ce: 0.3055, aux_3.acc_seg: 94.5321, loss: 0.8960
2023-05-24 00:28:47,424 - mmseg - INFO - Iter [5700/10000]	lr: 4.680e-02, eta: 1:24:55, time: 1.168, data_time: 0.182, memory: 17038, decode.loss_ce: 0.0658, decode.acc_seg: 96.6554, aux_0.loss_ce: 0.0678, aux_0.acc_seg: 96.6187, aux_1.loss_ce: 0.0843, aux_1.acc_seg: 95.8101, aux_2.loss_ce: 0.1157, aux_2.loss_dice: 0.2507, aux_2.acc_seg: 96.1651, aux_3.loss_ce: 0.3056, aux_3.acc_seg: 94.7355, loss: 0.8898
2023-05-24 00:29:47,135 - mmseg - INFO - Iter [5750/10000]	lr: 4.631e-02, eta: 1:23:56, time: 1.194, data_time: 0.247, memory: 17038, decode.loss_ce: 0.0668, decode.acc_seg: 96.6550, aux_0.loss_ce: 0.0686, aux_0.acc_seg: 96.6144, aux_1.loss_ce: 0.0852, aux_1.acc_seg: 95.8314, aux_2.loss_ce: 0.1163, aux_2.loss_dice: 0.2517, aux_2.acc_seg: 96.1636, aux_3.loss_ce: 0.3089, aux_3.acc_seg: 94.7408, loss: 0.8975
2023-05-24 00:30:49,081 - mmseg - INFO - Iter [5800/10000]	lr: 4.582e-02, eta: 1:22:58, time: 1.239, data_time: 0.258, memory: 17038, decode.loss_ce: 0.0680, decode.acc_seg: 96.5927, aux_0.loss_ce: 0.0697, aux_0.acc_seg: 96.5508, aux_1.loss_ce: 0.0861, aux_1.acc_seg: 95.7708, aux_2.loss_ce: 0.1150, aux_2.loss_dice: 0.2520, aux_2.acc_seg: 96.2461, aux_3.loss_ce: 0.3087, aux_3.acc_seg: 94.6997, loss: 0.8996
2023-05-24 00:31:47,360 - mmseg - INFO - Iter [5850/10000]	lr: 4.533e-02, eta: 1:21:58, time: 1.166, data_time: 0.178, memory: 17038, decode.loss_ce: 0.0626, decode.acc_seg: 96.7765, aux_0.loss_ce: 0.0644, aux_0.acc_seg: 96.7318, aux_1.loss_ce: 0.0808, aux_1.acc_seg: 95.9298, aux_2.loss_ce: 0.1130, aux_2.loss_dice: 0.2472, aux_2.acc_seg: 96.2328, aux_3.loss_ce: 0.2997, aux_3.acc_seg: 94.8308, loss: 0.8677
2023-05-24 00:32:49,772 - mmseg - INFO - Iter [5900/10000]	lr: 4.483e-02, eta: 1:21:01, time: 1.248, data_time: 0.265, memory: 17038, decode.loss_ce: 0.0641, decode.acc_seg: 96.7115, aux_0.loss_ce: 0.0660, aux_0.acc_seg: 96.6716, aux_1.loss_ce: 0.0819, aux_1.acc_seg: 95.9048, aux_2.loss_ce: 0.1140, aux_2.loss_dice: 0.2494, aux_2.acc_seg: 96.2327, aux_3.loss_ce: 0.3037, aux_3.acc_seg: 94.7838, loss: 0.8792
2023-05-24 00:33:49,838 - mmseg - INFO - Iter [5950/10000]	lr: 4.434e-02, eta: 1:20:03, time: 1.201, data_time: 0.265, memory: 17038, decode.loss_ce: 0.0667, decode.acc_seg: 96.6670, aux_0.loss_ce: 0.0687, aux_0.acc_seg: 96.6158, aux_1.loss_ce: 0.0852, aux_1.acc_seg: 95.8160, aux_2.loss_ce: 0.1174, aux_2.loss_dice: 0.2521, aux_2.acc_seg: 96.1264, aux_3.loss_ce: 0.3083, aux_3.acc_seg: 94.6968, loss: 0.8985
2023-05-24 00:34:48,256 - mmseg - INFO - Saving checkpoint at 6000 iterations
2023-05-24 00:34:48,593 - mmseg - INFO - Exp name: entextnet_stdc1_2x12_720x960_10k_camvid_trainval.py
2023-05-24 00:34:48,593 - mmseg - INFO - Iter [6000/10000]	lr: 4.385e-02, eta: 1:19:03, time: 1.177, data_time: 0.186, memory: 17038, decode.loss_ce: 0.0650, decode.acc_seg: 96.7010, aux_0.loss_ce: 0.0669, aux_0.acc_seg: 96.6517, aux_1.loss_ce: 0.0830, aux_1.acc_seg: 95.8678, aux_2.loss_ce: 0.1148, aux_2.loss_dice: 0.2495, aux_2.acc_seg: 96.1791, aux_3.loss_ce: 0.3028, aux_3.acc_seg: 94.7683, loss: 0.8821
2023-05-24 00:34:57,335 - mmseg - INFO - per class results:
2023-05-24 00:34:57,336 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 67.38 |  76.9 |
|   Building  | 89.21 | 94.75 |
|     Car     | 91.26 | 94.38 |
| Column_Pole | 31.68 | 38.93 |
|    Fence    | 56.59 | 62.38 |
|  Pedestrian | 69.12 | 79.05 |
|     Road    | 95.99 | 98.82 |
|   Sidewalk  | 88.65 | 93.43 |
|  SignSymbol | 30.65 |  31.5 |
|     Sky     |  91.9 | 96.24 |
|     Tree    | 80.01 | 90.43 |
+-------------+-------+-------+
2023-05-24 00:34:57,336 - mmseg - INFO - Summary:
2023-05-24 00:34:57,336 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 93.98 | 72.04 | 77.89 |
+-------+-------+-------+
2023-05-24 00:34:57,336 - mmseg - INFO - Exp name: entextnet_stdc1_2x12_720x960_10k_camvid_trainval.py
2023-05-24 00:34:57,336 - mmseg - INFO - Iter(val) [117]	aAcc: 0.9398, mIoU: 0.7204, mAcc: 0.7789, IoU.Bicyclist: 0.6738, IoU.Building: 0.8921, IoU.Car: 0.9126, IoU.Column_Pole: 0.3168, IoU.Fence: 0.5659, IoU.Pedestrian: 0.6912, IoU.Road: 0.9599, IoU.Sidewalk: 0.8865, IoU.SignSymbol: 0.3065, IoU.Sky: 0.9190, IoU.Tree: 0.8001, Acc.Bicyclist: 0.7690, Acc.Building: 0.9475, Acc.Car: 0.9438, Acc.Column_Pole: 0.3893, Acc.Fence: 0.6238, Acc.Pedestrian: 0.7905, Acc.Road: 0.9882, Acc.Sidewalk: 0.9343, Acc.SignSymbol: 0.3150, Acc.Sky: 0.9624, Acc.Tree: 0.9043
2023-05-24 00:35:59,037 - mmseg - INFO - Iter [6050/10000]	lr: 4.336e-02, eta: 1:18:11, time: 1.406, data_time: 0.423, memory: 17038, decode.loss_ce: 0.0653, decode.acc_seg: 96.6932, aux_0.loss_ce: 0.0673, aux_0.acc_seg: 96.6466, aux_1.loss_ce: 0.0841, aux_1.acc_seg: 95.8307, aux_2.loss_ce: 0.1173, aux_2.loss_dice: 0.2511, aux_2.acc_seg: 96.0795, aux_3.loss_ce: 0.3072, aux_3.acc_seg: 94.6962, loss: 0.8922
2023-05-24 00:37:01,633 - mmseg - INFO - Iter [6100/10000]	lr: 4.286e-02, eta: 1:17:14, time: 1.252, data_time: 0.261, memory: 17038, decode.loss_ce: 0.0663, decode.acc_seg: 96.6201, aux_0.loss_ce: 0.0677, aux_0.acc_seg: 96.5852, aux_1.loss_ce: 0.0843, aux_1.acc_seg: 95.7828, aux_2.loss_ce: 0.1138, aux_2.loss_dice: 0.2500, aux_2.acc_seg: 96.2585, aux_3.loss_ce: 0.3042, aux_3.acc_seg: 94.6700, loss: 0.8863
2023-05-24 00:37:57,739 - mmseg - INFO - Iter [6150/10000]	lr: 4.237e-02, eta: 1:16:12, time: 1.122, data_time: 0.185, memory: 17038, decode.loss_ce: 0.0660, decode.acc_seg: 96.6714, aux_0.loss_ce: 0.0678, aux_0.acc_seg: 96.6281, aux_1.loss_ce: 0.0841, aux_1.acc_seg: 95.8392, aux_2.loss_ce: 0.1142, aux_2.loss_dice: 0.2502, aux_2.acc_seg: 96.2492, aux_3.loss_ce: 0.3039, aux_3.acc_seg: 94.7401, loss: 0.8862
2023-05-24 00:38:59,870 - mmseg - INFO - Iter [6200/10000]	lr: 4.187e-02, eta: 1:15:14, time: 1.243, data_time: 0.256, memory: 17038, decode.loss_ce: 0.0640, decode.acc_seg: 96.7314, aux_0.loss_ce: 0.0657, aux_0.acc_seg: 96.6985, aux_1.loss_ce: 0.0821, aux_1.acc_seg: 95.9086, aux_2.loss_ce: 0.1146, aux_2.loss_dice: 0.2491, aux_2.acc_seg: 96.1924, aux_3.loss_ce: 0.3030, aux_3.acc_seg: 94.7742, loss: 0.8786
2023-05-24 00:39:58,648 - mmseg - INFO - Iter [6250/10000]	lr: 4.138e-02, eta: 1:14:15, time: 1.175, data_time: 0.188, memory: 17038, decode.loss_ce: 0.0634, decode.acc_seg: 96.7765, aux_0.loss_ce: 0.0650, aux_0.acc_seg: 96.7449, aux_1.loss_ce: 0.0815, aux_1.acc_seg: 95.9646, aux_2.loss_ce: 0.1147, aux_2.loss_dice: 0.2499, aux_2.acc_seg: 96.1921, aux_3.loss_ce: 0.3041, aux_3.acc_seg: 94.8347, loss: 0.8788
2023-05-24 00:41:00,487 - mmseg - INFO - Iter [6300/10000]	lr: 4.088e-02, eta: 1:13:17, time: 1.237, data_time: 0.251, memory: 17038, decode.loss_ce: 0.0655, decode.acc_seg: 96.6271, aux_0.loss_ce: 0.0674, aux_0.acc_seg: 96.5864, aux_1.loss_ce: 0.0834, aux_1.acc_seg: 95.7964, aux_2.loss_ce: 0.1154, aux_2.loss_dice: 0.2493, aux_2.acc_seg: 96.1630, aux_3.loss_ce: 0.3001, aux_3.acc_seg: 94.7060, loss: 0.8811
2023-05-24 00:42:00,471 - mmseg - INFO - Iter [6350/10000]	lr: 4.038e-02, eta: 1:12:18, time: 1.200, data_time: 0.254, memory: 17038, decode.loss_ce: 0.0662, decode.acc_seg: 96.5820, aux_0.loss_ce: 0.0678, aux_0.acc_seg: 96.5527, aux_1.loss_ce: 0.0836, aux_1.acc_seg: 95.7687, aux_2.loss_ce: 0.1137, aux_2.loss_dice: 0.2480, aux_2.acc_seg: 96.2355, aux_3.loss_ce: 0.2997, aux_3.acc_seg: 94.7103, loss: 0.8789
2023-05-24 00:42:57,183 - mmseg - INFO - Iter [6400/10000]	lr: 3.988e-02, eta: 1:11:17, time: 1.134, data_time: 0.191, memory: 17038, decode.loss_ce: 0.0635, decode.acc_seg: 96.6919, aux_0.loss_ce: 0.0653, aux_0.acc_seg: 96.6509, aux_1.loss_ce: 0.0813, aux_1.acc_seg: 95.8569, aux_2.loss_ce: 0.1137, aux_2.loss_dice: 0.2491, aux_2.acc_seg: 96.2344, aux_3.loss_ce: 0.2985, aux_3.acc_seg: 94.7202, loss: 0.8715
2023-05-24 00:43:39,672 - mmseg - INFO - Iter [6450/10000]	lr: 3.938e-02, eta: 1:10:08, time: 0.851, data_time: 0.273, memory: 17038, decode.loss_ce: 0.0639, decode.acc_seg: 96.6862, aux_0.loss_ce: 0.0656, aux_0.acc_seg: 96.6512, aux_1.loss_ce: 0.0815, aux_1.acc_seg: 95.8627, aux_2.loss_ce: 0.1141, aux_2.loss_dice: 0.2485, aux_2.acc_seg: 96.1995, aux_3.loss_ce: 0.3001, aux_3.acc_seg: 94.7261, loss: 0.8737
2023-05-24 00:44:35,882 - mmseg - INFO - Iter [6500/10000]	lr: 3.888e-02, eta: 1:09:07, time: 1.123, data_time: 0.254, memory: 17038, decode.loss_ce: 0.0622, decode.acc_seg: 96.7275, aux_0.loss_ce: 0.0642, aux_0.acc_seg: 96.6771, aux_1.loss_ce: 0.0798, aux_1.acc_seg: 95.8962, aux_2.loss_ce: 0.1128, aux_2.loss_dice: 0.2475, aux_2.acc_seg: 96.2561, aux_3.loss_ce: 0.2941, aux_3.acc_seg: 94.7846, loss: 0.8606
2023-05-24 00:45:34,190 - mmseg - INFO - Iter [6550/10000]	lr: 3.838e-02, eta: 1:08:07, time: 1.166, data_time: 0.177, memory: 17038, decode.loss_ce: 0.0635, decode.acc_seg: 96.7329, aux_0.loss_ce: 0.0654, aux_0.acc_seg: 96.6826, aux_1.loss_ce: 0.0812, aux_1.acc_seg: 95.9084, aux_2.loss_ce: 0.1130, aux_2.loss_dice: 0.2486, aux_2.acc_seg: 96.2600, aux_3.loss_ce: 0.2980, aux_3.acc_seg: 94.8206, loss: 0.8697
2023-05-24 00:46:36,439 - mmseg - INFO - Iter [6600/10000]	lr: 3.788e-02, eta: 1:07:10, time: 1.245, data_time: 0.258, memory: 17038, decode.loss_ce: 0.0657, decode.acc_seg: 96.7201, aux_0.loss_ce: 0.0673, aux_0.acc_seg: 96.6980, aux_1.loss_ce: 0.0841, aux_1.acc_seg: 95.8953, aux_2.loss_ce: 0.1168, aux_2.loss_dice: 0.2515, aux_2.acc_seg: 96.1303, aux_3.loss_ce: 0.3063, aux_3.acc_seg: 94.7690, loss: 0.8916
2023-05-24 00:47:32,977 - mmseg - INFO - Iter [6650/10000]	lr: 3.738e-02, eta: 1:06:09, time: 1.131, data_time: 0.192, memory: 17038, decode.loss_ce: 0.0642, decode.acc_seg: 96.6972, aux_0.loss_ce: 0.0661, aux_0.acc_seg: 96.6539, aux_1.loss_ce: 0.0823, aux_1.acc_seg: 95.8704, aux_2.loss_ce: 0.1143, aux_2.loss_dice: 0.2493, aux_2.acc_seg: 96.2064, aux_3.loss_ce: 0.3014, aux_3.acc_seg: 94.7345, loss: 0.8776
2023-05-24 00:48:34,864 - mmseg - INFO - Iter [6700/10000]	lr: 3.688e-02, eta: 1:05:11, time: 1.237, data_time: 0.256, memory: 17038, decode.loss_ce: 0.0647, decode.acc_seg: 96.6602, aux_0.loss_ce: 0.0664, aux_0.acc_seg: 96.6205, aux_1.loss_ce: 0.0821, aux_1.acc_seg: 95.8463, aux_2.loss_ce: 0.1146, aux_2.loss_dice: 0.2499, aux_2.acc_seg: 96.1958, aux_3.loss_ce: 0.2991, aux_3.acc_seg: 94.7064, loss: 0.8768
2023-05-24 00:49:36,857 - mmseg - INFO - Iter [6750/10000]	lr: 3.638e-02, eta: 1:04:13, time: 1.240, data_time: 0.258, memory: 17038, decode.loss_ce: 0.0626, decode.acc_seg: 96.7449, aux_0.loss_ce: 0.0643, aux_0.acc_seg: 96.7095, aux_1.loss_ce: 0.0798, aux_1.acc_seg: 95.9309, aux_2.loss_ce: 0.1130, aux_2.loss_dice: 0.2481, aux_2.acc_seg: 96.2546, aux_3.loss_ce: 0.2959, aux_3.acc_seg: 94.8171, loss: 0.8637
2023-05-24 00:50:35,269 - mmseg - INFO - Iter [6800/10000]	lr: 3.587e-02, eta: 1:03:13, time: 1.168, data_time: 0.188, memory: 17038, decode.loss_ce: 0.0624, decode.acc_seg: 96.7837, aux_0.loss_ce: 0.0643, aux_0.acc_seg: 96.7406, aux_1.loss_ce: 0.0803, aux_1.acc_seg: 95.9570, aux_2.loss_ce: 0.1138, aux_2.loss_dice: 0.2482, aux_2.acc_seg: 96.1856, aux_3.loss_ce: 0.2988, aux_3.acc_seg: 94.8031, loss: 0.8678
2023-05-24 00:51:35,102 - mmseg - INFO - Iter [6850/10000]	lr: 3.537e-02, eta: 1:02:14, time: 1.196, data_time: 0.257, memory: 17038, decode.loss_ce: 0.0616, decode.acc_seg: 96.8000, aux_0.loss_ce: 0.0632, aux_0.acc_seg: 96.7685, aux_1.loss_ce: 0.0794, aux_1.acc_seg: 95.9726, aux_2.loss_ce: 0.1132, aux_2.loss_dice: 0.2480, aux_2.acc_seg: 96.2446, aux_3.loss_ce: 0.2975, aux_3.acc_seg: 94.7961, loss: 0.8628
2023-05-24 00:52:37,056 - mmseg - INFO - Iter [6900/10000]	lr: 3.486e-02, eta: 1:01:16, time: 1.239, data_time: 0.248, memory: 17038, decode.loss_ce: 0.0655, decode.acc_seg: 96.7288, aux_0.loss_ce: 0.0673, aux_0.acc_seg: 96.6970, aux_1.loss_ce: 0.0839, aux_1.acc_seg: 95.9092, aux_2.loss_ce: 0.1154, aux_2.loss_dice: 0.2504, aux_2.acc_seg: 96.1568, aux_3.loss_ce: 0.3053, aux_3.acc_seg: 94.8079, loss: 0.8879
2023-05-24 00:53:35,705 - mmseg - INFO - Iter [6950/10000]	lr: 3.436e-02, eta: 1:00:17, time: 1.173, data_time: 0.186, memory: 17038, decode.loss_ce: 0.0625, decode.acc_seg: 96.7966, aux_0.loss_ce: 0.0644, aux_0.acc_seg: 96.7489, aux_1.loss_ce: 0.0802, aux_1.acc_seg: 95.9802, aux_2.loss_ce: 0.1145, aux_2.loss_dice: 0.2498, aux_2.acc_seg: 96.2176, aux_3.loss_ce: 0.2982, aux_3.acc_seg: 94.8648, loss: 0.8696
2023-05-24 00:54:37,138 - mmseg - INFO - Saving checkpoint at 7000 iterations
2023-05-24 00:54:37,429 - mmseg - INFO - Exp name: entextnet_stdc1_2x12_720x960_10k_camvid_trainval.py
2023-05-24 00:54:37,429 - mmseg - INFO - Iter [7000/10000]	lr: 3.385e-02, eta: 0:59:18, time: 1.237, data_time: 0.247, memory: 17038, decode.loss_ce: 0.0621, decode.acc_seg: 96.7655, aux_0.loss_ce: 0.0637, aux_0.acc_seg: 96.7272, aux_1.loss_ce: 0.0797, aux_1.acc_seg: 95.9471, aux_2.loss_ce: 0.1137, aux_2.loss_dice: 0.2472, aux_2.acc_seg: 96.1911, aux_3.loss_ce: 0.2957, aux_3.acc_seg: 94.8546, loss: 0.8622
2023-05-24 00:54:44,546 - mmseg - INFO - per class results:
2023-05-24 00:54:44,547 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 66.27 | 75.08 |
|   Building  | 89.13 | 93.32 |
|     Car     | 91.65 | 94.36 |
| Column_Pole | 34.61 | 46.25 |
|    Fence    | 57.27 | 65.55 |
|  Pedestrian | 68.91 | 80.77 |
|     Road    | 96.12 | 98.38 |
|   Sidewalk  | 89.36 | 94.82 |
|  SignSymbol | 29.94 | 31.51 |
|     Sky     | 92.34 |  96.9 |
|     Tree    | 79.62 | 91.19 |
+-------------+-------+-------+
2023-05-24 00:54:44,547 - mmseg - INFO - Summary:
2023-05-24 00:54:44,548 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 94.02 | 72.29 | 78.92 |
+-------+-------+-------+
2023-05-24 00:54:44,563 - mmseg - INFO - The previous best checkpoint /tmp2/linchiayi/mmsegmentation/work_dirs/entextnet_stdc1_2x12_720x960_10k_camvid_trainval/best_mIoU_iter_5000.pth was removed
2023-05-24 00:54:44,742 - mmseg - INFO - Now best checkpoint is saved as best_mIoU_iter_7000.pth.
2023-05-24 00:54:44,742 - mmseg - INFO - Best mIoU is 0.7229 at 7000 iter.
2023-05-24 00:54:44,742 - mmseg - INFO - Exp name: entextnet_stdc1_2x12_720x960_10k_camvid_trainval.py
2023-05-24 00:54:44,742 - mmseg - INFO - Iter(val) [117]	aAcc: 0.9402, mIoU: 0.7229, mAcc: 0.7892, IoU.Bicyclist: 0.6627, IoU.Building: 0.8913, IoU.Car: 0.9165, IoU.Column_Pole: 0.3461, IoU.Fence: 0.5727, IoU.Pedestrian: 0.6891, IoU.Road: 0.9612, IoU.Sidewalk: 0.8936, IoU.SignSymbol: 0.2994, IoU.Sky: 0.9234, IoU.Tree: 0.7962, Acc.Bicyclist: 0.7508, Acc.Building: 0.9332, Acc.Car: 0.9436, Acc.Column_Pole: 0.4625, Acc.Fence: 0.6555, Acc.Pedestrian: 0.8077, Acc.Road: 0.9838, Acc.Sidewalk: 0.9482, Acc.SignSymbol: 0.3151, Acc.Sky: 0.9690, Acc.Tree: 0.9119
2023-05-24 00:55:46,225 - mmseg - INFO - Iter [7050/10000]	lr: 3.334e-02, eta: 0:58:23, time: 1.374, data_time: 0.391, memory: 17038, decode.loss_ce: 0.0637, decode.acc_seg: 96.7314, aux_0.loss_ce: 0.0653, aux_0.acc_seg: 96.7027, aux_1.loss_ce: 0.0815, aux_1.acc_seg: 95.9122, aux_2.loss_ce: 0.1151, aux_2.loss_dice: 0.2500, aux_2.acc_seg: 96.1929, aux_3.loss_ce: 0.2994, aux_3.acc_seg: 94.7717, loss: 0.8749
2023-05-24 00:56:44,345 - mmseg - INFO - Iter [7100/10000]	lr: 3.283e-02, eta: 0:57:23, time: 1.162, data_time: 0.180, memory: 17038, decode.loss_ce: 0.0625, decode.acc_seg: 96.8153, aux_0.loss_ce: 0.0641, aux_0.acc_seg: 96.7903, aux_1.loss_ce: 0.0803, aux_1.acc_seg: 96.0077, aux_2.loss_ce: 0.1148, aux_2.loss_dice: 0.2501, aux_2.acc_seg: 96.1957, aux_3.loss_ce: 0.3013, aux_3.acc_seg: 94.8597, loss: 0.8730
2023-05-24 00:57:45,920 - mmseg - INFO - Iter [7150/10000]	lr: 3.232e-02, eta: 0:56:25, time: 1.232, data_time: 0.247, memory: 17038, decode.loss_ce: 0.0619, decode.acc_seg: 96.7356, aux_0.loss_ce: 0.0636, aux_0.acc_seg: 96.6958, aux_1.loss_ce: 0.0793, aux_1.acc_seg: 95.9164, aux_2.loss_ce: 0.1119, aux_2.loss_dice: 0.2471, aux_2.acc_seg: 96.2720, aux_3.loss_ce: 0.2927, aux_3.acc_seg: 94.7759, loss: 0.8566
2023-05-24 00:58:44,220 - mmseg - INFO - Iter [7200/10000]	lr: 3.181e-02, eta: 0:55:25, time: 1.166, data_time: 0.177, memory: 17038, decode.loss_ce: 0.0630, decode.acc_seg: 96.7811, aux_0.loss_ce: 0.0647, aux_0.acc_seg: 96.7471, aux_1.loss_ce: 0.0807, aux_1.acc_seg: 95.9616, aux_2.loss_ce: 0.1137, aux_2.loss_dice: 0.2490, aux_2.acc_seg: 96.2389, aux_3.loss_ce: 0.2981, aux_3.acc_seg: 94.8361, loss: 0.8692
2023-05-24 00:59:44,428 - mmseg - INFO - Iter [7250/10000]	lr: 3.130e-02, eta: 0:54:26, time: 1.204, data_time: 0.245, memory: 17038, decode.loss_ce: 0.0630, decode.acc_seg: 96.8130, aux_0.loss_ce: 0.0647, aux_0.acc_seg: 96.7807, aux_1.loss_ce: 0.0806, aux_1.acc_seg: 96.0183, aux_2.loss_ce: 0.1142, aux_2.loss_dice: 0.2502, aux_2.acc_seg: 96.2243, aux_3.loss_ce: 0.3002, aux_3.acc_seg: 94.8528, loss: 0.8728
2023-05-24 01:00:46,216 - mmseg - INFO - Iter [7300/10000]	lr: 3.079e-02, eta: 0:53:27, time: 1.236, data_time: 0.251, memory: 17038, decode.loss_ce: 0.0608, decode.acc_seg: 96.8359, aux_0.loss_ce: 0.0624, aux_0.acc_seg: 96.8100, aux_1.loss_ce: 0.0782, aux_1.acc_seg: 96.0329, aux_2.loss_ce: 0.1131, aux_2.loss_dice: 0.2470, aux_2.acc_seg: 96.2079, aux_3.loss_ce: 0.2956, aux_3.acc_seg: 94.8887, loss: 0.8571
2023-05-24 01:01:26,125 - mmseg - INFO - Iter [7350/10000]	lr: 3.027e-02, eta: 0:52:21, time: 0.798, data_time: 0.182, memory: 17038, decode.loss_ce: 0.0623, decode.acc_seg: 96.8029, aux_0.loss_ce: 0.0643, aux_0.acc_seg: 96.7615, aux_1.loss_ce: 0.0798, aux_1.acc_seg: 95.9989, aux_2.loss_ce: 0.1135, aux_2.loss_dice: 0.2488, aux_2.acc_seg: 96.2262, aux_3.loss_ce: 0.2969, aux_3.acc_seg: 94.8446, loss: 0.8655
2023-05-24 01:02:20,389 - mmseg - INFO - Iter [7400/10000]	lr: 2.976e-02, eta: 0:51:20, time: 1.085, data_time: 0.262, memory: 17038, decode.loss_ce: 0.0597, decode.acc_seg: 96.9446, aux_0.loss_ce: 0.0616, aux_0.acc_seg: 96.9008, aux_1.loss_ce: 0.0774, aux_1.acc_seg: 96.1276, aux_2.loss_ce: 0.1137, aux_2.loss_dice: 0.2481, aux_2.acc_seg: 96.2061, aux_3.loss_ce: 0.2967, aux_3.acc_seg: 94.9867, loss: 0.8574
2023-05-24 01:03:21,796 - mmseg - INFO - Iter [7450/10000]	lr: 2.924e-02, eta: 0:50:21, time: 1.228, data_time: 0.244, memory: 17038, decode.loss_ce: 0.0619, decode.acc_seg: 96.8532, aux_0.loss_ce: 0.0636, aux_0.acc_seg: 96.8156, aux_1.loss_ce: 0.0795, aux_1.acc_seg: 96.0613, aux_2.loss_ce: 0.1143, aux_2.loss_dice: 0.2492, aux_2.acc_seg: 96.1929, aux_3.loss_ce: 0.2987, aux_3.acc_seg: 94.9198, loss: 0.8672
2023-05-24 01:04:20,108 - mmseg - INFO - Iter [7500/10000]	lr: 2.873e-02, eta: 0:49:22, time: 1.166, data_time: 0.179, memory: 17038, decode.loss_ce: 0.0613, decode.acc_seg: 96.8895, aux_0.loss_ce: 0.0633, aux_0.acc_seg: 96.8539, aux_1.loss_ce: 0.0789, aux_1.acc_seg: 96.0902, aux_2.loss_ce: 0.1137, aux_2.loss_dice: 0.2482, aux_2.acc_seg: 96.1954, aux_3.loss_ce: 0.2973, aux_3.acc_seg: 94.9668, loss: 0.8626
2023-05-24 01:05:20,104 - mmseg - INFO - Iter [7550/10000]	lr: 2.821e-02, eta: 0:48:23, time: 1.200, data_time: 0.261, memory: 17038, decode.loss_ce: 0.0618, decode.acc_seg: 96.8331, aux_0.loss_ce: 0.0634, aux_0.acc_seg: 96.8042, aux_1.loss_ce: 0.0795, aux_1.acc_seg: 96.0364, aux_2.loss_ce: 0.1140, aux_2.loss_dice: 0.2482, aux_2.acc_seg: 96.1942, aux_3.loss_ce: 0.2999, aux_3.acc_seg: 94.8497, loss: 0.8668
2023-05-24 01:06:18,667 - mmseg - INFO - Iter [7600/10000]	lr: 2.769e-02, eta: 0:47:23, time: 1.172, data_time: 0.183, memory: 17038, decode.loss_ce: 0.0608, decode.acc_seg: 96.8418, aux_0.loss_ce: 0.0623, aux_0.acc_seg: 96.8088, aux_1.loss_ce: 0.0782, aux_1.acc_seg: 96.0267, aux_2.loss_ce: 0.1135, aux_2.loss_dice: 0.2476, aux_2.acc_seg: 96.2041, aux_3.loss_ce: 0.2945, aux_3.acc_seg: 94.8513, loss: 0.8570
2023-05-24 01:07:21,124 - mmseg - INFO - Iter [7650/10000]	lr: 2.717e-02, eta: 0:46:25, time: 1.249, data_time: 0.258, memory: 17038, decode.loss_ce: 0.0617, decode.acc_seg: 96.8504, aux_0.loss_ce: 0.0636, aux_0.acc_seg: 96.8058, aux_1.loss_ce: 0.0797, aux_1.acc_seg: 96.0340, aux_2.loss_ce: 0.1148, aux_2.loss_dice: 0.2490, aux_2.acc_seg: 96.1542, aux_3.loss_ce: 0.2976, aux_3.acc_seg: 94.8841, loss: 0.8664
2023-05-24 01:08:22,922 - mmseg - INFO - Iter [7700/10000]	lr: 2.665e-02, eta: 0:45:26, time: 1.236, data_time: 0.253, memory: 17038, decode.loss_ce: 0.0606, decode.acc_seg: 96.8873, aux_0.loss_ce: 0.0623, aux_0.acc_seg: 96.8447, aux_1.loss_ce: 0.0786, aux_1.acc_seg: 96.0678, aux_2.loss_ce: 0.1141, aux_2.loss_dice: 0.2487, aux_2.acc_seg: 96.1983, aux_3.loss_ce: 0.2970, aux_3.acc_seg: 94.9057, loss: 0.8613
2023-05-24 01:09:18,807 - mmseg - INFO - Iter [7750/10000]	lr: 2.613e-02, eta: 0:44:26, time: 1.118, data_time: 0.180, memory: 17038, decode.loss_ce: 0.0595, decode.acc_seg: 96.9233, aux_0.loss_ce: 0.0611, aux_0.acc_seg: 96.8873, aux_1.loss_ce: 0.0769, aux_1.acc_seg: 96.1020, aux_2.loss_ce: 0.1148, aux_2.loss_dice: 0.2479, aux_2.acc_seg: 96.1530, aux_3.loss_ce: 0.2951, aux_3.acc_seg: 94.9400, loss: 0.8554
2023-05-24 01:10:21,440 - mmseg - INFO - Iter [7800/10000]	lr: 2.561e-02, eta: 0:43:28, time: 1.253, data_time: 0.265, memory: 17038, decode.loss_ce: 0.0582, decode.acc_seg: 96.9530, aux_0.loss_ce: 0.0599, aux_0.acc_seg: 96.9142, aux_1.loss_ce: 0.0756, aux_1.acc_seg: 96.1512, aux_2.loss_ce: 0.1112, aux_2.loss_dice: 0.2467, aux_2.acc_seg: 96.2878, aux_3.loss_ce: 0.2919, aux_3.acc_seg: 94.9962, loss: 0.8435
2023-05-24 01:11:23,171 - mmseg - INFO - Iter [7850/10000]	lr: 2.508e-02, eta: 0:42:29, time: 1.234, data_time: 0.257, memory: 17038, decode.loss_ce: 0.0615, decode.acc_seg: 96.8151, aux_0.loss_ce: 0.0630, aux_0.acc_seg: 96.7954, aux_1.loss_ce: 0.0790, aux_1.acc_seg: 96.0154, aux_2.loss_ce: 0.1144, aux_2.loss_dice: 0.2482, aux_2.acc_seg: 96.1734, aux_3.loss_ce: 0.2955, aux_3.acc_seg: 94.8512, loss: 0.8616
2023-05-24 01:12:21,514 - mmseg - INFO - Iter [7900/10000]	lr: 2.456e-02, eta: 0:41:30, time: 1.167, data_time: 0.181, memory: 17038, decode.loss_ce: 0.0600, decode.acc_seg: 96.8853, aux_0.loss_ce: 0.0621, aux_0.acc_seg: 96.8274, aux_1.loss_ce: 0.0779, aux_1.acc_seg: 96.0578, aux_2.loss_ce: 0.1120, aux_2.loss_dice: 0.2462, aux_2.acc_seg: 96.2356, aux_3.loss_ce: 0.2928, aux_3.acc_seg: 94.9163, loss: 0.8509
2023-05-24 01:13:20,550 - mmseg - INFO - Iter [7950/10000]	lr: 2.403e-02, eta: 0:40:30, time: 1.181, data_time: 0.251, memory: 17038, decode.loss_ce: 0.0584, decode.acc_seg: 96.9312, aux_0.loss_ce: 0.0601, aux_0.acc_seg: 96.8886, aux_1.loss_ce: 0.0761, aux_1.acc_seg: 96.0879, aux_2.loss_ce: 0.1136, aux_2.loss_dice: 0.2467, aux_2.acc_seg: 96.1676, aux_3.loss_ce: 0.2926, aux_3.acc_seg: 94.8844, loss: 0.8475
2023-05-24 01:14:22,346 - mmseg - INFO - Saving checkpoint at 8000 iterations
2023-05-24 01:14:22,743 - mmseg - INFO - Exp name: entextnet_stdc1_2x12_720x960_10k_camvid_trainval.py
2023-05-24 01:14:22,744 - mmseg - INFO - Iter [8000/10000]	lr: 2.350e-02, eta: 0:39:32, time: 1.246, data_time: 0.257, memory: 17038, decode.loss_ce: 0.0608, decode.acc_seg: 96.8805, aux_0.loss_ce: 0.0625, aux_0.acc_seg: 96.8419, aux_1.loss_ce: 0.0784, aux_1.acc_seg: 96.0565, aux_2.loss_ce: 0.1151, aux_2.loss_dice: 0.2491, aux_2.acc_seg: 96.1435, aux_3.loss_ce: 0.2966, aux_3.acc_seg: 94.8418, loss: 0.8624
2023-05-24 01:14:30,017 - mmseg - INFO - per class results:
2023-05-24 01:14:30,019 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  |  66.7 | 76.95 |
|   Building  | 88.83 | 94.35 |
|     Car     | 92.22 | 94.23 |
| Column_Pole | 36.25 | 48.87 |
|    Fence    | 54.64 | 61.21 |
|  Pedestrian | 68.11 | 86.76 |
|     Road    | 96.16 |  97.9 |
|   Sidewalk  | 89.42 | 95.39 |
|  SignSymbol | 34.06 | 36.39 |
|     Sky     | 91.57 | 94.15 |
|     Tree    | 80.26 | 93.07 |
+-------------+-------+-------+
2023-05-24 01:14:30,019 - mmseg - INFO - Summary:
2023-05-24 01:14:30,019 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 93.93 | 72.57 | 79.93 |
+-------+-------+-------+
2023-05-24 01:14:30,034 - mmseg - INFO - The previous best checkpoint /tmp2/linchiayi/mmsegmentation/work_dirs/entextnet_stdc1_2x12_720x960_10k_camvid_trainval/best_mIoU_iter_7000.pth was removed
2023-05-24 01:14:30,223 - mmseg - INFO - Now best checkpoint is saved as best_mIoU_iter_8000.pth.
2023-05-24 01:14:30,223 - mmseg - INFO - Best mIoU is 0.7257 at 8000 iter.
2023-05-24 01:14:30,223 - mmseg - INFO - Exp name: entextnet_stdc1_2x12_720x960_10k_camvid_trainval.py
2023-05-24 01:14:30,223 - mmseg - INFO - Iter(val) [117]	aAcc: 0.9393, mIoU: 0.7257, mAcc: 0.7993, IoU.Bicyclist: 0.6670, IoU.Building: 0.8883, IoU.Car: 0.9222, IoU.Column_Pole: 0.3625, IoU.Fence: 0.5464, IoU.Pedestrian: 0.6811, IoU.Road: 0.9616, IoU.Sidewalk: 0.8942, IoU.SignSymbol: 0.3406, IoU.Sky: 0.9157, IoU.Tree: 0.8026, Acc.Bicyclist: 0.7695, Acc.Building: 0.9435, Acc.Car: 0.9423, Acc.Column_Pole: 0.4887, Acc.Fence: 0.6121, Acc.Pedestrian: 0.8676, Acc.Road: 0.9790, Acc.Sidewalk: 0.9539, Acc.SignSymbol: 0.3639, Acc.Sky: 0.9415, Acc.Tree: 0.9307
2023-05-24 01:15:28,715 - mmseg - INFO - Iter [8050/10000]	lr: 2.297e-02, eta: 0:38:34, time: 1.317, data_time: 0.336, memory: 17038, decode.loss_ce: 0.0615, decode.acc_seg: 96.8291, aux_0.loss_ce: 0.0631, aux_0.acc_seg: 96.7933, aux_1.loss_ce: 0.0790, aux_1.acc_seg: 96.0063, aux_2.loss_ce: 0.1145, aux_2.loss_dice: 0.2480, aux_2.acc_seg: 96.1583, aux_3.loss_ce: 0.2957, aux_3.acc_seg: 94.8261, loss: 0.8619
2023-05-24 01:16:30,733 - mmseg - INFO - Iter [8100/10000]	lr: 2.244e-02, eta: 0:37:35, time: 1.240, data_time: 0.258, memory: 17038, decode.loss_ce: 0.0608, decode.acc_seg: 96.8610, aux_0.loss_ce: 0.0623, aux_0.acc_seg: 96.8385, aux_1.loss_ce: 0.0787, aux_1.acc_seg: 96.0306, aux_2.loss_ce: 0.1143, aux_2.loss_dice: 0.2478, aux_2.acc_seg: 96.1664, aux_3.loss_ce: 0.2955, aux_3.acc_seg: 94.8539, loss: 0.8594
2023-05-24 01:17:28,608 - mmseg - INFO - Iter [8150/10000]	lr: 2.191e-02, eta: 0:36:36, time: 1.157, data_time: 0.193, memory: 17038, decode.loss_ce: 0.0585, decode.acc_seg: 96.9634, aux_0.loss_ce: 0.0601, aux_0.acc_seg: 96.9265, aux_1.loss_ce: 0.0760, aux_1.acc_seg: 96.1559, aux_2.loss_ce: 0.1113, aux_2.loss_dice: 0.2455, aux_2.acc_seg: 96.2796, aux_3.loss_ce: 0.2928, aux_3.acc_seg: 94.9941, loss: 0.8442
2023-05-24 01:18:30,482 - mmseg - INFO - Iter [8200/10000]	lr: 2.138e-02, eta: 0:35:37, time: 1.237, data_time: 0.259, memory: 17038, decode.loss_ce: 0.0598, decode.acc_seg: 96.8930, aux_0.loss_ce: 0.0613, aux_0.acc_seg: 96.8586, aux_1.loss_ce: 0.0770, aux_1.acc_seg: 96.0853, aux_2.loss_ce: 0.1135, aux_2.loss_dice: 0.2471, aux_2.acc_seg: 96.2006, aux_3.loss_ce: 0.2937, aux_3.acc_seg: 94.9004, loss: 0.8525
2023-05-24 01:19:14,383 - mmseg - INFO - Iter [8250/10000]	lr: 2.084e-02, eta: 0:34:34, time: 0.878, data_time: 0.274, memory: 17038, decode.loss_ce: 0.0582, decode.acc_seg: 96.9533, aux_0.loss_ce: 0.0599, aux_0.acc_seg: 96.9157, aux_1.loss_ce: 0.0752, aux_1.acc_seg: 96.1533, aux_2.loss_ce: 0.1120, aux_2.loss_dice: 0.2475, aux_2.acc_seg: 96.2692, aux_3.loss_ce: 0.2919, aux_3.acc_seg: 94.9559, loss: 0.8448
2023-05-24 01:20:00,871 - mmseg - INFO - Iter [8300/10000]	lr: 2.031e-02, eta: 0:33:32, time: 0.930, data_time: 0.194, memory: 17038, decode.loss_ce: 0.0586, decode.acc_seg: 96.9485, aux_0.loss_ce: 0.0605, aux_0.acc_seg: 96.9025, aux_1.loss_ce: 0.0766, aux_1.acc_seg: 96.1132, aux_2.loss_ce: 0.1137, aux_2.loss_dice: 0.2478, aux_2.acc_seg: 96.1783, aux_3.loss_ce: 0.2927, aux_3.acc_seg: 94.9262, loss: 0.8498
2023-05-24 01:21:02,040 - mmseg - INFO - Iter [8350/10000]	lr: 1.977e-02, eta: 0:32:34, time: 1.223, data_time: 0.246, memory: 17038, decode.loss_ce: 0.0602, decode.acc_seg: 96.8935, aux_0.loss_ce: 0.0618, aux_0.acc_seg: 96.8612, aux_1.loss_ce: 0.0775, aux_1.acc_seg: 96.0974, aux_2.loss_ce: 0.1145, aux_2.loss_dice: 0.2487, aux_2.acc_seg: 96.1832, aux_3.loss_ce: 0.2959, aux_3.acc_seg: 94.8482, loss: 0.8586
2023-05-24 01:22:03,889 - mmseg - INFO - Iter [8400/10000]	lr: 1.923e-02, eta: 0:31:35, time: 1.237, data_time: 0.258, memory: 17038, decode.loss_ce: 0.0595, decode.acc_seg: 96.9013, aux_0.loss_ce: 0.0608, aux_0.acc_seg: 96.8764, aux_1.loss_ce: 0.0769, aux_1.acc_seg: 96.0797, aux_2.loss_ce: 0.1142, aux_2.loss_dice: 0.2480, aux_2.acc_seg: 96.1939, aux_3.loss_ce: 0.2932, aux_3.acc_seg: 94.8497, loss: 0.8526
2023-05-24 01:23:01,391 - mmseg - INFO - Iter [8450/10000]	lr: 1.869e-02, eta: 0:30:35, time: 1.151, data_time: 0.186, memory: 17038, decode.loss_ce: 0.0593, decode.acc_seg: 96.9115, aux_0.loss_ce: 0.0610, aux_0.acc_seg: 96.8774, aux_1.loss_ce: 0.0772, aux_1.acc_seg: 96.0994, aux_2.loss_ce: 0.1133, aux_2.loss_dice: 0.2480, aux_2.acc_seg: 96.2168, aux_3.loss_ce: 0.2952, aux_3.acc_seg: 94.8711, loss: 0.8539
2023-05-24 01:24:03,200 - mmseg - INFO - Iter [8500/10000]	lr: 1.815e-02, eta: 0:29:37, time: 1.236, data_time: 0.252, memory: 17038, decode.loss_ce: 0.0575, decode.acc_seg: 96.9788, aux_0.loss_ce: 0.0591, aux_0.acc_seg: 96.9503, aux_1.loss_ce: 0.0747, aux_1.acc_seg: 96.1789, aux_2.loss_ce: 0.1129, aux_2.loss_dice: 0.2475, aux_2.acc_seg: 96.2065, aux_3.loss_ce: 0.2896, aux_3.acc_seg: 94.9861, loss: 0.8413
2023-05-24 01:25:01,752 - mmseg - INFO - Iter [8550/10000]	lr: 1.760e-02, eta: 0:28:37, time: 1.171, data_time: 0.192, memory: 17038, decode.loss_ce: 0.0577, decode.acc_seg: 97.0193, aux_0.loss_ce: 0.0594, aux_0.acc_seg: 96.9786, aux_1.loss_ce: 0.0753, aux_1.acc_seg: 96.2035, aux_2.loss_ce: 0.1134, aux_2.loss_dice: 0.2474, aux_2.acc_seg: 96.1827, aux_3.loss_ce: 0.2925, aux_3.acc_seg: 95.0025, loss: 0.8458
2023-05-24 01:26:03,486 - mmseg - INFO - Iter [8600/10000]	lr: 1.705e-02, eta: 0:27:38, time: 1.234, data_time: 0.254, memory: 17038, decode.loss_ce: 0.0578, decode.acc_seg: 96.9844, aux_0.loss_ce: 0.0593, aux_0.acc_seg: 96.9526, aux_1.loss_ce: 0.0747, aux_1.acc_seg: 96.2026, aux_2.loss_ce: 0.1131, aux_2.loss_dice: 0.2480, aux_2.acc_seg: 96.2349, aux_3.loss_ce: 0.2914, aux_3.acc_seg: 94.9563, loss: 0.8444
2023-05-24 01:27:04,668 - mmseg - INFO - Iter [8650/10000]	lr: 1.650e-02, eta: 0:26:39, time: 1.224, data_time: 0.256, memory: 17038, decode.loss_ce: 0.0592, decode.acc_seg: 96.9351, aux_0.loss_ce: 0.0611, aux_0.acc_seg: 96.8871, aux_1.loss_ce: 0.0768, aux_1.acc_seg: 96.1128, aux_2.loss_ce: 0.1140, aux_2.loss_dice: 0.2486, aux_2.acc_seg: 96.1972, aux_3.loss_ce: 0.2951, aux_3.acc_seg: 94.9199, loss: 0.8549
2023-05-24 01:28:03,403 - mmseg - INFO - Iter [8700/10000]	lr: 1.595e-02, eta: 0:25:40, time: 1.174, data_time: 0.191, memory: 17038, decode.loss_ce: 0.0566, decode.acc_seg: 97.0221, aux_0.loss_ce: 0.0583, aux_0.acc_seg: 96.9892, aux_1.loss_ce: 0.0737, aux_1.acc_seg: 96.2238, aux_2.loss_ce: 0.1122, aux_2.loss_dice: 0.2462, aux_2.acc_seg: 96.2516, aux_3.loss_ce: 0.2896, aux_3.acc_seg: 95.0376, loss: 0.8367
2023-05-24 01:29:06,153 - mmseg - INFO - Iter [8750/10000]	lr: 1.540e-02, eta: 0:24:41, time: 1.255, data_time: 0.275, memory: 17038, decode.loss_ce: 0.0583, decode.acc_seg: 96.9435, aux_0.loss_ce: 0.0600, aux_0.acc_seg: 96.9063, aux_1.loss_ce: 0.0756, aux_1.acc_seg: 96.1267, aux_2.loss_ce: 0.1134, aux_2.loss_dice: 0.2476, aux_2.acc_seg: 96.2015, aux_3.loss_ce: 0.2917, aux_3.acc_seg: 94.9240, loss: 0.8467
2023-05-24 01:30:08,209 - mmseg - INFO - Iter [8800/10000]	lr: 1.485e-02, eta: 0:23:42, time: 1.241, data_time: 0.260, memory: 17038, decode.loss_ce: 0.0577, decode.acc_seg: 96.9503, aux_0.loss_ce: 0.0592, aux_0.acc_seg: 96.9246, aux_1.loss_ce: 0.0750, aux_1.acc_seg: 96.1361, aux_2.loss_ce: 0.1128, aux_2.loss_dice: 0.2464, aux_2.acc_seg: 96.2298, aux_3.loss_ce: 0.2918, aux_3.acc_seg: 94.8644, loss: 0.8428
2023-05-24 01:31:05,748 - mmseg - INFO - Iter [8850/10000]	lr: 1.429e-02, eta: 0:22:43, time: 1.151, data_time: 0.185, memory: 17038, decode.loss_ce: 0.0574, decode.acc_seg: 97.0287, aux_0.loss_ce: 0.0591, aux_0.acc_seg: 96.9856, aux_1.loss_ce: 0.0748, aux_1.acc_seg: 96.2273, aux_2.loss_ce: 0.1126, aux_2.loss_dice: 0.2467, aux_2.acc_seg: 96.2073, aux_3.loss_ce: 0.2925, aux_3.acc_seg: 94.9932, loss: 0.8431
2023-05-24 01:32:07,605 - mmseg - INFO - Iter [8900/10000]	lr: 1.373e-02, eta: 0:21:44, time: 1.237, data_time: 0.257, memory: 17038, decode.loss_ce: 0.0576, decode.acc_seg: 96.9791, aux_0.loss_ce: 0.0591, aux_0.acc_seg: 96.9508, aux_1.loss_ce: 0.0750, aux_1.acc_seg: 96.1447, aux_2.loss_ce: 0.1122, aux_2.loss_dice: 0.2456, aux_2.acc_seg: 96.2215, aux_3.loss_ce: 0.2902, aux_3.acc_seg: 94.9324, loss: 0.8397
2023-05-24 01:33:09,612 - mmseg - INFO - Iter [8950/10000]	lr: 1.317e-02, eta: 0:20:45, time: 1.240, data_time: 0.261, memory: 17038, decode.loss_ce: 0.0575, decode.acc_seg: 97.0037, aux_0.loss_ce: 0.0593, aux_0.acc_seg: 96.9605, aux_1.loss_ce: 0.0748, aux_1.acc_seg: 96.1848, aux_2.loss_ce: 0.1132, aux_2.loss_dice: 0.2474, aux_2.acc_seg: 96.2176, aux_3.loss_ce: 0.2916, aux_3.acc_seg: 94.9541, loss: 0.8438
2023-05-24 01:34:08,259 - mmseg - INFO - Saving checkpoint at 9000 iterations
2023-05-24 01:34:08,561 - mmseg - INFO - Exp name: entextnet_stdc1_2x12_720x960_10k_camvid_trainval.py
2023-05-24 01:34:08,561 - mmseg - INFO - Iter [9000/10000]	lr: 1.260e-02, eta: 0:19:46, time: 1.181, data_time: 0.193, memory: 17038, decode.loss_ce: 0.0580, decode.acc_seg: 96.9465, aux_0.loss_ce: 0.0595, aux_0.acc_seg: 96.9115, aux_1.loss_ce: 0.0752, aux_1.acc_seg: 96.1390, aux_2.loss_ce: 0.1143, aux_2.loss_dice: 0.2478, aux_2.acc_seg: 96.1620, aux_3.loss_ce: 0.2903, aux_3.acc_seg: 94.8927, loss: 0.8452
2023-05-24 01:34:15,665 - mmseg - INFO - per class results:
2023-05-24 01:34:15,666 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 66.75 | 79.32 |
|   Building  | 89.19 |  94.3 |
|     Car     | 91.45 | 95.48 |
| Column_Pole | 36.51 | 50.48 |
|    Fence    | 51.44 | 54.31 |
|  Pedestrian | 69.91 | 85.97 |
|     Road    | 96.29 | 98.53 |
|   Sidewalk  | 89.51 | 94.65 |
|  SignSymbol | 34.44 | 37.11 |
|     Sky     | 92.11 | 95.01 |
|     Tree    | 80.51 | 92.42 |
+-------------+-------+-------+
2023-05-24 01:34:15,666 - mmseg - INFO - Summary:
2023-05-24 01:34:15,666 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 94.07 | 72.55 | 79.78 |
+-------+-------+-------+
2023-05-24 01:34:15,667 - mmseg - INFO - Exp name: entextnet_stdc1_2x12_720x960_10k_camvid_trainval.py
2023-05-24 01:34:15,667 - mmseg - INFO - Iter(val) [117]	aAcc: 0.9407, mIoU: 0.7255, mAcc: 0.7978, IoU.Bicyclist: 0.6675, IoU.Building: 0.8919, IoU.Car: 0.9145, IoU.Column_Pole: 0.3651, IoU.Fence: 0.5144, IoU.Pedestrian: 0.6991, IoU.Road: 0.9629, IoU.Sidewalk: 0.8951, IoU.SignSymbol: 0.3444, IoU.Sky: 0.9211, IoU.Tree: 0.8051, Acc.Bicyclist: 0.7932, Acc.Building: 0.9430, Acc.Car: 0.9548, Acc.Column_Pole: 0.5048, Acc.Fence: 0.5431, Acc.Pedestrian: 0.8597, Acc.Road: 0.9853, Acc.Sidewalk: 0.9465, Acc.SignSymbol: 0.3711, Acc.Sky: 0.9501, Acc.Tree: 0.9242
2023-05-24 01:35:14,459 - mmseg - INFO - Iter [9050/10000]	lr: 1.203e-02, eta: 0:18:47, time: 1.316, data_time: 0.377, memory: 17038, decode.loss_ce: 0.0578, decode.acc_seg: 97.0239, aux_0.loss_ce: 0.0593, aux_0.acc_seg: 96.9877, aux_1.loss_ce: 0.0750, aux_1.acc_seg: 96.2097, aux_2.loss_ce: 0.1128, aux_2.loss_dice: 0.2479, aux_2.acc_seg: 96.2443, aux_3.loss_ce: 0.2923, aux_3.acc_seg: 95.0075, loss: 0.8451
2023-05-24 01:36:12,879 - mmseg - INFO - Iter [9100/10000]	lr: 1.146e-02, eta: 0:17:48, time: 1.169, data_time: 0.185, memory: 17038, decode.loss_ce: 0.0572, decode.acc_seg: 97.0164, aux_0.loss_ce: 0.0589, aux_0.acc_seg: 96.9776, aux_1.loss_ce: 0.0750, aux_1.acc_seg: 96.1932, aux_2.loss_ce: 0.1139, aux_2.loss_dice: 0.2475, aux_2.acc_seg: 96.1646, aux_3.loss_ce: 0.2923, aux_3.acc_seg: 94.9433, loss: 0.8447
2023-05-24 01:37:02,031 - mmseg - INFO - Iter [9150/10000]	lr: 1.089e-02, eta: 0:16:47, time: 0.983, data_time: 0.269, memory: 17038, decode.loss_ce: 0.0578, decode.acc_seg: 96.9548, aux_0.loss_ce: 0.0598, aux_0.acc_seg: 96.9120, aux_1.loss_ce: 0.0755, aux_1.acc_seg: 96.1074, aux_2.loss_ce: 0.1140, aux_2.loss_dice: 0.2473, aux_2.acc_seg: 96.1689, aux_3.loss_ce: 0.2916, aux_3.acc_seg: 94.8783, loss: 0.8460
2023-05-24 01:37:51,467 - mmseg - INFO - Iter [9200/10000]	lr: 1.031e-02, eta: 0:15:47, time: 0.989, data_time: 0.255, memory: 17038, decode.loss_ce: 0.0557, decode.acc_seg: 97.1173, aux_0.loss_ce: 0.0575, aux_0.acc_seg: 97.0820, aux_1.loss_ce: 0.0731, aux_1.acc_seg: 96.3173, aux_2.loss_ce: 0.1124, aux_2.loss_dice: 0.2479, aux_2.acc_seg: 96.2711, aux_3.loss_ce: 0.2913, aux_3.acc_seg: 95.1045, loss: 0.8380
2023-05-24 01:38:49,722 - mmseg - INFO - Iter [9250/10000]	lr: 9.730e-03, eta: 0:14:48, time: 1.165, data_time: 0.182, memory: 17038, decode.loss_ce: 0.0568, decode.acc_seg: 97.0389, aux_0.loss_ce: 0.0586, aux_0.acc_seg: 96.9967, aux_1.loss_ce: 0.0745, aux_1.acc_seg: 96.2203, aux_2.loss_ce: 0.1131, aux_2.loss_dice: 0.2475, aux_2.acc_seg: 96.2103, aux_3.loss_ce: 0.2931, aux_3.acc_seg: 94.9712, loss: 0.8437
2023-05-24 01:39:51,267 - mmseg - INFO - Iter [9300/10000]	lr: 9.145e-03, eta: 0:13:49, time: 1.231, data_time: 0.247, memory: 17038, decode.loss_ce: 0.0565, decode.acc_seg: 97.0229, aux_0.loss_ce: 0.0583, aux_0.acc_seg: 96.9814, aux_1.loss_ce: 0.0741, aux_1.acc_seg: 96.2015, aux_2.loss_ce: 0.1128, aux_2.loss_dice: 0.2468, aux_2.acc_seg: 96.2030, aux_3.loss_ce: 0.2894, aux_3.acc_seg: 94.9490, loss: 0.8379
2023-05-24 01:40:52,613 - mmseg - INFO - Iter [9350/10000]	lr: 8.556e-03, eta: 0:12:50, time: 1.227, data_time: 0.242, memory: 17038, decode.loss_ce: 0.0553, decode.acc_seg: 97.0784, aux_0.loss_ce: 0.0571, aux_0.acc_seg: 97.0372, aux_1.loss_ce: 0.0730, aux_1.acc_seg: 96.2401, aux_2.loss_ce: 0.1137, aux_2.loss_dice: 0.2465, aux_2.acc_seg: 96.1542, aux_3.loss_ce: 0.2897, aux_3.acc_seg: 95.0051, loss: 0.8354
2023-05-24 01:41:50,707 - mmseg - INFO - Iter [9400/10000]	lr: 7.962e-03, eta: 0:11:50, time: 1.162, data_time: 0.186, memory: 17038, decode.loss_ce: 0.0566, decode.acc_seg: 97.0626, aux_0.loss_ce: 0.0583, aux_0.acc_seg: 97.0236, aux_1.loss_ce: 0.0743, aux_1.acc_seg: 96.2420, aux_2.loss_ce: 0.1134, aux_2.loss_dice: 0.2480, aux_2.acc_seg: 96.2223, aux_3.loss_ce: 0.2934, aux_3.acc_seg: 94.9402, loss: 0.8440
2023-05-24 01:42:52,144 - mmseg - INFO - Iter [9450/10000]	lr: 7.364e-03, eta: 0:10:51, time: 1.229, data_time: 0.241, memory: 17038, decode.loss_ce: 0.0566, decode.acc_seg: 97.0263, aux_0.loss_ce: 0.0582, aux_0.acc_seg: 96.9868, aux_1.loss_ce: 0.0740, aux_1.acc_seg: 96.2081, aux_2.loss_ce: 0.1128, aux_2.loss_dice: 0.2469, aux_2.acc_seg: 96.2148, aux_3.loss_ce: 0.2902, aux_3.acc_seg: 94.9582, loss: 0.8387
2023-05-24 01:43:51,027 - mmseg - INFO - Iter [9500/10000]	lr: 6.759e-03, eta: 0:09:52, time: 1.177, data_time: 0.187, memory: 17038, decode.loss_ce: 0.0557, decode.acc_seg: 97.0700, aux_0.loss_ce: 0.0574, aux_0.acc_seg: 97.0281, aux_1.loss_ce: 0.0729, aux_1.acc_seg: 96.2626, aux_2.loss_ce: 0.1124, aux_2.loss_dice: 0.2463, aux_2.acc_seg: 96.2218, aux_3.loss_ce: 0.2892, aux_3.acc_seg: 95.0035, loss: 0.8339
2023-05-24 01:44:51,551 - mmseg - INFO - Iter [9550/10000]	lr: 6.149e-03, eta: 0:08:53, time: 1.211, data_time: 0.249, memory: 17038, decode.loss_ce: 0.0554, decode.acc_seg: 97.0825, aux_0.loss_ce: 0.0572, aux_0.acc_seg: 97.0405, aux_1.loss_ce: 0.0730, aux_1.acc_seg: 96.2583, aux_2.loss_ce: 0.1117, aux_2.loss_dice: 0.2457, aux_2.acc_seg: 96.2510, aux_3.loss_ce: 0.2896, aux_3.acc_seg: 94.9934, loss: 0.8326
2023-05-24 01:45:52,243 - mmseg - INFO - Iter [9600/10000]	lr: 5.532e-03, eta: 0:07:54, time: 1.214, data_time: 0.249, memory: 17038, decode.loss_ce: 0.0557, decode.acc_seg: 97.0893, aux_0.loss_ce: 0.0575, aux_0.acc_seg: 97.0454, aux_1.loss_ce: 0.0734, aux_1.acc_seg: 96.2511, aux_2.loss_ce: 0.1142, aux_2.loss_dice: 0.2480, aux_2.acc_seg: 96.1542, aux_3.loss_ce: 0.2924, aux_3.acc_seg: 94.9748, loss: 0.8412
2023-05-24 01:46:50,040 - mmseg - INFO - Iter [9650/10000]	lr: 4.908e-03, eta: 0:06:54, time: 1.156, data_time: 0.175, memory: 17038, decode.loss_ce: 0.0550, decode.acc_seg: 97.1090, aux_0.loss_ce: 0.0567, aux_0.acc_seg: 97.0672, aux_1.loss_ce: 0.0725, aux_1.acc_seg: 96.2801, aux_2.loss_ce: 0.1117, aux_2.loss_dice: 0.2453, aux_2.acc_seg: 96.2564, aux_3.loss_ce: 0.2883, aux_3.acc_seg: 95.0180, loss: 0.8294
2023-05-24 01:47:51,923 - mmseg - INFO - Iter [9700/10000]	lr: 4.274e-03, eta: 0:05:55, time: 1.238, data_time: 0.256, memory: 17038, decode.loss_ce: 0.0548, decode.acc_seg: 97.0677, aux_0.loss_ce: 0.0567, aux_0.acc_seg: 97.0184, aux_1.loss_ce: 0.0723, aux_1.acc_seg: 96.2303, aux_2.loss_ce: 0.1126, aux_2.loss_dice: 0.2446, aux_2.acc_seg: 96.1932, aux_3.loss_ce: 0.2863, aux_3.acc_seg: 94.9451, loss: 0.8273
2023-05-24 01:48:51,288 - mmseg - INFO - Iter [9750/10000]	lr: 3.629e-03, eta: 0:04:56, time: 1.187, data_time: 0.256, memory: 17038, decode.loss_ce: 0.0551, decode.acc_seg: 97.1160, aux_0.loss_ce: 0.0569, aux_0.acc_seg: 97.0709, aux_1.loss_ce: 0.0728, aux_1.acc_seg: 96.2980, aux_2.loss_ce: 0.1118, aux_2.loss_dice: 0.2451, aux_2.acc_seg: 96.2181, aux_3.loss_ce: 0.2902, aux_3.acc_seg: 95.0523, loss: 0.8319
2023-05-24 01:49:49,554 - mmseg - INFO - Iter [9800/10000]	lr: 2.972e-03, eta: 0:03:57, time: 1.166, data_time: 0.182, memory: 17038, decode.loss_ce: 0.0547, decode.acc_seg: 97.1318, aux_0.loss_ce: 0.0563, aux_0.acc_seg: 97.0909, aux_1.loss_ce: 0.0723, aux_1.acc_seg: 96.3048, aux_2.loss_ce: 0.1136, aux_2.loss_dice: 0.2466, aux_2.acc_seg: 96.1837, aux_3.loss_ce: 0.2898, aux_3.acc_seg: 95.0268, loss: 0.8334
2023-05-24 01:50:51,354 - mmseg - INFO - Iter [9850/10000]	lr: 2.298e-03, eta: 0:02:57, time: 1.236, data_time: 0.250, memory: 17038, decode.loss_ce: 0.0547, decode.acc_seg: 97.1053, aux_0.loss_ce: 0.0566, aux_0.acc_seg: 97.0614, aux_1.loss_ce: 0.0724, aux_1.acc_seg: 96.2816, aux_2.loss_ce: 0.1138, aux_2.loss_dice: 0.2475, aux_2.acc_seg: 96.1706, aux_3.loss_ce: 0.2911, aux_3.acc_seg: 94.9849, loss: 0.8361
2023-05-24 01:51:52,565 - mmseg - INFO - Iter [9900/10000]	lr: 1.600e-03, eta: 0:01:58, time: 1.225, data_time: 0.243, memory: 17038, decode.loss_ce: 0.0557, decode.acc_seg: 97.0885, aux_0.loss_ce: 0.0575, aux_0.acc_seg: 97.0452, aux_1.loss_ce: 0.0732, aux_1.acc_seg: 96.2642, aux_2.loss_ce: 0.1142, aux_2.loss_dice: 0.2480, aux_2.acc_seg: 96.1744, aux_3.loss_ce: 0.2915, aux_3.acc_seg: 94.9924, loss: 0.8401
2023-05-24 01:52:48,497 - mmseg - INFO - Iter [9950/10000]	lr: 8.656e-04, eta: 0:00:59, time: 1.119, data_time: 0.178, memory: 17038, decode.loss_ce: 0.0554, decode.acc_seg: 97.1100, aux_0.loss_ce: 0.0572, aux_0.acc_seg: 97.0739, aux_1.loss_ce: 0.0733, aux_1.acc_seg: 96.2923, aux_2.loss_ce: 0.1141, aux_2.loss_dice: 0.2472, aux_2.acc_seg: 96.1496, aux_3.loss_ce: 0.2923, aux_3.acc_seg: 94.9883, loss: 0.8395
2023-05-24 01:53:47,122 - mmseg - INFO - Saving checkpoint at 10000 iterations
2023-05-24 01:53:47,396 - mmseg - INFO - Exp name: entextnet_stdc1_2x12_720x960_10k_camvid_trainval.py
2023-05-24 01:53:47,397 - mmseg - INFO - Iter [10000/10000]	lr: 2.612e-05, eta: 0:00:00, time: 1.180, data_time: 0.251, memory: 17038, decode.loss_ce: 0.0541, decode.acc_seg: 97.1569, aux_0.loss_ce: 0.0560, aux_0.acc_seg: 97.1094, aux_1.loss_ce: 0.0720, aux_1.acc_seg: 96.3158, aux_2.loss_ce: 0.1124, aux_2.loss_dice: 0.2453, aux_2.acc_seg: 96.2180, aux_3.loss_ce: 0.2898, aux_3.acc_seg: 95.0138, loss: 0.8296
2023-05-24 01:53:54,204 - mmseg - INFO - per class results:
2023-05-24 01:53:54,205 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 66.23 |  74.5 |
|   Building  | 89.38 | 95.12 |
|     Car     | 92.06 | 95.12 |
| Column_Pole |  35.0 | 45.27 |
|    Fence    |  52.9 | 56.52 |
|  Pedestrian | 70.23 | 85.09 |
|     Road    | 96.34 | 98.34 |
|   Sidewalk  | 89.81 | 95.16 |
|  SignSymbol |  34.6 |  36.9 |
|     Sky     | 92.02 | 95.37 |
|     Tree    | 80.61 | 91.46 |
+-------------+-------+-------+
2023-05-24 01:53:54,205 - mmseg - INFO - Summary:
2023-05-24 01:53:54,206 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 94.16 | 72.65 | 78.99 |
+-------+-------+-------+
2023-05-24 01:53:54,219 - mmseg - INFO - The previous best checkpoint /tmp2/linchiayi/mmsegmentation/work_dirs/entextnet_stdc1_2x12_720x960_10k_camvid_trainval/best_mIoU_iter_8000.pth was removed
2023-05-24 01:53:54,407 - mmseg - INFO - Now best checkpoint is saved as best_mIoU_iter_10000.pth.
2023-05-24 01:53:54,407 - mmseg - INFO - Best mIoU is 0.7265 at 10000 iter.
2023-05-24 01:53:54,407 - mmseg - INFO - Exp name: entextnet_stdc1_2x12_720x960_10k_camvid_trainval.py
2023-05-24 01:53:54,408 - mmseg - INFO - Iter(val) [117]	aAcc: 0.9416, mIoU: 0.7265, mAcc: 0.7899, IoU.Bicyclist: 0.6623, IoU.Building: 0.8938, IoU.Car: 0.9206, IoU.Column_Pole: 0.3500, IoU.Fence: 0.5290, IoU.Pedestrian: 0.7023, IoU.Road: 0.9634, IoU.Sidewalk: 0.8981, IoU.SignSymbol: 0.3460, IoU.Sky: 0.9202, IoU.Tree: 0.8061, Acc.Bicyclist: 0.7450, Acc.Building: 0.9512, Acc.Car: 0.9512, Acc.Column_Pole: 0.4527, Acc.Fence: 0.5652, Acc.Pedestrian: 0.8509, Acc.Road: 0.9834, Acc.Sidewalk: 0.9516, Acc.SignSymbol: 0.3690, Acc.Sky: 0.9537, Acc.Tree: 0.9146
