2023-03-28 20:25:51,589 - mmseg - INFO - Multi-processing start method is `None`
2023-03-28 20:25:51,621 - mmseg - INFO - OpenCV num_threads is `96
2023-03-28 20:25:51,621 - mmseg - INFO - OMP num threads is 1
2023-03-28 20:25:51,754 - mmseg - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.16 (default, Mar  2 2023, 03:21:46) [GCC 11.2.0]
CUDA available: True
GPU 0,1: NVIDIA GeForce RTX 3090
CUDA_HOME: None
GCC: gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
PyTorch: 1.12.1+cu113
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.13.1+cu113
OpenCV: 4.7.0
MMCV: 1.7.0
MMCV Compiler: GCC 9.3
MMCV CUDA Compiler: 11.3
MMSegmentation: 0.30.0+792c24a
------------------------------------------------------------

2023-03-28 20:25:51,754 - mmseg - INFO - Distributed training: True
2023-03-28 20:25:52,640 - mmseg - INFO - Config:
norm_cfg = dict(type='BN', requires_grad=True)
model = dict(
    type='EncoderDecoder',
    pretrained=None,
    backbone=dict(
        type='STDCEnTextNet',
        backbone_cfg=dict(
            type='STDCNet',
            stdc_type='STDCNet1',
            in_channels=3,
            channels=(32, 64, 256, 512, 1024),
            bottleneck_type='cat',
            num_convs=4,
            norm_cfg=dict(type='BN', requires_grad=True),
            act_cfg=dict(type='ReLU'),
            with_final_conv=False,
            init_cfg=dict(
                type='Pretrained',
                checkpoint=
                'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth'
            )),
        last_in_channels=(1035, 512),
        out_channels=128,
        ffm_cfg=dict(in_channels=384, out_channels=256, scale_factor=4),
        text_embeddings='./pretrained/textfeat_camvid_11_RN50_1024.pth'),
    decode_head=dict(
        type='FCNHead',
        in_channels=256,
        channels=256,
        num_convs=1,
        num_classes=19,
        in_index=3,
        concat_input=False,
        dropout_ratio=0.1,
        norm_cfg=dict(type='BN', requires_grad=True),
        align_corners=True,
        sampler=dict(type='OHEMPixelSampler', thresh=0.7, min_kept=10000),
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
    auxiliary_head=[
        dict(
            type='FCNHead',
            in_channels=128,
            channels=64,
            num_convs=1,
            num_classes=11,
            in_index=2,
            norm_cfg=dict(type='BN', requires_grad=True),
            concat_input=False,
            align_corners=False,
            sampler=dict(type='OHEMPixelSampler', thresh=0.7, min_kept=10000),
            loss_decode=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
        dict(
            type='FCNHead',
            in_channels=128,
            channels=64,
            num_convs=1,
            num_classes=11,
            in_index=1,
            norm_cfg=dict(type='BN', requires_grad=True),
            concat_input=False,
            align_corners=False,
            sampler=dict(type='OHEMPixelSampler', thresh=0.7, min_kept=10000),
            loss_decode=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
        dict(
            type='STDCHead',
            in_channels=256,
            channels=64,
            num_convs=1,
            num_classes=2,
            boundary_threshold=0.1,
            in_index=0,
            norm_cfg=dict(type='BN', requires_grad=True),
            concat_input=False,
            align_corners=True,
            loss_decode=[
                dict(
                    type='CrossEntropyLoss',
                    loss_name='loss_ce',
                    use_sigmoid=True,
                    loss_weight=1.0),
                dict(type='DiceLoss', loss_name='loss_dice', loss_weight=1.0)
            ]),
        dict(
            type='VanillaHead',
            temperature=0.07,
            in_channels=11,
            channels=1,
            num_classes=11,
            in_index=4,
            sampler=dict(type='OHEMPixelSampler', thresh=0.7, min_kept=10000),
            loss_decode=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0))
    ],
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
dataset_type = 'CamVidDataset'
data_root = 'data/CamVid/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
crop_size = (720, 960)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(type='Resize', img_scale=(2048, 720), ratio_range=(0.5, 2.5)),
    dict(type='RandomCrop', crop_size=(720, 960), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size=(720, 960), pad_val=0, seg_pad_val=255),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_semantic_seg'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(2048, 720),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=12,
    workers_per_gpu=4,
    train=dict(
        type='CamVidDataset',
        data_root='data/CamVid/',
        img_dir='train',
        ann_dir='train_labelIds',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations'),
            dict(type='Resize', img_scale=(2048, 720), ratio_range=(0.5, 2.5)),
            dict(type='RandomCrop', crop_size=(720, 960), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size=(720, 960), pad_val=0, seg_pad_val=255),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_semantic_seg'])
        ]),
    val=dict(
        type='CamVidDataset',
        data_root='data/CamVid/',
        img_dir='val',
        ann_dir='val_labelIds',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 720),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CamVidDataset',
        data_root='data/CamVid/',
        img_dir='val',
        ann_dir='val_labelIds',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(2048, 720),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
log_config = dict(
    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
cudnn_benchmark = True
optimizer = dict(
    type='SGD',
    lr=0.01,
    momentum=0.9,
    weight_decay=0.0005,
    paramwise_cfg=dict(custom_keys=dict(norm=dict(decay_mult=0.0))))
optimizer_config = dict()
lr_config = dict(
    policy='poly',
    power=0.9,
    min_lr=1e-06,
    by_epoch=False,
    warmup='linear',
    warmup_iters=200,
    warmup_ratio=1e-05)
runner = dict(type='IterBasedRunner', max_iters=10000)
checkpoint_config = dict(by_epoch=False, interval=1000)
evaluation = dict(interval=1000, metric='mIoU', pre_eval=True)
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth'
work_dir = './work_dirs/stdc1-entext_2x12_720x960_10k_camvid'
gpu_ids = range(0, 2)
auto_resume = False

2023-03-28 20:25:55,368 - mmseg - INFO - Set random seed to 1739995951, deterministic: False
2023-03-28 20:25:55,384 - mmseg - INFO - Loaded 367 images
2023-03-28 20:25:56,711 - mmseg - INFO - initialize STDCNet with init_cfg {'type': 'Pretrained', 'checkpoint': 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth'}
2023-03-28 20:25:57,033 - mmseg - INFO - initialize FCNHead with init_cfg {'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
Name of parameter - Initialization information

backbone.backbone.stages.0.conv.weight - torch.Size([32, 3, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.0.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.0.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.1.conv.weight - torch.Size([64, 32, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.1.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.0.conv.weight - torch.Size([128, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.0.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.0.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.1.conv.weight - torch.Size([64, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.1.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.2.conv.weight - torch.Size([32, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.2.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.2.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.3.conv.weight - torch.Size([32, 32, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.3.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.3.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.downsample.conv.weight - torch.Size([128, 1, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.downsample.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.downsample.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.0.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.0.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.0.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.1.conv.weight - torch.Size([64, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.1.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.2.conv.weight - torch.Size([32, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.2.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.2.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.3.conv.weight - torch.Size([32, 32, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.3.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.3.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.0.conv.weight - torch.Size([256, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.0.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.0.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.1.conv.weight - torch.Size([128, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.1.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.1.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.2.conv.weight - torch.Size([64, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.2.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.2.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.3.conv.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.3.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.3.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.downsample.conv.weight - torch.Size([256, 1, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.downsample.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.downsample.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.0.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.0.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.0.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.1.conv.weight - torch.Size([128, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.1.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.1.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.2.conv.weight - torch.Size([64, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.2.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.2.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.3.conv.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.3.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.3.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.0.conv.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.0.bn.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.0.bn.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.1.conv.weight - torch.Size([256, 512, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.1.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.1.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.2.conv.weight - torch.Size([128, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.2.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.2.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.3.conv.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.3.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.3.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.downsample.conv.weight - torch.Size([512, 1, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.downsample.bn.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.downsample.bn.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.0.conv.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.0.bn.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.0.bn.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.1.conv.weight - torch.Size([256, 512, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.1.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.1.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.2.conv.weight - torch.Size([128, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.2.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.2.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.3.conv.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.3.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.3.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.arms.0.conv_layer.conv.weight - torch.Size([128, 1035, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.arms.0.conv_layer.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.0.conv_layer.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.0.atten_conv_layer.1.conv.weight - torch.Size([128, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.0.atten_conv_layer.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.0.atten_conv_layer.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.conv_layer.conv.weight - torch.Size([128, 512, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.arms.1.conv_layer.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.conv_layer.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.atten_conv_layer.1.conv.weight - torch.Size([128, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.atten_conv_layer.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.atten_conv_layer.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.convs.0.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.convs.0.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.convs.0.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.convs.1.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.convs.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.convs.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.conv_avg.conv.weight - torch.Size([128, 1035, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.conv_avg.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.conv_avg.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.ffm.conv0.conv.weight - torch.Size([256, 384, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.ffm.conv0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.ffm.conv0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.ffm.attention.1.conv.weight - torch.Size([64, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.ffm.attention.2.conv.weight - torch.Size([256, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.conv_seg.weight - torch.Size([19, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.conv_seg.bias - torch.Size([19]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.conv_seg.weight - torch.Size([11, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.conv_seg.bias - torch.Size([11]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.convs.0.conv.weight - torch.Size([64, 128, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.convs.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.convs.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.conv_seg.weight - torch.Size([11, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.conv_seg.bias - torch.Size([11]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.convs.0.conv.weight - torch.Size([64, 128, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.convs.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.convs.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.fusion_kernel - torch.Size([1, 3, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.conv_seg.weight - torch.Size([2, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.conv_seg.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.convs.0.conv.weight - torch.Size([64, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.convs.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.convs.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
2023-03-28 20:25:57,036 - mmseg - INFO - EncoderDecoder(
  (backbone): STDCEnTextNet(
    (backbone): STDCNet(
      (stages): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (1): ConvModule(
          (conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (2): Sequential(
          (0): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
            (downsample): ConvModule(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
              (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (skip): AvgPool2d(kernel_size=3, stride=2, padding=1)
          )
          (1): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
          )
        )
        (3): Sequential(
          (0): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
            (downsample): ConvModule(
              (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=256, bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (skip): AvgPool2d(kernel_size=3, stride=2, padding=1)
          )
          (1): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
          )
        )
        (4): Sequential(
          (0): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
            (downsample): ConvModule(
              (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=512, bias=False)
              (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (skip): AvgPool2d(kernel_size=3, stride=2, padding=1)
          )
          (1): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
          )
        )
      )
    )
    init_cfg={'type': 'Pretrained', 'checkpoint': 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth'}
    (arms): ModuleList(
      (0): AttentionRefinementModule(
        (conv_layer): ConvModule(
          (conv): Conv2d(1035, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (atten_conv_layer): Sequential(
          (0): AdaptiveAvgPool2d(output_size=(1, 1))
          (1): ConvModule(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): Sigmoid()
        )
      )
      (1): AttentionRefinementModule(
        (conv_layer): ConvModule(
          (conv): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (atten_conv_layer): Sequential(
          (0): AdaptiveAvgPool2d(output_size=(1, 1))
          (1): ConvModule(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): Sigmoid()
        )
      )
    )
    (convs): ModuleList(
      (0): ConvModule(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
      (1): ConvModule(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
    (conv_avg): ConvModule(
      (conv): Conv2d(1035, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activate): ReLU(inplace=True)
    )
    (ffm): FeatureFusionModule(
      (conv0): ConvModule(
        (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
      (attention): Sequential(
        (0): AdaptiveAvgPool2d(output_size=(1, 1))
        (1): ConvModule(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (activate): ReLU(inplace=True)
        )
        (2): ConvModule(
          (conv): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (3): Sigmoid()
      )
    )
  )
  (decode_head): FCNHead(
    input_transform=None, ignore_index=255, align_corners=True
    (loss_decode): CrossEntropyLoss(avg_non_ignore=False)
    (conv_seg): Conv2d(256, 19, kernel_size=(1, 1), stride=(1, 1))
    (dropout): Dropout2d(p=0.1, inplace=False)
    (convs): Sequential(
      (0): ConvModule(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
  )
  init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
  (auxiliary_head): ModuleList(
    (0): FCNHead(
      input_transform=None, ignore_index=255, align_corners=False
      (loss_decode): CrossEntropyLoss(avg_non_ignore=False)
      (conv_seg): Conv2d(64, 11, kernel_size=(1, 1), stride=(1, 1))
      (dropout): Dropout2d(p=0.1, inplace=False)
      (convs): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
    init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
    (1): FCNHead(
      input_transform=None, ignore_index=255, align_corners=False
      (loss_decode): CrossEntropyLoss(avg_non_ignore=False)
      (conv_seg): Conv2d(64, 11, kernel_size=(1, 1), stride=(1, 1))
      (dropout): Dropout2d(p=0.1, inplace=False)
      (convs): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
    init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
    (2): STDCHead(
      input_transform=None, ignore_index=255, align_corners=True
      (loss_decode): ModuleList(
        (0): CrossEntropyLoss(avg_non_ignore=False)
        (1): DiceLoss()
      )
      (conv_seg): Conv2d(64, 2, kernel_size=(1, 1), stride=(1, 1))
      (dropout): Dropout2d(p=0.1, inplace=False)
      (convs): Sequential(
        (0): ConvModule(
          (conv): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
    init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
    (3): VanillaHead(
      input_transform=None, ignore_index=255, align_corners=False
      (loss_decode): CrossEntropyLoss(avg_non_ignore=False)
      (conv_seg): None
      (dropout): Dropout2d(p=0.1, inplace=False)
    )
    init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
  )
)
2023-03-28 20:25:57,361 - mmseg - INFO - Loaded 101 images
2023-03-28 20:25:57,366 - mmseg - INFO - Start running, host: linchiayi@cml9, work_dir: /tmp2/linchiayi/mmsegmentation/work_dirs/stdc1-entext_2x12_720x960_10k_camvid
2023-03-28 20:25:57,366 - mmseg - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-03-28 20:25:57,367 - mmseg - INFO - workflow: [('train', 1)], max: 10000 iters
2023-03-28 20:25:57,367 - mmseg - INFO - Checkpoints will be saved to /tmp2/linchiayi/mmsegmentation/work_dirs/stdc1-entext_2x12_720x960_10k_camvid by HardDiskBackend.
2023-03-28 20:27:51,052 - mmseg - INFO - Iter [50/10000]	lr: 2.439e-03, eta: 6:15:37, time: 2.265, data_time: 0.859, memory: 8511, decode.loss_ce: 1.8946, decode.acc_seg: 30.8380, aux_0.loss_ce: 1.6878, aux_0.acc_seg: 28.1965, aux_1.loss_ce: 1.6813, aux_1.acc_seg: 27.6586, aux_2.loss_ce: 0.5894, aux_2.loss_dice: 0.4995, aux_2.acc_seg: 68.6341, aux_3.loss_ce: 1.8911, aux_3.acc_seg: 5.4862, loss: 8.2437
2023-03-28 20:29:01,115 - mmseg - INFO - Iter [100/10000]	lr: 4.906e-03, eta: 5:02:28, time: 1.401, data_time: 0.241, memory: 8511, decode.loss_ce: 0.9834, decode.acc_seg: 63.4282, aux_0.loss_ce: 0.9472, aux_0.acc_seg: 65.5282, aux_1.loss_ce: 1.0031, aux_1.acc_seg: 63.2868, aux_2.loss_ce: 0.2567, aux_2.loss_dice: 0.4510, aux_2.acc_seg: 95.7944, aux_3.loss_ce: 1.6079, aux_3.acc_seg: 53.2144, loss: 5.2493
2023-03-28 20:30:10,053 - mmseg - INFO - Iter [150/10000]	lr: 7.350e-03, eta: 4:36:04, time: 1.379, data_time: 0.244, memory: 8511, decode.loss_ce: 0.6136, decode.acc_seg: 76.7757, aux_0.loss_ce: 0.5294, aux_0.acc_seg: 80.5096, aux_1.loss_ce: 0.5571, aux_1.acc_seg: 79.3512, aux_2.loss_ce: 0.2206, aux_2.loss_dice: 0.4044, aux_2.acc_seg: 95.8580, aux_3.loss_ce: 1.2050, aux_3.acc_seg: 81.4579, loss: 3.5301
2023-03-28 20:31:21,951 - mmseg - INFO - Iter [200/10000]	lr: 9.772e-03, eta: 4:24:42, time: 1.438, data_time: 0.292, memory: 8511, decode.loss_ce: 0.4028, decode.acc_seg: 84.3238, aux_0.loss_ce: 0.3845, aux_0.acc_seg: 85.2776, aux_1.loss_ce: 0.3990, aux_1.acc_seg: 84.7937, aux_2.loss_ce: 0.1868, aux_2.loss_dice: 0.3571, aux_2.acc_seg: 95.7789, aux_3.loss_ce: 0.9554, aux_3.acc_seg: 84.4349, loss: 2.6856
2023-03-28 20:32:13,672 - mmseg - INFO - Iter [250/10000]	lr: 9.776e-03, eta: 4:04:21, time: 1.036, data_time: 0.237, memory: 8511, decode.loss_ce: 0.3252, decode.acc_seg: 86.5733, aux_0.loss_ce: 0.3226, aux_0.acc_seg: 87.3479, aux_1.loss_ce: 0.3342, aux_1.acc_seg: 86.7885, aux_2.loss_ce: 0.1656, aux_2.loss_dice: 0.3326, aux_2.acc_seg: 95.7208, aux_3.loss_ce: 0.8373, aux_3.acc_seg: 85.8126, loss: 2.3175
2023-03-28 20:32:52,525 - mmseg - INFO - Iter [300/10000]	lr: 9.731e-03, eta: 3:43:31, time: 0.777, data_time: 0.229, memory: 8511, decode.loss_ce: 0.2831, decode.acc_seg: 88.1212, aux_0.loss_ce: 0.2862, aux_0.acc_seg: 88.2746, aux_1.loss_ce: 0.2989, aux_1.acc_seg: 87.6546, aux_2.loss_ce: 0.1537, aux_2.loss_dice: 0.3205, aux_2.acc_seg: 95.6767, aux_3.loss_ce: 0.7454, aux_3.acc_seg: 87.3119, loss: 2.0877
2023-03-28 20:33:53,930 - mmseg - INFO - Iter [350/10000]	lr: 9.685e-03, eta: 3:38:47, time: 1.227, data_time: 0.304, memory: 8511, decode.loss_ce: 0.2556, decode.acc_seg: 88.8778, aux_0.loss_ce: 0.2605, aux_0.acc_seg: 89.1599, aux_1.loss_ce: 0.2733, aux_1.acc_seg: 88.5612, aux_2.loss_ce: 0.1483, aux_2.loss_dice: 0.3143, aux_2.acc_seg: 95.7153, aux_3.loss_ce: 0.6848, aux_3.acc_seg: 88.2018, loss: 1.9368
2023-03-28 20:34:49,982 - mmseg - INFO - Iter [400/10000]	lr: 9.640e-03, eta: 3:32:52, time: 1.121, data_time: 0.251, memory: 8511, decode.loss_ce: 0.2343, decode.acc_seg: 89.8852, aux_0.loss_ce: 0.2423, aux_0.acc_seg: 89.8363, aux_1.loss_ce: 0.2561, aux_1.acc_seg: 89.2318, aux_2.loss_ce: 0.1460, aux_2.loss_dice: 0.3089, aux_2.acc_seg: 95.6873, aux_3.loss_ce: 0.6455, aux_3.acc_seg: 89.0910, loss: 1.8332
2023-03-28 20:35:51,275 - mmseg - INFO - Iter [450/10000]	lr: 9.595e-03, eta: 3:29:54, time: 1.226, data_time: 0.241, memory: 8511, decode.loss_ce: 0.2074, decode.acc_seg: 90.7543, aux_0.loss_ce: 0.2203, aux_0.acc_seg: 90.5367, aux_1.loss_ce: 0.2310, aux_1.acc_seg: 90.0455, aux_2.loss_ce: 0.1434, aux_2.loss_dice: 0.3044, aux_2.acc_seg: 95.6841, aux_3.loss_ce: 0.6096, aux_3.acc_seg: 89.8329, loss: 1.7159
2023-03-28 20:36:50,849 - mmseg - INFO - Iter [500/10000]	lr: 9.550e-03, eta: 3:26:48, time: 1.193, data_time: 0.297, memory: 8511, decode.loss_ce: 0.1951, decode.acc_seg: 91.2435, aux_0.loss_ce: 0.2063, aux_0.acc_seg: 90.9819, aux_1.loss_ce: 0.2230, aux_1.acc_seg: 90.3814, aux_2.loss_ce: 0.1419, aux_2.loss_dice: 0.3020, aux_2.acc_seg: 95.6738, aux_3.loss_ce: 0.5879, aux_3.acc_seg: 90.2631, loss: 1.6562
2023-03-28 20:37:46,982 - mmseg - INFO - Iter [550/10000]	lr: 9.505e-03, eta: 3:23:04, time: 1.121, data_time: 0.228, memory: 8511, decode.loss_ce: 0.1826, decode.acc_seg: 91.6471, aux_0.loss_ce: 0.1942, aux_0.acc_seg: 91.3614, aux_1.loss_ce: 0.2066, aux_1.acc_seg: 90.8266, aux_2.loss_ce: 0.1406, aux_2.loss_dice: 0.2997, aux_2.acc_seg: 95.6890, aux_3.loss_ce: 0.5626, aux_3.acc_seg: 90.6531, loss: 1.5864
2023-03-28 20:38:46,907 - mmseg - INFO - Iter [600/10000]	lr: 9.459e-03, eta: 3:20:49, time: 1.199, data_time: 0.241, memory: 8511, decode.loss_ce: 0.1758, decode.acc_seg: 91.9612, aux_0.loss_ce: 0.1868, aux_0.acc_seg: 91.7200, aux_1.loss_ce: 0.2034, aux_1.acc_seg: 91.1571, aux_2.loss_ce: 0.1382, aux_2.loss_dice: 0.2965, aux_2.acc_seg: 95.7993, aux_3.loss_ce: 0.5427, aux_3.acc_seg: 90.8161, loss: 1.5434
2023-03-28 20:39:47,903 - mmseg - INFO - Iter [650/10000]	lr: 9.414e-03, eta: 3:19:01, time: 1.221, data_time: 0.302, memory: 8511, decode.loss_ce: 0.1704, decode.acc_seg: 92.0973, aux_0.loss_ce: 0.1835, aux_0.acc_seg: 91.7776, aux_1.loss_ce: 0.1960, aux_1.acc_seg: 91.2387, aux_2.loss_ce: 0.1372, aux_2.loss_dice: 0.2949, aux_2.acc_seg: 95.7423, aux_3.loss_ce: 0.5270, aux_3.acc_seg: 90.9137, loss: 1.5089
2023-03-28 20:40:43,564 - mmseg - INFO - Iter [700/10000]	lr: 9.369e-03, eta: 3:16:08, time: 1.113, data_time: 0.230, memory: 8511, decode.loss_ce: 0.1668, decode.acc_seg: 92.1675, aux_0.loss_ce: 0.1792, aux_0.acc_seg: 91.7810, aux_1.loss_ce: 0.1966, aux_1.acc_seg: 91.1901, aux_2.loss_ce: 0.1380, aux_2.loss_dice: 0.2932, aux_2.acc_seg: 95.7150, aux_3.loss_ce: 0.5092, aux_3.acc_seg: 90.9607, loss: 1.4829
2023-03-28 20:41:39,484 - mmseg - INFO - Iter [750/10000]	lr: 9.323e-03, eta: 3:13:34, time: 1.118, data_time: 0.233, memory: 8511, decode.loss_ce: 0.1564, decode.acc_seg: 92.6178, aux_0.loss_ce: 0.1673, aux_0.acc_seg: 92.2628, aux_1.loss_ce: 0.1854, aux_1.acc_seg: 91.6623, aux_2.loss_ce: 0.1369, aux_2.loss_dice: 0.2918, aux_2.acc_seg: 95.7795, aux_3.loss_ce: 0.4959, aux_3.acc_seg: 91.3290, loss: 1.4338
2023-03-28 20:42:45,001 - mmseg - INFO - Iter [800/10000]	lr: 9.278e-03, eta: 3:13:02, time: 1.309, data_time: 0.310, memory: 8511, decode.loss_ce: 0.1522, decode.acc_seg: 92.7213, aux_0.loss_ce: 0.1641, aux_0.acc_seg: 92.3689, aux_1.loss_ce: 0.1797, aux_1.acc_seg: 91.8024, aux_2.loss_ce: 0.1361, aux_2.loss_dice: 0.2903, aux_2.acc_seg: 95.7622, aux_3.loss_ce: 0.4810, aux_3.acc_seg: 91.4617, loss: 1.4034
2023-03-28 20:43:41,461 - mmseg - INFO - Iter [850/10000]	lr: 9.233e-03, eta: 3:10:50, time: 1.129, data_time: 0.237, memory: 8511, decode.loss_ce: 0.1409, decode.acc_seg: 93.1730, aux_0.loss_ce: 0.1525, aux_0.acc_seg: 92.7946, aux_1.loss_ce: 0.1684, aux_1.acc_seg: 92.2370, aux_2.loss_ce: 0.1356, aux_2.loss_dice: 0.2880, aux_2.acc_seg: 95.7483, aux_3.loss_ce: 0.4580, aux_3.acc_seg: 91.8762, loss: 1.3435
2023-03-28 20:44:37,413 - mmseg - INFO - Iter [900/10000]	lr: 9.187e-03, eta: 3:08:40, time: 1.119, data_time: 0.233, memory: 8511, decode.loss_ce: 0.1372, decode.acc_seg: 93.2758, aux_0.loss_ce: 0.1484, aux_0.acc_seg: 92.9669, aux_1.loss_ce: 0.1648, aux_1.acc_seg: 92.4043, aux_2.loss_ce: 0.1353, aux_2.loss_dice: 0.2876, aux_2.acc_seg: 95.7922, aux_3.loss_ce: 0.4512, aux_3.acc_seg: 91.9948, loss: 1.3246
2023-03-28 20:45:38,376 - mmseg - INFO - Iter [950/10000]	lr: 9.142e-03, eta: 3:07:26, time: 1.219, data_time: 0.310, memory: 8511, decode.loss_ce: 0.1421, decode.acc_seg: 93.1202, aux_0.loss_ce: 0.1511, aux_0.acc_seg: 92.8644, aux_1.loss_ce: 0.1683, aux_1.acc_seg: 92.2859, aux_2.loss_ce: 0.1349, aux_2.loss_dice: 0.2866, aux_2.acc_seg: 95.8120, aux_3.loss_ce: 0.4500, aux_3.acc_seg: 91.8488, loss: 1.3331
2023-03-28 20:46:40,554 - mmseg - INFO - Saving checkpoint at 1000 iterations
2023-03-28 20:46:41,124 - mmseg - INFO - Exp name: stdc1-entext_2x12_720x960_10k_camvid.py
2023-03-28 20:46:41,125 - mmseg - INFO - Iter [1000/10000]	lr: 9.096e-03, eta: 3:06:30, time: 1.257, data_time: 0.244, memory: 8511, decode.loss_ce: 0.1352, decode.acc_seg: 93.3531, aux_0.loss_ce: 0.1457, aux_0.acc_seg: 93.0048, aux_1.loss_ce: 0.1631, aux_1.acc_seg: 92.3416, aux_2.loss_ce: 0.1358, aux_2.loss_dice: 0.2859, aux_2.acc_seg: 95.7272, aux_3.loss_ce: 0.4378, aux_3.acc_seg: 91.9414, loss: 1.3035
2023-03-28 20:47:12,931 - mmseg - INFO - per class results:
2023-03-28 20:47:12,932 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 20.23 | 20.47 |
|   Building  | 88.48 | 90.55 |
|     Car     | 84.99 | 92.52 |
| Column_Pole |  7.63 | 10.67 |
|    Fence    | 70.71 | 97.52 |
|  Pedestrian | 19.79 | 70.86 |
|     Road    | 96.17 | 97.54 |
|   Sidewalk  | 86.37 | 96.97 |
|  SignSymbol |  0.0  |  0.0  |
|     Sky     | 93.47 | 95.75 |
|     Tree    | 89.62 | 97.06 |
+-------------+-------+-------+
2023-03-28 20:47:12,932 - mmseg - INFO - Summary:
2023-03-28 20:47:12,932 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 92.72 | 59.77 | 69.99 |
+-------+-------+-------+
2023-03-28 20:47:12,933 - mmseg - INFO - Exp name: stdc1-entext_2x12_720x960_10k_camvid.py
2023-03-28 20:47:12,933 - mmseg - INFO - Iter(val) [51]	aAcc: 0.9272, mIoU: 0.5977, mAcc: 0.6999, IoU.Bicyclist: 0.2023, IoU.Building: 0.8848, IoU.Car: 0.8499, IoU.Column_Pole: 0.0763, IoU.Fence: 0.7071, IoU.Pedestrian: 0.1979, IoU.Road: 0.9617, IoU.Sidewalk: 0.8637, IoU.SignSymbol: 0.0000, IoU.Sky: 0.9347, IoU.Tree: 0.8962, Acc.Bicyclist: 0.2047, Acc.Building: 0.9055, Acc.Car: 0.9252, Acc.Column_Pole: 0.1067, Acc.Fence: 0.9752, Acc.Pedestrian: 0.7086, Acc.Road: 0.9754, Acc.Sidewalk: 0.9697, Acc.SignSymbol: 0.0000, Acc.Sky: 0.9575, Acc.Tree: 0.9706
2023-03-28 20:48:09,410 - mmseg - INFO - Iter [1050/10000]	lr: 9.051e-03, eta: 3:09:10, time: 1.765, data_time: 0.880, memory: 8511, decode.loss_ce: 0.1290, decode.acc_seg: 93.5811, aux_0.loss_ce: 0.1384, aux_0.acc_seg: 93.2817, aux_1.loss_ce: 0.1551, aux_1.acc_seg: 92.6802, aux_2.loss_ce: 0.1329, aux_2.loss_dice: 0.2840, aux_2.acc_seg: 95.8697, aux_3.loss_ce: 0.4130, aux_3.acc_seg: 92.2175, loss: 1.2524
2023-03-28 20:49:15,601 - mmseg - INFO - Iter [1100/10000]	lr: 9.005e-03, eta: 3:08:29, time: 1.323, data_time: 0.318, memory: 8511, decode.loss_ce: 0.1348, decode.acc_seg: 93.4777, aux_0.loss_ce: 0.1420, aux_0.acc_seg: 93.2101, aux_1.loss_ce: 0.1592, aux_1.acc_seg: 92.6364, aux_2.loss_ce: 0.1350, aux_2.loss_dice: 0.2849, aux_2.acc_seg: 95.7590, aux_3.loss_ce: 0.4224, aux_3.acc_seg: 92.1130, loss: 1.2783
2023-03-28 20:50:12,021 - mmseg - INFO - Iter [1150/10000]	lr: 8.960e-03, eta: 3:06:31, time: 1.128, data_time: 0.237, memory: 8511, decode.loss_ce: 0.1293, decode.acc_seg: 93.6416, aux_0.loss_ce: 0.1378, aux_0.acc_seg: 93.3486, aux_1.loss_ce: 0.1554, aux_1.acc_seg: 92.7414, aux_2.loss_ce: 0.1342, aux_2.loss_dice: 0.2833, aux_2.acc_seg: 95.8082, aux_3.loss_ce: 0.4122, aux_3.acc_seg: 92.2340, loss: 1.2522
2023-03-28 20:51:07,736 - mmseg - INFO - Iter [1200/10000]	lr: 8.914e-03, eta: 3:04:32, time: 1.114, data_time: 0.233, memory: 8511, decode.loss_ce: 0.1231, decode.acc_seg: 93.7954, aux_0.loss_ce: 0.1317, aux_0.acc_seg: 93.5031, aux_1.loss_ce: 0.1488, aux_1.acc_seg: 92.8544, aux_2.loss_ce: 0.1335, aux_2.loss_dice: 0.2814, aux_2.acc_seg: 95.7786, aux_3.loss_ce: 0.3935, aux_3.acc_seg: 92.3315, loss: 1.2121
2023-03-28 20:52:11,584 - mmseg - INFO - Iter [1250/10000]	lr: 8.869e-03, eta: 3:03:36, time: 1.277, data_time: 0.325, memory: 8511, decode.loss_ce: 0.1207, decode.acc_seg: 93.9913, aux_0.loss_ce: 0.1290, aux_0.acc_seg: 93.6968, aux_1.loss_ce: 0.1468, aux_1.acc_seg: 93.0813, aux_2.loss_ce: 0.1331, aux_2.loss_dice: 0.2816, aux_2.acc_seg: 95.8076, aux_3.loss_ce: 0.3943, aux_3.acc_seg: 92.5397, loss: 1.2056
2023-03-28 20:53:11,295 - mmseg - INFO - Iter [1300/10000]	lr: 8.823e-03, eta: 3:02:11, time: 1.194, data_time: 0.238, memory: 8511, decode.loss_ce: 0.1219, decode.acc_seg: 93.8992, aux_0.loss_ce: 0.1295, aux_0.acc_seg: 93.6812, aux_1.loss_ce: 0.1472, aux_1.acc_seg: 92.9692, aux_2.loss_ce: 0.1334, aux_2.loss_dice: 0.2802, aux_2.acc_seg: 95.7624, aux_3.loss_ce: 0.3889, aux_3.acc_seg: 92.4401, loss: 1.2012
2023-03-28 20:54:07,057 - mmseg - INFO - Iter [1350/10000]	lr: 8.777e-03, eta: 3:00:23, time: 1.115, data_time: 0.233, memory: 8511, decode.loss_ce: 0.1226, decode.acc_seg: 93.9633, aux_0.loss_ce: 0.1311, aux_0.acc_seg: 93.6548, aux_1.loss_ce: 0.1482, aux_1.acc_seg: 93.0065, aux_2.loss_ce: 0.1335, aux_2.loss_dice: 0.2816, aux_2.acc_seg: 95.8049, aux_3.loss_ce: 0.3899, aux_3.acc_seg: 92.4695, loss: 1.2070
2023-03-28 20:54:52,690 - mmseg - INFO - Iter [1400/10000]	lr: 8.732e-03, eta: 2:57:37, time: 0.912, data_time: 0.294, memory: 8511, decode.loss_ce: 0.1156, decode.acc_seg: 94.2184, aux_0.loss_ce: 0.1235, aux_0.acc_seg: 93.9489, aux_1.loss_ce: 0.1390, aux_1.acc_seg: 93.3123, aux_2.loss_ce: 0.1337, aux_2.loss_dice: 0.2801, aux_2.acc_seg: 95.7499, aux_3.loss_ce: 0.3750, aux_3.acc_seg: 92.7421, loss: 1.1668
2023-03-28 20:55:49,932 - mmseg - INFO - Iter [1450/10000]	lr: 8.686e-03, eta: 2:56:07, time: 1.145, data_time: 0.252, memory: 8511, decode.loss_ce: 0.1148, decode.acc_seg: 94.2704, aux_0.loss_ce: 0.1211, aux_0.acc_seg: 94.0005, aux_1.loss_ce: 0.1388, aux_1.acc_seg: 93.3799, aux_2.loss_ce: 0.1330, aux_2.loss_dice: 0.2796, aux_2.acc_seg: 95.8175, aux_3.loss_ce: 0.3708, aux_3.acc_seg: 92.7231, loss: 1.1581
2023-03-28 20:56:51,970 - mmseg - INFO - Iter [1500/10000]	lr: 8.640e-03, eta: 2:55:06, time: 1.241, data_time: 0.246, memory: 8511, decode.loss_ce: 0.1174, decode.acc_seg: 94.0959, aux_0.loss_ce: 0.1251, aux_0.acc_seg: 93.8129, aux_1.loss_ce: 0.1419, aux_1.acc_seg: 93.1855, aux_2.loss_ce: 0.1336, aux_2.loss_dice: 0.2788, aux_2.acc_seg: 95.7403, aux_3.loss_ce: 0.3707, aux_3.acc_seg: 92.5832, loss: 1.1675
2023-03-28 20:57:51,583 - mmseg - INFO - Iter [1550/10000]	lr: 8.595e-03, eta: 2:53:53, time: 1.193, data_time: 0.300, memory: 8511, decode.loss_ce: 0.1233, decode.acc_seg: 93.8660, aux_0.loss_ce: 0.1303, aux_0.acc_seg: 93.6122, aux_1.loss_ce: 0.1491, aux_1.acc_seg: 92.9706, aux_2.loss_ce: 0.1329, aux_2.loss_dice: 0.2801, aux_2.acc_seg: 95.8247, aux_3.loss_ce: 0.3831, aux_3.acc_seg: 92.4654, loss: 1.1988
2023-03-28 20:58:47,652 - mmseg - INFO - Iter [1600/10000]	lr: 8.549e-03, eta: 2:52:21, time: 1.120, data_time: 0.229, memory: 8511, decode.loss_ce: 0.1107, decode.acc_seg: 94.4071, aux_0.loss_ce: 0.1183, aux_0.acc_seg: 94.1783, aux_1.loss_ce: 0.1351, aux_1.acc_seg: 93.5162, aux_2.loss_ce: 0.1321, aux_2.loss_dice: 0.2779, aux_2.acc_seg: 95.8223, aux_3.loss_ce: 0.3582, aux_3.acc_seg: 92.9385, loss: 1.1324
2023-03-28 20:59:48,985 - mmseg - INFO - Iter [1650/10000]	lr: 8.503e-03, eta: 2:51:18, time: 1.226, data_time: 0.250, memory: 8511, decode.loss_ce: 0.1133, decode.acc_seg: 94.2334, aux_0.loss_ce: 0.1187, aux_0.acc_seg: 93.9997, aux_1.loss_ce: 0.1360, aux_1.acc_seg: 93.3558, aux_2.loss_ce: 0.1327, aux_2.loss_dice: 0.2789, aux_2.acc_seg: 95.7829, aux_3.loss_ce: 0.3500, aux_3.acc_seg: 92.8008, loss: 1.1296
2023-03-28 21:00:48,632 - mmseg - INFO - Iter [1700/10000]	lr: 8.457e-03, eta: 2:50:08, time: 1.194, data_time: 0.291, memory: 8511, decode.loss_ce: 0.1188, decode.acc_seg: 94.0714, aux_0.loss_ce: 0.1256, aux_0.acc_seg: 93.8288, aux_1.loss_ce: 0.1428, aux_1.acc_seg: 93.1883, aux_2.loss_ce: 0.1331, aux_2.loss_dice: 0.2784, aux_2.acc_seg: 95.7594, aux_3.loss_ce: 0.3670, aux_3.acc_seg: 92.5443, loss: 1.1657
2023-03-28 21:01:45,095 - mmseg - INFO - Iter [1750/10000]	lr: 8.411e-03, eta: 2:48:43, time: 1.129, data_time: 0.234, memory: 8511, decode.loss_ce: 0.1101, decode.acc_seg: 94.3770, aux_0.loss_ce: 0.1169, aux_0.acc_seg: 94.1476, aux_1.loss_ce: 0.1324, aux_1.acc_seg: 93.5179, aux_2.loss_ce: 0.1306, aux_2.loss_dice: 0.2756, aux_2.acc_seg: 95.8511, aux_3.loss_ce: 0.3448, aux_3.acc_seg: 92.9047, loss: 1.1104
2023-03-28 21:02:43,553 - mmseg - INFO - Iter [1800/10000]	lr: 8.365e-03, eta: 2:47:28, time: 1.169, data_time: 0.238, memory: 8511, decode.loss_ce: 0.1118, decode.acc_seg: 94.3477, aux_0.loss_ce: 0.1190, aux_0.acc_seg: 94.1086, aux_1.loss_ce: 0.1341, aux_1.acc_seg: 93.4745, aux_2.loss_ce: 0.1332, aux_2.loss_dice: 0.2778, aux_2.acc_seg: 95.7757, aux_3.loss_ce: 0.3515, aux_3.acc_seg: 92.8757, loss: 1.1275
2023-03-28 21:03:46,001 - mmseg - INFO - Iter [1850/10000]	lr: 8.320e-03, eta: 2:46:32, time: 1.249, data_time: 0.299, memory: 8511, decode.loss_ce: 0.1075, decode.acc_seg: 94.4744, aux_0.loss_ce: 0.1131, aux_0.acc_seg: 94.2404, aux_1.loss_ce: 0.1306, aux_1.acc_seg: 93.5846, aux_2.loss_ce: 0.1306, aux_2.loss_dice: 0.2760, aux_2.acc_seg: 95.8639, aux_3.loss_ce: 0.3348, aux_3.acc_seg: 92.9384, loss: 1.0926
2023-03-28 21:04:42,332 - mmseg - INFO - Iter [1900/10000]	lr: 8.274e-03, eta: 2:45:10, time: 1.127, data_time: 0.233, memory: 8511, decode.loss_ce: 0.1072, decode.acc_seg: 94.5324, aux_0.loss_ce: 0.1138, aux_0.acc_seg: 94.2819, aux_1.loss_ce: 0.1283, aux_1.acc_seg: 93.7033, aux_2.loss_ce: 0.1315, aux_2.loss_dice: 0.2756, aux_2.acc_seg: 95.8117, aux_3.loss_ce: 0.3276, aux_3.acc_seg: 93.0819, loss: 1.0840
2023-03-28 21:05:39,145 - mmseg - INFO - Iter [1950/10000]	lr: 8.228e-03, eta: 2:43:50, time: 1.136, data_time: 0.236, memory: 8511, decode.loss_ce: 0.1060, decode.acc_seg: 94.5378, aux_0.loss_ce: 0.1128, aux_0.acc_seg: 94.2985, aux_1.loss_ce: 0.1270, aux_1.acc_seg: 93.6892, aux_2.loss_ce: 0.1316, aux_2.loss_dice: 0.2766, aux_2.acc_seg: 95.8370, aux_3.loss_ce: 0.3267, aux_3.acc_seg: 93.1029, loss: 1.0807
2023-03-28 21:06:43,853 - mmseg - INFO - Saving checkpoint at 2000 iterations
2023-03-28 21:06:44,254 - mmseg - INFO - Exp name: stdc1-entext_2x12_720x960_10k_camvid.py
2023-03-28 21:06:44,254 - mmseg - INFO - Iter [2000/10000]	lr: 8.182e-03, eta: 2:43:06, time: 1.303, data_time: 0.315, memory: 8511, decode.loss_ce: 0.1029, decode.acc_seg: 94.7337, aux_0.loss_ce: 0.1092, aux_0.acc_seg: 94.4883, aux_1.loss_ce: 0.1244, aux_1.acc_seg: 93.8639, aux_2.loss_ce: 0.1303, aux_2.loss_dice: 0.2744, aux_2.acc_seg: 95.8546, aux_3.loss_ce: 0.3166, aux_3.acc_seg: 93.2712, loss: 1.0578
2023-03-28 21:06:47,331 - mmseg - INFO - per class results:
2023-03-28 21:06:47,332 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 62.62 | 65.17 |
|   Building  | 92.63 | 95.06 |
|     Car     | 90.74 | 94.73 |
| Column_Pole | 12.33 | 14.93 |
|    Fence    | 79.51 | 92.91 |
|  Pedestrian | 33.65 | 77.05 |
|     Road    | 96.81 | 97.81 |
|   Sidewalk  | 89.57 | 97.47 |
|  SignSymbol |  0.0  |  0.0  |
|     Sky     | 93.68 | 96.11 |
|     Tree    | 92.47 | 97.85 |
+-------------+-------+-------+
2023-03-28 21:06:47,332 - mmseg - INFO - Summary:
2023-03-28 21:06:47,332 - mmseg - INFO - 
+------+-------+-------+
| aAcc |  mIoU |  mAcc |
+------+-------+-------+
| 95.2 | 67.64 | 75.37 |
+------+-------+-------+
2023-03-28 21:06:47,332 - mmseg - INFO - Exp name: stdc1-entext_2x12_720x960_10k_camvid.py
2023-03-28 21:06:47,333 - mmseg - INFO - Iter(val) [51]	aAcc: 0.9520, mIoU: 0.6764, mAcc: 0.7537, IoU.Bicyclist: 0.6262, IoU.Building: 0.9263, IoU.Car: 0.9074, IoU.Column_Pole: 0.1233, IoU.Fence: 0.7951, IoU.Pedestrian: 0.3365, IoU.Road: 0.9681, IoU.Sidewalk: 0.8957, IoU.SignSymbol: 0.0000, IoU.Sky: 0.9368, IoU.Tree: 0.9247, Acc.Bicyclist: 0.6517, Acc.Building: 0.9506, Acc.Car: 0.9473, Acc.Column_Pole: 0.1493, Acc.Fence: 0.9291, Acc.Pedestrian: 0.7705, Acc.Road: 0.9781, Acc.Sidewalk: 0.9747, Acc.SignSymbol: 0.0000, Acc.Sky: 0.9611, Acc.Tree: 0.9785
2023-03-28 21:07:46,850 - mmseg - INFO - Iter [2050/10000]	lr: 8.136e-03, eta: 2:42:10, time: 1.250, data_time: 0.303, memory: 8511, decode.loss_ce: 0.1062, decode.acc_seg: 94.6072, aux_0.loss_ce: 0.1128, aux_0.acc_seg: 94.3457, aux_1.loss_ce: 0.1285, aux_1.acc_seg: 93.7439, aux_2.loss_ce: 0.1318, aux_2.loss_dice: 0.2754, aux_2.acc_seg: 95.7815, aux_3.loss_ce: 0.3176, aux_3.acc_seg: 93.1347, loss: 1.0723
2023-03-28 21:08:42,391 - mmseg - INFO - Iter [2100/10000]	lr: 8.090e-03, eta: 2:40:47, time: 1.111, data_time: 0.238, memory: 8511, decode.loss_ce: 0.1016, decode.acc_seg: 94.7411, aux_0.loss_ce: 0.1082, aux_0.acc_seg: 94.4999, aux_1.loss_ce: 0.1220, aux_1.acc_seg: 93.9215, aux_2.loss_ce: 0.1304, aux_2.loss_dice: 0.2739, aux_2.acc_seg: 95.8691, aux_3.loss_ce: 0.3091, aux_3.acc_seg: 93.2518, loss: 1.0451
2023-03-28 21:09:43,920 - mmseg - INFO - Iter [2150/10000]	lr: 8.043e-03, eta: 2:39:48, time: 1.229, data_time: 0.314, memory: 8511, decode.loss_ce: 0.1028, decode.acc_seg: 94.7478, aux_0.loss_ce: 0.1094, aux_0.acc_seg: 94.4939, aux_1.loss_ce: 0.1250, aux_1.acc_seg: 93.8393, aux_2.loss_ce: 0.1312, aux_2.loss_dice: 0.2748, aux_2.acc_seg: 95.8197, aux_3.loss_ce: 0.3136, aux_3.acc_seg: 93.2397, loss: 1.0568
2023-03-28 21:10:48,132 - mmseg - INFO - Iter [2200/10000]	lr: 7.997e-03, eta: 2:38:58, time: 1.285, data_time: 0.271, memory: 8511, decode.loss_ce: 0.1011, decode.acc_seg: 94.8431, aux_0.loss_ce: 0.1074, aux_0.acc_seg: 94.6362, aux_1.loss_ce: 0.1214, aux_1.acc_seg: 94.0420, aux_2.loss_ce: 0.1304, aux_2.loss_dice: 0.2730, aux_2.acc_seg: 95.8354, aux_3.loss_ce: 0.3085, aux_3.acc_seg: 93.4492, loss: 1.0418
2023-03-28 21:11:44,926 - mmseg - INFO - Iter [2250/10000]	lr: 7.951e-03, eta: 2:37:42, time: 1.136, data_time: 0.244, memory: 8511, decode.loss_ce: 0.1033, decode.acc_seg: 94.7815, aux_0.loss_ce: 0.1090, aux_0.acc_seg: 94.5509, aux_1.loss_ce: 0.1236, aux_1.acc_seg: 93.9297, aux_2.loss_ce: 0.1312, aux_2.loss_dice: 0.2754, aux_2.acc_seg: 95.8461, aux_3.loss_ce: 0.3075, aux_3.acc_seg: 93.3046, loss: 1.0499
2023-03-28 21:12:44,588 - mmseg - INFO - Iter [2300/10000]	lr: 7.905e-03, eta: 2:36:36, time: 1.193, data_time: 0.312, memory: 8511, decode.loss_ce: 0.1014, decode.acc_seg: 94.7761, aux_0.loss_ce: 0.1068, aux_0.acc_seg: 94.5821, aux_1.loss_ce: 0.1223, aux_1.acc_seg: 93.9475, aux_2.loss_ce: 0.1310, aux_2.loss_dice: 0.2742, aux_2.acc_seg: 95.8338, aux_3.loss_ce: 0.2981, aux_3.acc_seg: 93.3829, loss: 1.0338
2023-03-28 21:13:46,825 - mmseg - INFO - Iter [2350/10000]	lr: 7.859e-03, eta: 2:35:39, time: 1.245, data_time: 0.287, memory: 8511, decode.loss_ce: 0.0992, decode.acc_seg: 94.7480, aux_0.loss_ce: 0.1057, aux_0.acc_seg: 94.5148, aux_1.loss_ce: 0.1186, aux_1.acc_seg: 93.8952, aux_2.loss_ce: 0.1308, aux_2.loss_dice: 0.2732, aux_2.acc_seg: 95.8131, aux_3.loss_ce: 0.2906, aux_3.acc_seg: 93.4036, loss: 1.0182
2023-03-28 21:14:48,207 - mmseg - INFO - Iter [2400/10000]	lr: 7.813e-03, eta: 2:34:39, time: 1.228, data_time: 0.249, memory: 8511, decode.loss_ce: 0.1036, decode.acc_seg: 94.7042, aux_0.loss_ce: 0.1091, aux_0.acc_seg: 94.5012, aux_1.loss_ce: 0.1239, aux_1.acc_seg: 93.8668, aux_2.loss_ce: 0.1316, aux_2.loss_dice: 0.2738, aux_2.acc_seg: 95.7813, aux_3.loss_ce: 0.2955, aux_3.acc_seg: 93.3150, loss: 1.0376
2023-03-28 21:15:46,923 - mmseg - INFO - Iter [2450/10000]	lr: 7.766e-03, eta: 2:33:31, time: 1.174, data_time: 0.303, memory: 8511, decode.loss_ce: 0.1003, decode.acc_seg: 94.7789, aux_0.loss_ce: 0.1064, aux_0.acc_seg: 94.5448, aux_1.loss_ce: 0.1209, aux_1.acc_seg: 93.9452, aux_2.loss_ce: 0.1312, aux_2.loss_dice: 0.2736, aux_2.acc_seg: 95.7928, aux_3.loss_ce: 0.2878, aux_3.acc_seg: 93.3994, loss: 1.0202
2023-03-28 21:16:43,351 - mmseg - INFO - Iter [2500/10000]	lr: 7.720e-03, eta: 2:32:16, time: 1.129, data_time: 0.262, memory: 8511, decode.loss_ce: 0.0982, decode.acc_seg: 94.9087, aux_0.loss_ce: 0.1036, aux_0.acc_seg: 94.6722, aux_1.loss_ce: 0.1189, aux_1.acc_seg: 94.0648, aux_2.loss_ce: 0.1304, aux_2.loss_dice: 0.2717, aux_2.acc_seg: 95.7927, aux_3.loss_ce: 0.2904, aux_3.acc_seg: 93.5305, loss: 1.0132
2023-03-28 21:17:39,630 - mmseg - INFO - Iter [2550/10000]	lr: 7.674e-03, eta: 2:31:02, time: 1.125, data_time: 0.238, memory: 8511, decode.loss_ce: 0.0942, decode.acc_seg: 95.0953, aux_0.loss_ce: 0.1001, aux_0.acc_seg: 94.8492, aux_1.loss_ce: 0.1135, aux_1.acc_seg: 94.2712, aux_2.loss_ce: 0.1300, aux_2.loss_dice: 0.2709, aux_2.acc_seg: 95.8161, aux_3.loss_ce: 0.2712, aux_3.acc_seg: 93.7648, loss: 0.9800
2023-03-28 21:18:38,911 - mmseg - INFO - Iter [2600/10000]	lr: 7.627e-03, eta: 2:29:56, time: 1.186, data_time: 0.312, memory: 8511, decode.loss_ce: 0.0960, decode.acc_seg: 94.9434, aux_0.loss_ce: 0.1013, aux_0.acc_seg: 94.7343, aux_1.loss_ce: 0.1149, aux_1.acc_seg: 94.1477, aux_2.loss_ce: 0.1289, aux_2.loss_dice: 0.2702, aux_2.acc_seg: 95.8764, aux_3.loss_ce: 0.2774, aux_3.acc_seg: 93.5960, loss: 0.9887
2023-03-28 21:19:42,119 - mmseg - INFO - Iter [2650/10000]	lr: 7.581e-03, eta: 2:29:02, time: 1.264, data_time: 0.289, memory: 8511, decode.loss_ce: 0.0936, decode.acc_seg: 95.0307, aux_0.loss_ce: 0.0995, aux_0.acc_seg: 94.8179, aux_1.loss_ce: 0.1116, aux_1.acc_seg: 94.2350, aux_2.loss_ce: 0.1289, aux_2.loss_dice: 0.2703, aux_2.acc_seg: 95.8589, aux_3.loss_ce: 0.2664, aux_3.acc_seg: 93.7053, loss: 0.9704
2023-03-28 21:20:40,841 - mmseg - INFO - Iter [2700/10000]	lr: 7.535e-03, eta: 2:27:56, time: 1.174, data_time: 0.240, memory: 8511, decode.loss_ce: 0.0913, decode.acc_seg: 95.1371, aux_0.loss_ce: 0.0971, aux_0.acc_seg: 94.9264, aux_1.loss_ce: 0.1101, aux_1.acc_seg: 94.3291, aux_2.loss_ce: 0.1290, aux_2.loss_dice: 0.2694, aux_2.acc_seg: 95.8225, aux_3.loss_ce: 0.2639, aux_3.acc_seg: 93.8846, loss: 0.9607
2023-03-28 21:21:40,797 - mmseg - INFO - Iter [2750/10000]	lr: 7.488e-03, eta: 2:26:53, time: 1.199, data_time: 0.325, memory: 8511, decode.loss_ce: 0.0971, decode.acc_seg: 94.8946, aux_0.loss_ce: 0.1035, aux_0.acc_seg: 94.6889, aux_1.loss_ce: 0.1153, aux_1.acc_seg: 94.1003, aux_2.loss_ce: 0.1294, aux_2.loss_dice: 0.2702, aux_2.acc_seg: 95.8322, aux_3.loss_ce: 0.2691, aux_3.acc_seg: 93.6243, loss: 0.9846
2023-03-28 21:22:40,851 - mmseg - INFO - Iter [2800/10000]	lr: 7.442e-03, eta: 2:25:50, time: 1.201, data_time: 0.282, memory: 8511, decode.loss_ce: 0.0942, decode.acc_seg: 94.9998, aux_0.loss_ce: 0.0988, aux_0.acc_seg: 94.7977, aux_1.loss_ce: 0.1125, aux_1.acc_seg: 94.2013, aux_2.loss_ce: 0.1285, aux_2.loss_dice: 0.2692, aux_2.acc_seg: 95.8559, aux_3.loss_ce: 0.2636, aux_3.acc_seg: 93.6600, loss: 0.9668
2023-03-28 21:23:47,254 - mmseg - INFO - Iter [2850/10000]	lr: 7.395e-03, eta: 2:25:03, time: 1.328, data_time: 0.286, memory: 8511, decode.loss_ce: 0.0906, decode.acc_seg: 95.1498, aux_0.loss_ce: 0.0965, aux_0.acc_seg: 94.9070, aux_1.loss_ce: 0.1095, aux_1.acc_seg: 94.2991, aux_2.loss_ce: 0.1289, aux_2.loss_dice: 0.2696, aux_2.acc_seg: 95.8400, aux_3.loss_ce: 0.2497, aux_3.acc_seg: 93.8498, loss: 0.9448
2023-03-28 21:24:47,227 - mmseg - INFO - Iter [2900/10000]	lr: 7.349e-03, eta: 2:24:00, time: 1.200, data_time: 0.298, memory: 8511, decode.loss_ce: 0.0911, decode.acc_seg: 95.1841, aux_0.loss_ce: 0.0968, aux_0.acc_seg: 94.9566, aux_1.loss_ce: 0.1089, aux_1.acc_seg: 94.3742, aux_2.loss_ce: 0.1290, aux_2.loss_dice: 0.2700, aux_2.acc_seg: 95.8502, aux_3.loss_ce: 0.2622, aux_3.acc_seg: 93.8440, loss: 0.9579
2023-03-28 21:25:44,452 - mmseg - INFO - Iter [2950/10000]	lr: 7.302e-03, eta: 2:22:51, time: 1.144, data_time: 0.272, memory: 8511, decode.loss_ce: 0.0905, decode.acc_seg: 95.2294, aux_0.loss_ce: 0.0956, aux_0.acc_seg: 95.0454, aux_1.loss_ce: 0.1094, aux_1.acc_seg: 94.4673, aux_2.loss_ce: 0.1290, aux_2.loss_dice: 0.2701, aux_2.acc_seg: 95.8418, aux_3.loss_ce: 0.2553, aux_3.acc_seg: 93.9702, loss: 0.9499
2023-03-28 21:26:44,741 - mmseg - INFO - Saving checkpoint at 3000 iterations
2023-03-28 21:26:45,203 - mmseg - INFO - Exp name: stdc1-entext_2x12_720x960_10k_camvid.py
2023-03-28 21:26:45,203 - mmseg - INFO - Iter [3000/10000]	lr: 7.255e-03, eta: 2:21:50, time: 1.217, data_time: 0.304, memory: 8511, decode.loss_ce: 0.0909, decode.acc_seg: 95.2050, aux_0.loss_ce: 0.0970, aux_0.acc_seg: 94.9950, aux_1.loss_ce: 0.1093, aux_1.acc_seg: 94.4159, aux_2.loss_ce: 0.1304, aux_2.loss_dice: 0.2699, aux_2.acc_seg: 95.7769, aux_3.loss_ce: 0.2542, aux_3.acc_seg: 93.9185, loss: 0.9517
2023-03-28 21:26:48,316 - mmseg - INFO - per class results:
2023-03-28 21:26:48,317 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 75.07 | 79.79 |
|   Building  | 92.74 | 94.82 |
|     Car     | 90.46 | 93.51 |
| Column_Pole |  9.21 |  9.78 |
|    Fence    | 78.57 | 98.04 |
|  Pedestrian | 46.48 | 75.07 |
|     Road    | 97.07 | 98.09 |
|   Sidewalk  |  90.3 |  97.1 |
|  SignSymbol |  0.0  |  0.0  |
|     Sky     | 93.76 | 97.18 |
|     Tree    | 91.73 | 96.96 |
+-------------+-------+-------+
2023-03-28 21:26:48,317 - mmseg - INFO - Summary:
2023-03-28 21:26:48,317 - mmseg - INFO - 
+-------+-------+------+
|  aAcc |  mIoU | mAcc |
+-------+-------+------+
| 95.59 | 69.58 | 76.4 |
+-------+-------+------+
2023-03-28 21:26:48,317 - mmseg - INFO - Exp name: stdc1-entext_2x12_720x960_10k_camvid.py
2023-03-28 21:26:48,317 - mmseg - INFO - Iter(val) [51]	aAcc: 0.9559, mIoU: 0.6958, mAcc: 0.7640, IoU.Bicyclist: 0.7507, IoU.Building: 0.9274, IoU.Car: 0.9046, IoU.Column_Pole: 0.0921, IoU.Fence: 0.7857, IoU.Pedestrian: 0.4648, IoU.Road: 0.9707, IoU.Sidewalk: 0.9030, IoU.SignSymbol: 0.0000, IoU.Sky: 0.9376, IoU.Tree: 0.9173, Acc.Bicyclist: 0.7979, Acc.Building: 0.9482, Acc.Car: 0.9351, Acc.Column_Pole: 0.0978, Acc.Fence: 0.9804, Acc.Pedestrian: 0.7507, Acc.Road: 0.9809, Acc.Sidewalk: 0.9710, Acc.SignSymbol: 0.0000, Acc.Sky: 0.9718, Acc.Tree: 0.9696
2023-03-28 21:27:51,162 - mmseg - INFO - Iter [3050/10000]	lr: 7.209e-03, eta: 2:21:01, time: 1.317, data_time: 0.404, memory: 8511, decode.loss_ce: 0.0917, decode.acc_seg: 95.1608, aux_0.loss_ce: 0.0971, aux_0.acc_seg: 94.9557, aux_1.loss_ce: 0.1095, aux_1.acc_seg: 94.3573, aux_2.loss_ce: 0.1288, aux_2.loss_dice: 0.2688, aux_2.acc_seg: 95.8580, aux_3.loss_ce: 0.2527, aux_3.acc_seg: 93.8443, loss: 0.9485
2023-03-28 21:28:54,267 - mmseg - INFO - Iter [3100/10000]	lr: 7.162e-03, eta: 2:20:05, time: 1.262, data_time: 0.266, memory: 8511, decode.loss_ce: 0.0916, decode.acc_seg: 95.1349, aux_0.loss_ce: 0.0976, aux_0.acc_seg: 94.9230, aux_1.loss_ce: 0.1116, aux_1.acc_seg: 94.3246, aux_2.loss_ce: 0.1292, aux_2.loss_dice: 0.2695, aux_2.acc_seg: 95.8344, aux_3.loss_ce: 0.2539, aux_3.acc_seg: 93.8175, loss: 0.9534
2023-03-28 21:29:50,258 - mmseg - INFO - Iter [3150/10000]	lr: 7.115e-03, eta: 2:18:54, time: 1.120, data_time: 0.245, memory: 8511, decode.loss_ce: 0.0895, decode.acc_seg: 95.2461, aux_0.loss_ce: 0.0950, aux_0.acc_seg: 95.0344, aux_1.loss_ce: 0.1071, aux_1.acc_seg: 94.4425, aux_2.loss_ce: 0.1280, aux_2.loss_dice: 0.2686, aux_2.acc_seg: 95.8826, aux_3.loss_ce: 0.2557, aux_3.acc_seg: 93.9500, loss: 0.9439
2023-03-28 21:30:50,359 - mmseg - INFO - Iter [3200/10000]	lr: 7.069e-03, eta: 2:17:51, time: 1.202, data_time: 0.318, memory: 8511, decode.loss_ce: 0.0906, decode.acc_seg: 95.2709, aux_0.loss_ce: 0.0953, aux_0.acc_seg: 95.0694, aux_1.loss_ce: 0.1080, aux_1.acc_seg: 94.4696, aux_2.loss_ce: 0.1281, aux_2.loss_dice: 0.2683, aux_2.acc_seg: 95.8597, aux_3.loss_ce: 0.2531, aux_3.acc_seg: 93.9744, loss: 0.9433
2023-03-28 21:31:54,492 - mmseg - INFO - Iter [3250/10000]	lr: 7.022e-03, eta: 2:16:57, time: 1.283, data_time: 0.275, memory: 8511, decode.loss_ce: 0.0898, decode.acc_seg: 95.1628, aux_0.loss_ce: 0.0955, aux_0.acc_seg: 94.9599, aux_1.loss_ce: 0.1085, aux_1.acc_seg: 94.3490, aux_2.loss_ce: 0.1291, aux_2.loss_dice: 0.2677, aux_2.acc_seg: 95.8066, aux_3.loss_ce: 0.2461, aux_3.acc_seg: 93.9145, loss: 0.9367
2023-03-28 21:32:51,738 - mmseg - INFO - Iter [3300/10000]	lr: 6.975e-03, eta: 2:15:49, time: 1.146, data_time: 0.243, memory: 8511, decode.loss_ce: 0.0920, decode.acc_seg: 95.0878, aux_0.loss_ce: 0.0963, aux_0.acc_seg: 94.9004, aux_1.loss_ce: 0.1104, aux_1.acc_seg: 94.2870, aux_2.loss_ce: 0.1281, aux_2.loss_dice: 0.2691, aux_2.acc_seg: 95.8706, aux_3.loss_ce: 0.2537, aux_3.acc_seg: 93.8150, loss: 0.9495
2023-03-28 21:33:51,240 - mmseg - INFO - Iter [3350/10000]	lr: 6.928e-03, eta: 2:14:46, time: 1.190, data_time: 0.310, memory: 8511, decode.loss_ce: 0.0915, decode.acc_seg: 95.1980, aux_0.loss_ce: 0.0955, aux_0.acc_seg: 95.0359, aux_1.loss_ce: 0.1090, aux_1.acc_seg: 94.4256, aux_2.loss_ce: 0.1284, aux_2.loss_dice: 0.2690, aux_2.acc_seg: 95.8706, aux_3.loss_ce: 0.2511, aux_3.acc_seg: 93.9486, loss: 0.9445
2023-03-28 21:34:50,607 - mmseg - INFO - Iter [3400/10000]	lr: 6.881e-03, eta: 2:13:42, time: 1.187, data_time: 0.268, memory: 8511, decode.loss_ce: 0.0849, decode.acc_seg: 95.4358, aux_0.loss_ce: 0.0900, aux_0.acc_seg: 95.2227, aux_1.loss_ce: 0.1028, aux_1.acc_seg: 94.6080, aux_2.loss_ce: 0.1275, aux_2.loss_dice: 0.2676, aux_2.acc_seg: 95.9025, aux_3.loss_ce: 0.2453, aux_3.acc_seg: 94.1274, loss: 0.9181
2023-03-28 21:35:54,142 - mmseg - INFO - Iter [3450/10000]	lr: 6.834e-03, eta: 2:12:46, time: 1.271, data_time: 0.278, memory: 8511, decode.loss_ce: 0.0905, decode.acc_seg: 95.2339, aux_0.loss_ce: 0.0956, aux_0.acc_seg: 95.0189, aux_1.loss_ce: 0.1089, aux_1.acc_seg: 94.4242, aux_2.loss_ce: 0.1288, aux_2.loss_dice: 0.2688, aux_2.acc_seg: 95.8333, aux_3.loss_ce: 0.2479, aux_3.acc_seg: 93.9875, loss: 0.9405
2023-03-28 21:36:53,853 - mmseg - INFO - Iter [3500/10000]	lr: 6.787e-03, eta: 2:11:44, time: 1.194, data_time: 0.327, memory: 8511, decode.loss_ce: 0.0858, decode.acc_seg: 95.3630, aux_0.loss_ce: 0.0915, aux_0.acc_seg: 95.1472, aux_1.loss_ce: 0.1033, aux_1.acc_seg: 94.5758, aux_2.loss_ce: 0.1281, aux_2.loss_dice: 0.2667, aux_2.acc_seg: 95.8489, aux_3.loss_ce: 0.2289, aux_3.acc_seg: 94.1349, loss: 0.9042
2023-03-28 21:37:52,763 - mmseg - INFO - Iter [3550/10000]	lr: 6.740e-03, eta: 2:10:39, time: 1.178, data_time: 0.288, memory: 8511, decode.loss_ce: 0.0863, decode.acc_seg: 95.3454, aux_0.loss_ce: 0.0916, aux_0.acc_seg: 95.1402, aux_1.loss_ce: 0.1048, aux_1.acc_seg: 94.5194, aux_2.loss_ce: 0.1280, aux_2.loss_dice: 0.2666, aux_2.acc_seg: 95.8427, aux_3.loss_ce: 0.2407, aux_3.acc_seg: 94.0290, loss: 0.9180
2023-03-28 21:38:53,779 - mmseg - INFO - Iter [3600/10000]	lr: 6.693e-03, eta: 2:09:39, time: 1.221, data_time: 0.293, memory: 8511, decode.loss_ce: 0.0865, decode.acc_seg: 95.3516, aux_0.loss_ce: 0.0916, aux_0.acc_seg: 95.1543, aux_1.loss_ce: 0.1044, aux_1.acc_seg: 94.5572, aux_2.loss_ce: 0.1270, aux_2.loss_dice: 0.2673, aux_2.acc_seg: 95.9078, aux_3.loss_ce: 0.2335, aux_3.acc_seg: 94.0796, loss: 0.9103
2023-03-28 21:39:56,551 - mmseg - INFO - Iter [3650/10000]	lr: 6.646e-03, eta: 2:08:42, time: 1.255, data_time: 0.386, memory: 8511, decode.loss_ce: 0.0848, decode.acc_seg: 95.4251, aux_0.loss_ce: 0.0908, aux_0.acc_seg: 95.2187, aux_1.loss_ce: 0.1030, aux_1.acc_seg: 94.6242, aux_2.loss_ce: 0.1275, aux_2.loss_dice: 0.2670, aux_2.acc_seg: 95.8898, aux_3.loss_ce: 0.2306, aux_3.acc_seg: 94.1960, loss: 0.9038
2023-03-28 21:40:58,830 - mmseg - INFO - Iter [3700/10000]	lr: 6.599e-03, eta: 2:07:43, time: 1.245, data_time: 0.304, memory: 8511, decode.loss_ce: 0.0851, decode.acc_seg: 95.4117, aux_0.loss_ce: 0.0908, aux_0.acc_seg: 95.1985, aux_1.loss_ce: 0.1035, aux_1.acc_seg: 94.5862, aux_2.loss_ce: 0.1281, aux_2.loss_dice: 0.2663, aux_2.acc_seg: 95.8272, aux_3.loss_ce: 0.2368, aux_3.acc_seg: 94.1087, loss: 0.9106
2023-03-28 21:42:01,487 - mmseg - INFO - Iter [3750/10000]	lr: 6.552e-03, eta: 2:06:46, time: 1.254, data_time: 0.275, memory: 8511, decode.loss_ce: 0.0865, decode.acc_seg: 95.3581, aux_0.loss_ce: 0.0907, aux_0.acc_seg: 95.1877, aux_1.loss_ce: 0.1041, aux_1.acc_seg: 94.5922, aux_2.loss_ce: 0.1275, aux_2.loss_dice: 0.2673, aux_2.acc_seg: 95.8938, aux_3.loss_ce: 0.2376, aux_3.acc_seg: 94.1086, loss: 0.9139
2023-03-28 21:43:01,882 - mmseg - INFO - Iter [3800/10000]	lr: 6.505e-03, eta: 2:05:44, time: 1.208, data_time: 0.334, memory: 8511, decode.loss_ce: 0.0861, decode.acc_seg: 95.4022, aux_0.loss_ce: 0.0914, aux_0.acc_seg: 95.2008, aux_1.loss_ce: 0.1041, aux_1.acc_seg: 94.5812, aux_2.loss_ce: 0.1287, aux_2.loss_dice: 0.2680, aux_2.acc_seg: 95.8345, aux_3.loss_ce: 0.2381, aux_3.acc_seg: 94.1555, loss: 0.9163
2023-03-28 21:44:01,202 - mmseg - INFO - Iter [3850/10000]	lr: 6.458e-03, eta: 2:04:41, time: 1.186, data_time: 0.302, memory: 8511, decode.loss_ce: 0.0853, decode.acc_seg: 95.3966, aux_0.loss_ce: 0.0898, aux_0.acc_seg: 95.1921, aux_1.loss_ce: 0.1023, aux_1.acc_seg: 94.6170, aux_2.loss_ce: 0.1267, aux_2.loss_dice: 0.2657, aux_2.acc_seg: 95.9042, aux_3.loss_ce: 0.2352, aux_3.acc_seg: 94.1479, loss: 0.9049
2023-03-28 21:45:05,859 - mmseg - INFO - Iter [3900/10000]	lr: 6.410e-03, eta: 2:03:46, time: 1.293, data_time: 0.311, memory: 8511, decode.loss_ce: 0.0869, decode.acc_seg: 95.4126, aux_0.loss_ce: 0.0925, aux_0.acc_seg: 95.1910, aux_1.loss_ce: 0.1044, aux_1.acc_seg: 94.5962, aux_2.loss_ce: 0.1294, aux_2.loss_dice: 0.2690, aux_2.acc_seg: 95.8297, aux_3.loss_ce: 0.2398, aux_3.acc_seg: 94.1291, loss: 0.9220
2023-03-28 21:46:09,232 - mmseg - INFO - Iter [3950/10000]	lr: 6.363e-03, eta: 2:02:49, time: 1.269, data_time: 0.335, memory: 8511, decode.loss_ce: 0.0825, decode.acc_seg: 95.5142, aux_0.loss_ce: 0.0877, aux_0.acc_seg: 95.3139, aux_1.loss_ce: 0.0993, aux_1.acc_seg: 94.7537, aux_2.loss_ce: 0.1267, aux_2.loss_dice: 0.2659, aux_2.acc_seg: 95.8936, aux_3.loss_ce: 0.2214, aux_3.acc_seg: 94.2755, loss: 0.8835
2023-03-28 21:47:06,037 - mmseg - INFO - Saving checkpoint at 4000 iterations
2023-03-28 21:47:06,548 - mmseg - INFO - Exp name: stdc1-entext_2x12_720x960_10k_camvid.py
2023-03-28 21:47:06,548 - mmseg - INFO - Iter [4000/10000]	lr: 6.316e-03, eta: 2:01:43, time: 1.147, data_time: 0.255, memory: 8511, decode.loss_ce: 0.0851, decode.acc_seg: 95.4783, aux_0.loss_ce: 0.0901, aux_0.acc_seg: 95.2613, aux_1.loss_ce: 0.1028, aux_1.acc_seg: 94.6479, aux_2.loss_ce: 0.1280, aux_2.loss_dice: 0.2674, aux_2.acc_seg: 95.8519, aux_3.loss_ce: 0.2321, aux_3.acc_seg: 94.1765, loss: 0.9054
2023-03-28 21:47:09,902 - mmseg - INFO - per class results:
2023-03-28 21:47:09,903 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 80.87 | 88.84 |
|   Building  | 91.33 |  93.1 |
|     Car     | 90.68 | 94.55 |
| Column_Pole | 10.96 | 12.34 |
|    Fence    | 79.39 | 94.23 |
|  Pedestrian |  53.2 | 75.97 |
|     Road    | 97.26 | 98.28 |
|   Sidewalk  | 90.38 | 97.33 |
|  SignSymbol |  0.0  |  0.0  |
|     Sky     | 93.75 | 96.53 |
|     Tree    | 90.71 | 98.13 |
+-------------+-------+-------+
2023-03-28 21:47:09,903 - mmseg - INFO - Summary:
2023-03-28 21:47:09,903 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 95.48 | 70.78 | 77.21 |
+-------+-------+-------+
2023-03-28 21:47:09,903 - mmseg - INFO - Exp name: stdc1-entext_2x12_720x960_10k_camvid.py
2023-03-28 21:47:09,904 - mmseg - INFO - Iter(val) [51]	aAcc: 0.9548, mIoU: 0.7078, mAcc: 0.7721, IoU.Bicyclist: 0.8087, IoU.Building: 0.9133, IoU.Car: 0.9068, IoU.Column_Pole: 0.1096, IoU.Fence: 0.7939, IoU.Pedestrian: 0.5320, IoU.Road: 0.9726, IoU.Sidewalk: 0.9038, IoU.SignSymbol: 0.0000, IoU.Sky: 0.9375, IoU.Tree: 0.9071, Acc.Bicyclist: 0.8884, Acc.Building: 0.9310, Acc.Car: 0.9455, Acc.Column_Pole: 0.1234, Acc.Fence: 0.9423, Acc.Pedestrian: 0.7597, Acc.Road: 0.9828, Acc.Sidewalk: 0.9733, Acc.SignSymbol: 0.0000, Acc.Sky: 0.9653, Acc.Tree: 0.9813
2023-03-28 21:48:05,916 - mmseg - INFO - Iter [4050/10000]	lr: 6.268e-03, eta: 2:00:40, time: 1.186, data_time: 0.315, memory: 8511, decode.loss_ce: 0.0858, decode.acc_seg: 95.4320, aux_0.loss_ce: 0.0901, aux_0.acc_seg: 95.2634, aux_1.loss_ce: 0.1033, aux_1.acc_seg: 94.6605, aux_2.loss_ce: 0.1278, aux_2.loss_dice: 0.2666, aux_2.acc_seg: 95.8628, aux_3.loss_ce: 0.2353, aux_3.acc_seg: 94.2041, loss: 0.9089
2023-03-28 21:49:12,883 - mmseg - INFO - Iter [4100/10000]	lr: 6.221e-03, eta: 1:59:47, time: 1.339, data_time: 0.370, memory: 8511, decode.loss_ce: 0.0821, decode.acc_seg: 95.5831, aux_0.loss_ce: 0.0864, aux_0.acc_seg: 95.3988, aux_1.loss_ce: 0.0992, aux_1.acc_seg: 94.7958, aux_2.loss_ce: 0.1270, aux_2.loss_dice: 0.2658, aux_2.acc_seg: 95.8945, aux_3.loss_ce: 0.2176, aux_3.acc_seg: 94.3561, loss: 0.8782
2023-03-28 21:50:14,054 - mmseg - INFO - Iter [4150/10000]	lr: 6.174e-03, eta: 1:58:47, time: 1.223, data_time: 0.264, memory: 8511, decode.loss_ce: 0.0830, decode.acc_seg: 95.5933, aux_0.loss_ce: 0.0871, aux_0.acc_seg: 95.4083, aux_1.loss_ce: 0.1005, aux_1.acc_seg: 94.8216, aux_2.loss_ce: 0.1264, aux_2.loss_dice: 0.2660, aux_2.acc_seg: 95.9074, aux_3.loss_ce: 0.2316, aux_3.acc_seg: 94.3604, loss: 0.8948
2023-03-28 21:51:10,446 - mmseg - INFO - Iter [4200/10000]	lr: 6.126e-03, eta: 1:57:40, time: 1.128, data_time: 0.257, memory: 8511, decode.loss_ce: 0.0827, decode.acc_seg: 95.5301, aux_0.loss_ce: 0.0877, aux_0.acc_seg: 95.3380, aux_1.loss_ce: 0.1003, aux_1.acc_seg: 94.7457, aux_2.loss_ce: 0.1261, aux_2.loss_dice: 0.2649, aux_2.acc_seg: 95.8959, aux_3.loss_ce: 0.2278, aux_3.acc_seg: 94.2815, loss: 0.8896
2023-03-28 21:52:13,425 - mmseg - INFO - Iter [4250/10000]	lr: 6.079e-03, eta: 1:56:42, time: 1.260, data_time: 0.366, memory: 8511, decode.loss_ce: 0.0821, decode.acc_seg: 95.5429, aux_0.loss_ce: 0.0871, aux_0.acc_seg: 95.3474, aux_1.loss_ce: 0.0997, aux_1.acc_seg: 94.7303, aux_2.loss_ce: 0.1254, aux_2.loss_dice: 0.2649, aux_2.acc_seg: 95.9286, aux_3.loss_ce: 0.2265, aux_3.acc_seg: 94.2622, loss: 0.8856
2023-03-28 21:53:19,010 - mmseg - INFO - Iter [4300/10000]	lr: 6.031e-03, eta: 1:55:47, time: 1.311, data_time: 0.307, memory: 8511, decode.loss_ce: 0.0819, decode.acc_seg: 95.5341, aux_0.loss_ce: 0.0871, aux_0.acc_seg: 95.3436, aux_1.loss_ce: 0.0995, aux_1.acc_seg: 94.7332, aux_2.loss_ce: 0.1275, aux_2.loss_dice: 0.2656, aux_2.acc_seg: 95.8257, aux_3.loss_ce: 0.2163, aux_3.acc_seg: 94.3005, loss: 0.8779
2023-03-28 21:54:18,619 - mmseg - INFO - Iter [4350/10000]	lr: 5.983e-03, eta: 1:54:44, time: 1.192, data_time: 0.258, memory: 8511, decode.loss_ce: 0.0820, decode.acc_seg: 95.5835, aux_0.loss_ce: 0.0864, aux_0.acc_seg: 95.4052, aux_1.loss_ce: 0.0985, aux_1.acc_seg: 94.7934, aux_2.loss_ce: 0.1272, aux_2.loss_dice: 0.2657, aux_2.acc_seg: 95.8424, aux_3.loss_ce: 0.2173, aux_3.acc_seg: 94.3241, loss: 0.8771
2023-03-28 21:55:18,145 - mmseg - INFO - Iter [4400/10000]	lr: 5.936e-03, eta: 1:53:42, time: 1.191, data_time: 0.334, memory: 8511, decode.loss_ce: 0.0824, decode.acc_seg: 95.5357, aux_0.loss_ce: 0.0875, aux_0.acc_seg: 95.3463, aux_1.loss_ce: 0.1008, aux_1.acc_seg: 94.7240, aux_2.loss_ce: 0.1281, aux_2.loss_dice: 0.2668, aux_2.acc_seg: 95.8205, aux_3.loss_ce: 0.2211, aux_3.acc_seg: 94.2880, loss: 0.8866
2023-03-28 21:56:20,222 - mmseg - INFO - Iter [4450/10000]	lr: 5.888e-03, eta: 1:52:42, time: 1.241, data_time: 0.300, memory: 8511, decode.loss_ce: 0.0820, decode.acc_seg: 95.5916, aux_0.loss_ce: 0.0876, aux_0.acc_seg: 95.3964, aux_1.loss_ce: 0.0988, aux_1.acc_seg: 94.8305, aux_2.loss_ce: 0.1273, aux_2.loss_dice: 0.2650, aux_2.acc_seg: 95.8455, aux_3.loss_ce: 0.2154, aux_3.acc_seg: 94.3333, loss: 0.8761
2023-03-28 21:57:21,805 - mmseg - INFO - Iter [4500/10000]	lr: 5.840e-03, eta: 1:51:42, time: 1.232, data_time: 0.260, memory: 8511, decode.loss_ce: 0.0794, decode.acc_seg: 95.6026, aux_0.loss_ce: 0.0839, aux_0.acc_seg: 95.4136, aux_1.loss_ce: 0.0958, aux_1.acc_seg: 94.8144, aux_2.loss_ce: 0.1255, aux_2.loss_dice: 0.2637, aux_2.acc_seg: 95.9342, aux_3.loss_ce: 0.2073, aux_3.acc_seg: 94.3693, loss: 0.8556
2023-03-28 21:58:21,599 - mmseg - INFO - Iter [4550/10000]	lr: 5.792e-03, eta: 1:50:40, time: 1.195, data_time: 0.332, memory: 8511, decode.loss_ce: 0.0825, decode.acc_seg: 95.4766, aux_0.loss_ce: 0.0873, aux_0.acc_seg: 95.2895, aux_1.loss_ce: 0.1001, aux_1.acc_seg: 94.6871, aux_2.loss_ce: 0.1266, aux_2.loss_dice: 0.2648, aux_2.acc_seg: 95.9136, aux_3.loss_ce: 0.2193, aux_3.acc_seg: 94.2483, loss: 0.8807
2023-03-28 21:59:21,144 - mmseg - INFO - Iter [4600/10000]	lr: 5.745e-03, eta: 1:49:37, time: 1.191, data_time: 0.291, memory: 8511, decode.loss_ce: 0.0831, decode.acc_seg: 95.4881, aux_0.loss_ce: 0.0872, aux_0.acc_seg: 95.3114, aux_1.loss_ce: 0.0994, aux_1.acc_seg: 94.7086, aux_2.loss_ce: 0.1264, aux_2.loss_dice: 0.2656, aux_2.acc_seg: 95.9104, aux_3.loss_ce: 0.2168, aux_3.acc_seg: 94.2602, loss: 0.8786
2023-03-28 22:00:25,127 - mmseg - INFO - Iter [4650/10000]	lr: 5.697e-03, eta: 1:48:40, time: 1.280, data_time: 0.280, memory: 8511, decode.loss_ce: 0.0828, decode.acc_seg: 95.5458, aux_0.loss_ce: 0.0880, aux_0.acc_seg: 95.3675, aux_1.loss_ce: 0.0999, aux_1.acc_seg: 94.7679, aux_2.loss_ce: 0.1278, aux_2.loss_dice: 0.2661, aux_2.acc_seg: 95.8420, aux_3.loss_ce: 0.2228, aux_3.acc_seg: 94.2907, loss: 0.8874
2023-03-28 22:01:25,150 - mmseg - INFO - Iter [4700/10000]	lr: 5.649e-03, eta: 1:47:38, time: 1.201, data_time: 0.331, memory: 8511, decode.loss_ce: 0.0823, decode.acc_seg: 95.4799, aux_0.loss_ce: 0.0877, aux_0.acc_seg: 95.2953, aux_1.loss_ce: 0.0988, aux_1.acc_seg: 94.6972, aux_2.loss_ce: 0.1280, aux_2.loss_dice: 0.2651, aux_2.acc_seg: 95.7947, aux_3.loss_ce: 0.2130, aux_3.acc_seg: 94.2411, loss: 0.8748
2023-03-28 22:02:27,110 - mmseg - INFO - Iter [4750/10000]	lr: 5.601e-03, eta: 1:46:38, time: 1.239, data_time: 0.274, memory: 8511, decode.loss_ce: 0.0799, decode.acc_seg: 95.5734, aux_0.loss_ce: 0.0838, aux_0.acc_seg: 95.4144, aux_1.loss_ce: 0.0961, aux_1.acc_seg: 94.8027, aux_2.loss_ce: 0.1262, aux_2.loss_dice: 0.2637, aux_2.acc_seg: 95.8851, aux_3.loss_ce: 0.2055, aux_3.acc_seg: 94.3477, loss: 0.8552
2023-03-28 22:03:23,563 - mmseg - INFO - Iter [4800/10000]	lr: 5.553e-03, eta: 1:45:32, time: 1.129, data_time: 0.256, memory: 8511, decode.loss_ce: 0.0812, decode.acc_seg: 95.6221, aux_0.loss_ce: 0.0859, aux_0.acc_seg: 95.4351, aux_1.loss_ce: 0.0982, aux_1.acc_seg: 94.8344, aux_2.loss_ce: 0.1266, aux_2.loss_dice: 0.2648, aux_2.acc_seg: 95.8610, aux_3.loss_ce: 0.2175, aux_3.acc_seg: 94.3863, loss: 0.8742
2023-03-28 22:04:25,319 - mmseg - INFO - Iter [4850/10000]	lr: 5.505e-03, eta: 1:44:32, time: 1.234, data_time: 0.365, memory: 8511, decode.loss_ce: 0.0814, decode.acc_seg: 95.5375, aux_0.loss_ce: 0.0869, aux_0.acc_seg: 95.3394, aux_1.loss_ce: 0.0986, aux_1.acc_seg: 94.7472, aux_2.loss_ce: 0.1270, aux_2.loss_dice: 0.2657, aux_2.acc_seg: 95.8826, aux_3.loss_ce: 0.2128, aux_3.acc_seg: 94.2933, loss: 0.8723
2023-03-28 22:05:28,948 - mmseg - INFO - Iter [4900/10000]	lr: 5.457e-03, eta: 1:43:34, time: 1.272, data_time: 0.291, memory: 8511, decode.loss_ce: 0.0818, decode.acc_seg: 95.5420, aux_0.loss_ce: 0.0866, aux_0.acc_seg: 95.3547, aux_1.loss_ce: 0.0993, aux_1.acc_seg: 94.7492, aux_2.loss_ce: 0.1281, aux_2.loss_dice: 0.2656, aux_2.acc_seg: 95.7875, aux_3.loss_ce: 0.2122, aux_3.acc_seg: 94.3190, loss: 0.8736
2023-03-28 22:06:28,925 - mmseg - INFO - Iter [4950/10000]	lr: 5.408e-03, eta: 1:42:32, time: 1.200, data_time: 0.262, memory: 8511, decode.loss_ce: 0.0815, decode.acc_seg: 95.5601, aux_0.loss_ce: 0.0863, aux_0.acc_seg: 95.3738, aux_1.loss_ce: 0.0998, aux_1.acc_seg: 94.7581, aux_2.loss_ce: 0.1283, aux_2.loss_dice: 0.2654, aux_2.acc_seg: 95.7916, aux_3.loss_ce: 0.2126, aux_3.acc_seg: 94.3201, loss: 0.8741
2023-03-28 22:07:30,066 - mmseg - INFO - Saving checkpoint at 5000 iterations
2023-03-28 22:07:30,608 - mmseg - INFO - Exp name: stdc1-entext_2x12_720x960_10k_camvid.py
2023-03-28 22:07:30,608 - mmseg - INFO - Iter [5000/10000]	lr: 5.360e-03, eta: 1:41:32, time: 1.236, data_time: 0.362, memory: 8511, decode.loss_ce: 0.0791, decode.acc_seg: 95.6600, aux_0.loss_ce: 0.0835, aux_0.acc_seg: 95.5035, aux_1.loss_ce: 0.0949, aux_1.acc_seg: 94.9058, aux_2.loss_ce: 0.1251, aux_2.loss_dice: 0.2630, aux_2.acc_seg: 95.9255, aux_3.loss_ce: 0.2148, aux_3.acc_seg: 94.4155, loss: 0.8603
2023-03-28 22:07:33,518 - mmseg - INFO - per class results:
2023-03-28 22:07:33,519 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 81.13 | 88.47 |
|   Building  | 91.62 | 93.57 |
|     Car     | 91.53 | 94.44 |
| Column_Pole | 12.44 | 13.72 |
|    Fence    | 80.78 | 91.94 |
|  Pedestrian | 53.86 | 78.93 |
|     Road    | 97.17 | 98.07 |
|   Sidewalk  | 90.59 |  97.2 |
|  SignSymbol |  0.0  |  0.0  |
|     Sky     |  93.7 | 96.51 |
|     Tree    | 90.16 | 98.41 |
+-------------+-------+-------+
2023-03-28 22:07:33,520 - mmseg - INFO - Summary:
2023-03-28 22:07:33,520 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 95.52 | 71.18 | 77.39 |
+-------+-------+-------+
2023-03-28 22:07:33,520 - mmseg - INFO - Exp name: stdc1-entext_2x12_720x960_10k_camvid.py
2023-03-28 22:07:33,520 - mmseg - INFO - Iter(val) [51]	aAcc: 0.9552, mIoU: 0.7118, mAcc: 0.7739, IoU.Bicyclist: 0.8113, IoU.Building: 0.9162, IoU.Car: 0.9153, IoU.Column_Pole: 0.1244, IoU.Fence: 0.8078, IoU.Pedestrian: 0.5386, IoU.Road: 0.9717, IoU.Sidewalk: 0.9059, IoU.SignSymbol: 0.0000, IoU.Sky: 0.9370, IoU.Tree: 0.9016, Acc.Bicyclist: 0.8847, Acc.Building: 0.9357, Acc.Car: 0.9444, Acc.Column_Pole: 0.1372, Acc.Fence: 0.9194, Acc.Pedestrian: 0.7893, Acc.Road: 0.9807, Acc.Sidewalk: 0.9720, Acc.SignSymbol: 0.0000, Acc.Sky: 0.9651, Acc.Tree: 0.9841
2023-03-28 22:08:30,626 - mmseg - INFO - Iter [5050/10000]	lr: 5.312e-03, eta: 1:40:30, time: 1.200, data_time: 0.322, memory: 8511, decode.loss_ce: 0.0814, decode.acc_seg: 95.6070, aux_0.loss_ce: 0.0854, aux_0.acc_seg: 95.4386, aux_1.loss_ce: 0.0981, aux_1.acc_seg: 94.8263, aux_2.loss_ce: 0.1274, aux_2.loss_dice: 0.2666, aux_2.acc_seg: 95.8436, aux_3.loss_ce: 0.2178, aux_3.acc_seg: 94.3398, loss: 0.8767
2023-03-28 22:09:31,215 - mmseg - INFO - Iter [5100/10000]	lr: 5.264e-03, eta: 1:39:29, time: 1.212, data_time: 0.290, memory: 8511, decode.loss_ce: 0.0795, decode.acc_seg: 95.6357, aux_0.loss_ce: 0.0842, aux_0.acc_seg: 95.4578, aux_1.loss_ce: 0.0961, aux_1.acc_seg: 94.8516, aux_2.loss_ce: 0.1267, aux_2.loss_dice: 0.2637, aux_2.acc_seg: 95.8415, aux_3.loss_ce: 0.2068, aux_3.acc_seg: 94.3887, loss: 0.8572
2023-03-28 22:10:36,415 - mmseg - INFO - Iter [5150/10000]	lr: 5.215e-03, eta: 1:38:32, time: 1.304, data_time: 0.354, memory: 8511, decode.loss_ce: 0.0794, decode.acc_seg: 95.6313, aux_0.loss_ce: 0.0842, aux_0.acc_seg: 95.4665, aux_1.loss_ce: 0.0973, aux_1.acc_seg: 94.8284, aux_2.loss_ce: 0.1257, aux_2.loss_dice: 0.2637, aux_2.acc_seg: 95.8928, aux_3.loss_ce: 0.2122, aux_3.acc_seg: 94.3946, loss: 0.8624
2023-03-28 22:11:33,097 - mmseg - INFO - Iter [5200/10000]	lr: 5.167e-03, eta: 1:37:27, time: 1.134, data_time: 0.258, memory: 8511, decode.loss_ce: 0.0820, decode.acc_seg: 95.5748, aux_0.loss_ce: 0.0860, aux_0.acc_seg: 95.4093, aux_1.loss_ce: 0.0984, aux_1.acc_seg: 94.8176, aux_2.loss_ce: 0.1274, aux_2.loss_dice: 0.2657, aux_2.acc_seg: 95.8571, aux_3.loss_ce: 0.2135, aux_3.acc_seg: 94.3428, loss: 0.8730
2023-03-28 22:12:31,247 - mmseg - INFO - Iter [5250/10000]	lr: 5.119e-03, eta: 1:36:24, time: 1.163, data_time: 0.271, memory: 8511, decode.loss_ce: 0.0798, decode.acc_seg: 95.7351, aux_0.loss_ce: 0.0848, aux_0.acc_seg: 95.5432, aux_1.loss_ce: 0.0968, aux_1.acc_seg: 94.9503, aux_2.loss_ce: 0.1271, aux_2.loss_dice: 0.2650, aux_2.acc_seg: 95.8503, aux_3.loss_ce: 0.2138, aux_3.acc_seg: 94.5289, loss: 0.8674
2023-03-28 22:13:39,702 - mmseg - INFO - Iter [5300/10000]	lr: 5.070e-03, eta: 1:35:30, time: 1.368, data_time: 0.361, memory: 8511, decode.loss_ce: 0.0789, decode.acc_seg: 95.6865, aux_0.loss_ce: 0.0831, aux_0.acc_seg: 95.5302, aux_1.loss_ce: 0.0953, aux_1.acc_seg: 94.9170, aux_2.loss_ce: 0.1264, aux_2.loss_dice: 0.2642, aux_2.acc_seg: 95.8871, aux_3.loss_ce: 0.2077, aux_3.acc_seg: 94.4523, loss: 0.8556
2023-03-28 22:14:36,067 - mmseg - INFO - Iter [5350/10000]	lr: 5.022e-03, eta: 1:34:25, time: 1.129, data_time: 0.260, memory: 8511, decode.loss_ce: 0.0791, decode.acc_seg: 95.5784, aux_0.loss_ce: 0.0836, aux_0.acc_seg: 95.4040, aux_1.loss_ce: 0.0959, aux_1.acc_seg: 94.7895, aux_2.loss_ce: 0.1268, aux_2.loss_dice: 0.2639, aux_2.acc_seg: 95.8351, aux_3.loss_ce: 0.1989, aux_3.acc_seg: 94.3644, loss: 0.8483
2023-03-28 22:15:32,910 - mmseg - INFO - Iter [5400/10000]	lr: 4.973e-03, eta: 1:33:21, time: 1.137, data_time: 0.264, memory: 8511, decode.loss_ce: 0.0804, decode.acc_seg: 95.6388, aux_0.loss_ce: 0.0844, aux_0.acc_seg: 95.4772, aux_1.loss_ce: 0.0986, aux_1.acc_seg: 94.8482, aux_2.loss_ce: 0.1283, aux_2.loss_dice: 0.2658, aux_2.acc_seg: 95.8166, aux_3.loss_ce: 0.2117, aux_3.acc_seg: 94.4175, loss: 0.8692
2023-03-28 22:16:41,945 - mmseg - INFO - Iter [5450/10000]	lr: 4.924e-03, eta: 1:32:26, time: 1.379, data_time: 0.387, memory: 8511, decode.loss_ce: 0.0795, decode.acc_seg: 95.6697, aux_0.loss_ce: 0.0833, aux_0.acc_seg: 95.5111, aux_1.loss_ce: 0.0963, aux_1.acc_seg: 94.8565, aux_2.loss_ce: 0.1269, aux_2.loss_dice: 0.2642, aux_2.acc_seg: 95.8441, aux_3.loss_ce: 0.2100, aux_3.acc_seg: 94.4205, loss: 0.8602
2023-03-28 22:17:40,063 - mmseg - INFO - Iter [5500/10000]	lr: 4.876e-03, eta: 1:31:23, time: 1.162, data_time: 0.255, memory: 8511, decode.loss_ce: 0.0769, decode.acc_seg: 95.7421, aux_0.loss_ce: 0.0825, aux_0.acc_seg: 95.5588, aux_1.loss_ce: 0.0940, aux_1.acc_seg: 94.9698, aux_2.loss_ce: 0.1259, aux_2.loss_dice: 0.2642, aux_2.acc_seg: 95.9030, aux_3.loss_ce: 0.2030, aux_3.acc_seg: 94.5458, loss: 0.8465
2023-03-28 22:18:36,158 - mmseg - INFO - Iter [5550/10000]	lr: 4.827e-03, eta: 1:30:18, time: 1.122, data_time: 0.260, memory: 8511, decode.loss_ce: 0.0755, decode.acc_seg: 95.8026, aux_0.loss_ce: 0.0791, aux_0.acc_seg: 95.6555, aux_1.loss_ce: 0.0922, aux_1.acc_seg: 95.0267, aux_2.loss_ce: 0.1239, aux_2.loss_dice: 0.2616, aux_2.acc_seg: 95.9696, aux_3.loss_ce: 0.2001, aux_3.acc_seg: 94.5578, loss: 0.8325
2023-03-28 22:19:42,303 - mmseg - INFO - Iter [5600/10000]	lr: 4.778e-03, eta: 1:29:22, time: 1.323, data_time: 0.377, memory: 8511, decode.loss_ce: 0.0769, decode.acc_seg: 95.7386, aux_0.loss_ce: 0.0814, aux_0.acc_seg: 95.5820, aux_1.loss_ce: 0.0936, aux_1.acc_seg: 94.9587, aux_2.loss_ce: 0.1250, aux_2.loss_dice: 0.2630, aux_2.acc_seg: 95.9136, aux_3.loss_ce: 0.2009, aux_3.acc_seg: 94.5429, loss: 0.8408
2023-03-28 22:20:45,002 - mmseg - INFO - Iter [5650/10000]	lr: 4.729e-03, eta: 1:28:22, time: 1.254, data_time: 0.280, memory: 8511, decode.loss_ce: 0.0787, decode.acc_seg: 95.6925, aux_0.loss_ce: 0.0830, aux_0.acc_seg: 95.5222, aux_1.loss_ce: 0.0954, aux_1.acc_seg: 94.9043, aux_2.loss_ce: 0.1278, aux_2.loss_dice: 0.2648, aux_2.acc_seg: 95.7970, aux_3.loss_ce: 0.2045, aux_3.acc_seg: 94.4616, loss: 0.8541
2023-03-28 22:21:41,710 - mmseg - INFO - Iter [5700/10000]	lr: 4.680e-03, eta: 1:27:18, time: 1.134, data_time: 0.267, memory: 8511, decode.loss_ce: 0.0780, decode.acc_seg: 95.7505, aux_0.loss_ce: 0.0820, aux_0.acc_seg: 95.5866, aux_1.loss_ce: 0.0942, aux_1.acc_seg: 94.9943, aux_2.loss_ce: 0.1261, aux_2.loss_dice: 0.2634, aux_2.acc_seg: 95.8757, aux_3.loss_ce: 0.2093, aux_3.acc_seg: 94.5450, loss: 0.8531
2023-03-28 22:22:44,668 - mmseg - INFO - Iter [5750/10000]	lr: 4.631e-03, eta: 1:26:18, time: 1.259, data_time: 0.388, memory: 8511, decode.loss_ce: 0.0763, decode.acc_seg: 95.8235, aux_0.loss_ce: 0.0808, aux_0.acc_seg: 95.6585, aux_1.loss_ce: 0.0917, aux_1.acc_seg: 95.0696, aux_2.loss_ce: 0.1265, aux_2.loss_dice: 0.2637, aux_2.acc_seg: 95.8650, aux_3.loss_ce: 0.1960, aux_3.acc_seg: 94.5952, loss: 0.8350
2023-03-28 22:23:42,473 - mmseg - INFO - Iter [5800/10000]	lr: 4.582e-03, eta: 1:25:15, time: 1.156, data_time: 0.288, memory: 8511, decode.loss_ce: 0.0774, decode.acc_seg: 95.7730, aux_0.loss_ce: 0.0819, aux_0.acc_seg: 95.6101, aux_1.loss_ce: 0.0931, aux_1.acc_seg: 95.0042, aux_2.loss_ce: 0.1258, aux_2.loss_dice: 0.2631, aux_2.acc_seg: 95.8757, aux_3.loss_ce: 0.2039, aux_3.acc_seg: 94.5628, loss: 0.8453
2023-03-28 22:24:39,520 - mmseg - INFO - Iter [5850/10000]	lr: 4.533e-03, eta: 1:24:12, time: 1.142, data_time: 0.280, memory: 8511, decode.loss_ce: 0.0760, decode.acc_seg: 95.8003, aux_0.loss_ce: 0.0794, aux_0.acc_seg: 95.6467, aux_1.loss_ce: 0.0929, aux_1.acc_seg: 94.9920, aux_2.loss_ce: 0.1249, aux_2.loss_dice: 0.2632, aux_2.acc_seg: 95.9175, aux_3.loss_ce: 0.1970, aux_3.acc_seg: 94.5546, loss: 0.8334
2023-03-28 22:25:42,957 - mmseg - INFO - Iter [5900/10000]	lr: 4.484e-03, eta: 1:23:13, time: 1.269, data_time: 0.384, memory: 8511, decode.loss_ce: 0.0746, decode.acc_seg: 95.8715, aux_0.loss_ce: 0.0789, aux_0.acc_seg: 95.7170, aux_1.loss_ce: 0.0907, aux_1.acc_seg: 95.0889, aux_2.loss_ce: 0.1252, aux_2.loss_dice: 0.2623, aux_2.acc_seg: 95.8833, aux_3.loss_ce: 0.1936, aux_3.acc_seg: 94.6388, loss: 0.8254
2023-03-28 22:26:49,918 - mmseg - INFO - Iter [5950/10000]	lr: 4.435e-03, eta: 1:22:16, time: 1.339, data_time: 0.323, memory: 8511, decode.loss_ce: 0.0762, decode.acc_seg: 95.7809, aux_0.loss_ce: 0.0799, aux_0.acc_seg: 95.6127, aux_1.loss_ce: 0.0936, aux_1.acc_seg: 95.0024, aux_2.loss_ce: 0.1258, aux_2.loss_dice: 0.2622, aux_2.acc_seg: 95.8616, aux_3.loss_ce: 0.2024, aux_3.acc_seg: 94.5520, loss: 0.8400
2023-03-28 22:27:49,922 - mmseg - INFO - Saving checkpoint at 6000 iterations
2023-03-28 22:27:50,429 - mmseg - INFO - Exp name: stdc1-entext_2x12_720x960_10k_camvid.py
2023-03-28 22:27:50,429 - mmseg - INFO - Iter [6000/10000]	lr: 4.385e-03, eta: 1:21:15, time: 1.212, data_time: 0.273, memory: 8511, decode.loss_ce: 0.0761, decode.acc_seg: 95.8559, aux_0.loss_ce: 0.0807, aux_0.acc_seg: 95.6983, aux_1.loss_ce: 0.0922, aux_1.acc_seg: 95.0909, aux_2.loss_ce: 0.1257, aux_2.loss_dice: 0.2636, aux_2.acc_seg: 95.9067, aux_3.loss_ce: 0.2036, aux_3.acc_seg: 94.6381, loss: 0.8418
2023-03-28 22:27:53,416 - mmseg - INFO - per class results:
2023-03-28 22:27:53,417 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 81.64 | 88.43 |
|   Building  | 92.56 | 94.49 |
|     Car     | 91.47 | 94.97 |
| Column_Pole | 13.61 | 15.13 |
|    Fence    | 80.93 | 93.84 |
|  Pedestrian |  56.3 | 80.52 |
|     Road    | 97.22 | 98.11 |
|   Sidewalk  | 90.86 | 97.35 |
|  SignSymbol |  0.0  |  0.0  |
|     Sky     | 93.87 | 96.47 |
|     Tree    | 91.39 | 98.16 |
+-------------+-------+-------+
2023-03-28 22:27:53,417 - mmseg - INFO - Summary:
2023-03-28 22:27:53,417 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 95.83 | 71.81 | 77.95 |
+-------+-------+-------+
2023-03-28 22:27:53,418 - mmseg - INFO - Exp name: stdc1-entext_2x12_720x960_10k_camvid.py
2023-03-28 22:27:53,418 - mmseg - INFO - Iter(val) [51]	aAcc: 0.9583, mIoU: 0.7181, mAcc: 0.7795, IoU.Bicyclist: 0.8164, IoU.Building: 0.9256, IoU.Car: 0.9147, IoU.Column_Pole: 0.1361, IoU.Fence: 0.8093, IoU.Pedestrian: 0.5630, IoU.Road: 0.9722, IoU.Sidewalk: 0.9086, IoU.SignSymbol: 0.0000, IoU.Sky: 0.9387, IoU.Tree: 0.9139, Acc.Bicyclist: 0.8843, Acc.Building: 0.9449, Acc.Car: 0.9497, Acc.Column_Pole: 0.1513, Acc.Fence: 0.9384, Acc.Pedestrian: 0.8052, Acc.Road: 0.9811, Acc.Sidewalk: 0.9735, Acc.SignSymbol: 0.0000, Acc.Sky: 0.9647, Acc.Tree: 0.9816
2023-03-28 22:28:54,989 - mmseg - INFO - Iter [6050/10000]	lr: 4.336e-03, eta: 1:20:16, time: 1.289, data_time: 0.389, memory: 8511, decode.loss_ce: 0.0774, decode.acc_seg: 95.7395, aux_0.loss_ce: 0.0806, aux_0.acc_seg: 95.5990, aux_1.loss_ce: 0.0936, aux_1.acc_seg: 94.9566, aux_2.loss_ce: 0.1251, aux_2.loss_dice: 0.2631, aux_2.acc_seg: 95.9162, aux_3.loss_ce: 0.2000, aux_3.acc_seg: 94.5108, loss: 0.8399
2023-03-28 22:29:52,474 - mmseg - INFO - Iter [6100/10000]	lr: 4.287e-03, eta: 1:19:13, time: 1.150, data_time: 0.289, memory: 8511, decode.loss_ce: 0.0776, decode.acc_seg: 95.7919, aux_0.loss_ce: 0.0821, aux_0.acc_seg: 95.6312, aux_1.loss_ce: 0.0949, aux_1.acc_seg: 95.0066, aux_2.loss_ce: 0.1271, aux_2.loss_dice: 0.2640, aux_2.acc_seg: 95.8472, aux_3.loss_ce: 0.2083, aux_3.acc_seg: 94.5605, loss: 0.8541
2023-03-28 22:30:54,416 - mmseg - INFO - Iter [6150/10000]	lr: 4.237e-03, eta: 1:18:12, time: 1.239, data_time: 0.268, memory: 8511, decode.loss_ce: 0.0748, decode.acc_seg: 95.8372, aux_0.loss_ce: 0.0793, aux_0.acc_seg: 95.6801, aux_1.loss_ce: 0.0901, aux_1.acc_seg: 95.0698, aux_2.loss_ce: 0.1253, aux_2.loss_dice: 0.2622, aux_2.acc_seg: 95.8758, aux_3.loss_ce: 0.1959, aux_3.acc_seg: 94.6308, loss: 0.8276
2023-03-28 22:31:55,808 - mmseg - INFO - Iter [6200/10000]	lr: 4.188e-03, eta: 1:17:12, time: 1.229, data_time: 0.320, memory: 8511, decode.loss_ce: 0.0768, decode.acc_seg: 95.8026, aux_0.loss_ce: 0.0809, aux_0.acc_seg: 95.6278, aux_1.loss_ce: 0.0935, aux_1.acc_seg: 94.9985, aux_2.loss_ce: 0.1261, aux_2.loss_dice: 0.2624, aux_2.acc_seg: 95.8496, aux_3.loss_ce: 0.2008, aux_3.acc_seg: 94.5557, loss: 0.8406
2023-03-28 22:32:51,387 - mmseg - INFO - Iter [6250/10000]	lr: 4.138e-03, eta: 1:16:08, time: 1.110, data_time: 0.241, memory: 8511, decode.loss_ce: 0.0744, decode.acc_seg: 95.8282, aux_0.loss_ce: 0.0787, aux_0.acc_seg: 95.6713, aux_1.loss_ce: 0.0901, aux_1.acc_seg: 95.0556, aux_2.loss_ce: 0.1240, aux_2.loss_dice: 0.2620, aux_2.acc_seg: 95.9658, aux_3.loss_ce: 0.1929, aux_3.acc_seg: 94.6139, loss: 0.8222
2023-03-28 22:33:53,858 - mmseg - INFO - Iter [6300/10000]	lr: 4.088e-03, eta: 1:15:08, time: 1.250, data_time: 0.255, memory: 8511, decode.loss_ce: 0.0765, decode.acc_seg: 95.8376, aux_0.loss_ce: 0.0806, aux_0.acc_seg: 95.7024, aux_1.loss_ce: 0.0936, aux_1.acc_seg: 95.0512, aux_2.loss_ce: 0.1269, aux_2.loss_dice: 0.2639, aux_2.acc_seg: 95.8218, aux_3.loss_ce: 0.2010, aux_3.acc_seg: 94.6125, loss: 0.8426
2023-03-28 22:34:53,648 - mmseg - INFO - Iter [6350/10000]	lr: 4.039e-03, eta: 1:14:06, time: 1.197, data_time: 0.303, memory: 8511, decode.loss_ce: 0.0734, decode.acc_seg: 95.9371, aux_0.loss_ce: 0.0783, aux_0.acc_seg: 95.7757, aux_1.loss_ce: 0.0897, aux_1.acc_seg: 95.1641, aux_2.loss_ce: 0.1250, aux_2.loss_dice: 0.2630, aux_2.acc_seg: 95.9124, aux_3.loss_ce: 0.1948, aux_3.acc_seg: 94.7347, loss: 0.8243
2023-03-28 22:35:50,012 - mmseg - INFO - Iter [6400/10000]	lr: 3.989e-03, eta: 1:13:03, time: 1.127, data_time: 0.262, memory: 8511, decode.loss_ce: 0.0742, decode.acc_seg: 95.8806, aux_0.loss_ce: 0.0784, aux_0.acc_seg: 95.7196, aux_1.loss_ce: 0.0911, aux_1.acc_seg: 95.0882, aux_2.loss_ce: 0.1254, aux_2.loss_dice: 0.2623, aux_2.acc_seg: 95.8732, aux_3.loss_ce: 0.1935, aux_3.acc_seg: 94.6724, loss: 0.8250
2023-03-28 22:36:50,052 - mmseg - INFO - Iter [6450/10000]	lr: 3.939e-03, eta: 1:12:01, time: 1.199, data_time: 0.257, memory: 8511, decode.loss_ce: 0.0756, decode.acc_seg: 95.8498, aux_0.loss_ce: 0.0786, aux_0.acc_seg: 95.7193, aux_1.loss_ce: 0.0925, aux_1.acc_seg: 95.0439, aux_2.loss_ce: 0.1250, aux_2.loss_dice: 0.2614, aux_2.acc_seg: 95.8918, aux_3.loss_ce: 0.1994, aux_3.acc_seg: 94.6560, loss: 0.8326
2023-03-28 22:37:54,136 - mmseg - INFO - Iter [6500/10000]	lr: 3.889e-03, eta: 1:11:02, time: 1.283, data_time: 0.335, memory: 8511, decode.loss_ce: 0.0759, decode.acc_seg: 95.8765, aux_0.loss_ce: 0.0801, aux_0.acc_seg: 95.7287, aux_1.loss_ce: 0.0919, aux_1.acc_seg: 95.0786, aux_2.loss_ce: 0.1257, aux_2.loss_dice: 0.2633, aux_2.acc_seg: 95.8817, aux_3.loss_ce: 0.2050, aux_3.acc_seg: 94.6598, loss: 0.8420
2023-03-28 22:38:50,649 - mmseg - INFO - Iter [6550/10000]	lr: 3.839e-03, eta: 1:09:59, time: 1.130, data_time: 0.244, memory: 8511, decode.loss_ce: 0.0765, decode.acc_seg: 95.8077, aux_0.loss_ce: 0.0802, aux_0.acc_seg: 95.6651, aux_1.loss_ce: 0.0925, aux_1.acc_seg: 95.0283, aux_2.loss_ce: 0.1265, aux_2.loss_dice: 0.2631, aux_2.acc_seg: 95.8318, aux_3.loss_ce: 0.2051, aux_3.acc_seg: 94.5776, loss: 0.8440
2023-03-28 22:39:48,367 - mmseg - INFO - Iter [6600/10000]	lr: 3.789e-03, eta: 1:08:56, time: 1.154, data_time: 0.265, memory: 8511, decode.loss_ce: 0.0743, decode.acc_seg: 95.8940, aux_0.loss_ce: 0.0783, aux_0.acc_seg: 95.7373, aux_1.loss_ce: 0.0913, aux_1.acc_seg: 95.0974, aux_2.loss_ce: 0.1250, aux_2.loss_dice: 0.2621, aux_2.acc_seg: 95.9078, aux_3.loss_ce: 0.2026, aux_3.acc_seg: 94.6451, loss: 0.8337
2023-03-28 22:40:53,043 - mmseg - INFO - Iter [6650/10000]	lr: 3.739e-03, eta: 1:07:58, time: 1.294, data_time: 0.323, memory: 8511, decode.loss_ce: 0.0750, decode.acc_seg: 95.7868, aux_0.loss_ce: 0.0792, aux_0.acc_seg: 95.6188, aux_1.loss_ce: 0.0906, aux_1.acc_seg: 94.9914, aux_2.loss_ce: 0.1248, aux_2.loss_dice: 0.2620, aux_2.acc_seg: 95.8979, aux_3.loss_ce: 0.1934, aux_3.acc_seg: 94.5249, loss: 0.8250
2023-03-28 22:41:49,905 - mmseg - INFO - Iter [6700/10000]	lr: 3.689e-03, eta: 1:06:55, time: 1.137, data_time: 0.234, memory: 8511, decode.loss_ce: 0.0722, decode.acc_seg: 95.9818, aux_0.loss_ce: 0.0764, aux_0.acc_seg: 95.8307, aux_1.loss_ce: 0.0886, aux_1.acc_seg: 95.2043, aux_2.loss_ce: 0.1247, aux_2.loss_dice: 0.2612, aux_2.acc_seg: 95.9019, aux_3.loss_ce: 0.1891, aux_3.acc_seg: 94.7895, loss: 0.8123
2023-03-28 22:42:49,008 - mmseg - INFO - Iter [6750/10000]	lr: 3.638e-03, eta: 1:05:53, time: 1.182, data_time: 0.266, memory: 8511, decode.loss_ce: 0.0729, decode.acc_seg: 95.9304, aux_0.loss_ce: 0.0765, aux_0.acc_seg: 95.7848, aux_1.loss_ce: 0.0887, aux_1.acc_seg: 95.1510, aux_2.loss_ce: 0.1238, aux_2.loss_dice: 0.2607, aux_2.acc_seg: 95.9207, aux_3.loss_ce: 0.1961, aux_3.acc_seg: 94.7245, loss: 0.8187
2023-03-28 22:43:53,821 - mmseg - INFO - Iter [6800/10000]	lr: 3.588e-03, eta: 1:04:54, time: 1.296, data_time: 0.343, memory: 8511, decode.loss_ce: 0.0755, decode.acc_seg: 95.8478, aux_0.loss_ce: 0.0802, aux_0.acc_seg: 95.7001, aux_1.loss_ce: 0.0925, aux_1.acc_seg: 95.0193, aux_2.loss_ce: 0.1263, aux_2.loss_dice: 0.2624, aux_2.acc_seg: 95.8429, aux_3.loss_ce: 0.1976, aux_3.acc_seg: 94.5989, loss: 0.8346
2023-03-28 22:44:50,178 - mmseg - INFO - Iter [6850/10000]	lr: 3.537e-03, eta: 1:03:51, time: 1.127, data_time: 0.243, memory: 8511, decode.loss_ce: 0.0728, decode.acc_seg: 95.9427, aux_0.loss_ce: 0.0773, aux_0.acc_seg: 95.7783, aux_1.loss_ce: 0.0894, aux_1.acc_seg: 95.1384, aux_2.loss_ce: 0.1256, aux_2.loss_dice: 0.2613, aux_2.acc_seg: 95.8428, aux_3.loss_ce: 0.1905, aux_3.acc_seg: 94.6759, loss: 0.8169
2023-03-28 22:45:48,934 - mmseg - INFO - Iter [6900/10000]	lr: 3.487e-03, eta: 1:02:49, time: 1.174, data_time: 0.263, memory: 8511, decode.loss_ce: 0.0732, decode.acc_seg: 95.9676, aux_0.loss_ce: 0.0776, aux_0.acc_seg: 95.8088, aux_1.loss_ce: 0.0893, aux_1.acc_seg: 95.2010, aux_2.loss_ce: 0.1249, aux_2.loss_dice: 0.2624, aux_2.acc_seg: 95.9013, aux_3.loss_ce: 0.1942, aux_3.acc_seg: 94.7509, loss: 0.8215
2023-03-28 22:46:48,540 - mmseg - INFO - Iter [6950/10000]	lr: 3.436e-03, eta: 1:01:48, time: 1.192, data_time: 0.316, memory: 8511, decode.loss_ce: 0.0741, decode.acc_seg: 95.9226, aux_0.loss_ce: 0.0785, aux_0.acc_seg: 95.7795, aux_1.loss_ce: 0.0904, aux_1.acc_seg: 95.1415, aux_2.loss_ce: 0.1264, aux_2.loss_dice: 0.2632, aux_2.acc_seg: 95.8424, aux_3.loss_ce: 0.1924, aux_3.acc_seg: 94.7083, loss: 0.8251
2023-03-28 22:47:45,613 - mmseg - INFO - Saving checkpoint at 7000 iterations
2023-03-28 22:47:46,340 - mmseg - INFO - Exp name: stdc1-entext_2x12_720x960_10k_camvid.py
2023-03-28 22:47:46,341 - mmseg - INFO - Iter [7000/10000]	lr: 3.386e-03, eta: 1:00:46, time: 1.158, data_time: 0.262, memory: 8511, decode.loss_ce: 0.0729, decode.acc_seg: 95.8540, aux_0.loss_ce: 0.0766, aux_0.acc_seg: 95.6875, aux_1.loss_ce: 0.0897, aux_1.acc_seg: 95.0531, aux_2.loss_ce: 0.1242, aux_2.loss_dice: 0.2610, aux_2.acc_seg: 95.9083, aux_3.loss_ce: 0.1897, aux_3.acc_seg: 94.6058, loss: 0.8141
2023-03-28 22:47:49,261 - mmseg - INFO - per class results:
2023-03-28 22:47:49,262 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 82.03 | 89.84 |
|   Building  | 92.33 | 94.22 |
|     Car     | 91.56 | 95.33 |
| Column_Pole | 12.51 | 13.59 |
|    Fence    | 80.86 | 92.36 |
|  Pedestrian | 56.18 | 80.31 |
|     Road    | 97.23 | 98.09 |
|   Sidewalk  | 90.73 | 97.24 |
|  SignSymbol |  0.0  |  0.0  |
|     Sky     | 93.73 | 96.42 |
|     Tree    | 90.95 | 98.35 |
+-------------+-------+-------+
2023-03-28 22:47:49,263 - mmseg - INFO - Summary:
2023-03-28 22:47:49,263 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 95.75 | 71.65 | 77.79 |
+-------+-------+-------+
2023-03-28 22:47:49,263 - mmseg - INFO - Exp name: stdc1-entext_2x12_720x960_10k_camvid.py
2023-03-28 22:47:49,263 - mmseg - INFO - Iter(val) [51]	aAcc: 0.9575, mIoU: 0.7165, mAcc: 0.7779, IoU.Bicyclist: 0.8203, IoU.Building: 0.9233, IoU.Car: 0.9156, IoU.Column_Pole: 0.1251, IoU.Fence: 0.8086, IoU.Pedestrian: 0.5618, IoU.Road: 0.9723, IoU.Sidewalk: 0.9073, IoU.SignSymbol: 0.0000, IoU.Sky: 0.9373, IoU.Tree: 0.9095, Acc.Bicyclist: 0.8984, Acc.Building: 0.9422, Acc.Car: 0.9533, Acc.Column_Pole: 0.1359, Acc.Fence: 0.9236, Acc.Pedestrian: 0.8031, Acc.Road: 0.9809, Acc.Sidewalk: 0.9724, Acc.SignSymbol: 0.0000, Acc.Sky: 0.9642, Acc.Tree: 0.9835
2023-03-28 22:48:47,032 - mmseg - INFO - Iter [7050/10000]	lr: 3.335e-03, eta: 0:59:45, time: 1.213, data_time: 0.342, memory: 8511, decode.loss_ce: 0.0723, decode.acc_seg: 95.9680, aux_0.loss_ce: 0.0766, aux_0.acc_seg: 95.8174, aux_1.loss_ce: 0.0877, aux_1.acc_seg: 95.1928, aux_2.loss_ce: 0.1250, aux_2.loss_dice: 0.2613, aux_2.acc_seg: 95.8728, aux_3.loss_ce: 0.1854, aux_3.acc_seg: 94.7417, loss: 0.8083
2023-03-28 22:49:54,499 - mmseg - INFO - Iter [7100/10000]	lr: 3.284e-03, eta: 0:58:47, time: 1.348, data_time: 0.357, memory: 8511, decode.loss_ce: 0.0741, decode.acc_seg: 95.9054, aux_0.loss_ce: 0.0785, aux_0.acc_seg: 95.7545, aux_1.loss_ce: 0.0898, aux_1.acc_seg: 95.1229, aux_2.loss_ce: 0.1258, aux_2.loss_dice: 0.2624, aux_2.acc_seg: 95.8569, aux_3.loss_ce: 0.1903, aux_3.acc_seg: 94.6421, loss: 0.8210
2023-03-28 22:50:50,400 - mmseg - INFO - Iter [7150/10000]	lr: 3.233e-03, eta: 0:57:44, time: 1.117, data_time: 0.240, memory: 8511, decode.loss_ce: 0.0735, decode.acc_seg: 95.9214, aux_0.loss_ce: 0.0785, aux_0.acc_seg: 95.7716, aux_1.loss_ce: 0.0901, aux_1.acc_seg: 95.1298, aux_2.loss_ce: 0.1272, aux_2.loss_dice: 0.2629, aux_2.acc_seg: 95.8113, aux_3.loss_ce: 0.1891, aux_3.acc_seg: 94.6843, loss: 0.8213
2023-03-28 22:51:46,306 - mmseg - INFO - Iter [7200/10000]	lr: 3.182e-03, eta: 0:56:42, time: 1.120, data_time: 0.239, memory: 8511, decode.loss_ce: 0.0722, decode.acc_seg: 95.9625, aux_0.loss_ce: 0.0760, aux_0.acc_seg: 95.8037, aux_1.loss_ce: 0.0879, aux_1.acc_seg: 95.1703, aux_2.loss_ce: 0.1256, aux_2.loss_dice: 0.2618, aux_2.acc_seg: 95.8522, aux_3.loss_ce: 0.1931, aux_3.acc_seg: 94.7040, loss: 0.8165
2023-03-28 22:52:55,076 - mmseg - INFO - Iter [7250/10000]	lr: 3.131e-03, eta: 0:55:44, time: 1.374, data_time: 0.372, memory: 8511, decode.loss_ce: 0.0732, decode.acc_seg: 95.9807, aux_0.loss_ce: 0.0777, aux_0.acc_seg: 95.8170, aux_1.loss_ce: 0.0895, aux_1.acc_seg: 95.1954, aux_2.loss_ce: 0.1259, aux_2.loss_dice: 0.2620, aux_2.acc_seg: 95.8527, aux_3.loss_ce: 0.1926, aux_3.acc_seg: 94.7089, loss: 0.8208
2023-03-28 22:53:53,870 - mmseg - INFO - Iter [7300/10000]	lr: 3.079e-03, eta: 0:54:42, time: 1.176, data_time: 0.258, memory: 8511, decode.loss_ce: 0.0722, decode.acc_seg: 95.9836, aux_0.loss_ce: 0.0755, aux_0.acc_seg: 95.8429, aux_1.loss_ce: 0.0884, aux_1.acc_seg: 95.2032, aux_2.loss_ce: 0.1246, aux_2.loss_dice: 0.2618, aux_2.acc_seg: 95.9052, aux_3.loss_ce: 0.1902, aux_3.acc_seg: 94.7697, loss: 0.8127
2023-03-28 22:54:49,596 - mmseg - INFO - Iter [7350/10000]	lr: 3.028e-03, eta: 0:53:40, time: 1.116, data_time: 0.234, memory: 8511, decode.loss_ce: 0.0725, decode.acc_seg: 95.9885, aux_0.loss_ce: 0.0766, aux_0.acc_seg: 95.8381, aux_1.loss_ce: 0.0884, aux_1.acc_seg: 95.2112, aux_2.loss_ce: 0.1247, aux_2.loss_dice: 0.2612, aux_2.acc_seg: 95.8868, aux_3.loss_ce: 0.1906, aux_3.acc_seg: 94.7487, loss: 0.8140
2023-03-28 22:55:54,075 - mmseg - INFO - Iter [7400/10000]	lr: 2.977e-03, eta: 0:52:40, time: 1.289, data_time: 0.315, memory: 8511, decode.loss_ce: 0.0716, decode.acc_seg: 96.0005, aux_0.loss_ce: 0.0765, aux_0.acc_seg: 95.8447, aux_1.loss_ce: 0.0876, aux_1.acc_seg: 95.2335, aux_2.loss_ce: 0.1248, aux_2.loss_dice: 0.2616, aux_2.acc_seg: 95.9018, aux_3.loss_ce: 0.1881, aux_3.acc_seg: 94.7791, loss: 0.8102
2023-03-28 22:56:50,148 - mmseg - INFO - Iter [7450/10000]	lr: 2.925e-03, eta: 0:51:38, time: 1.122, data_time: 0.247, memory: 8511, decode.loss_ce: 0.0726, decode.acc_seg: 95.9377, aux_0.loss_ce: 0.0772, aux_0.acc_seg: 95.7783, aux_1.loss_ce: 0.0890, aux_1.acc_seg: 95.1639, aux_2.loss_ce: 0.1250, aux_2.loss_dice: 0.2607, aux_2.acc_seg: 95.8756, aux_3.loss_ce: 0.1912, aux_3.acc_seg: 94.7024, loss: 0.8156
2023-03-28 22:57:46,415 - mmseg - INFO - Iter [7500/10000]	lr: 2.873e-03, eta: 0:50:36, time: 1.126, data_time: 0.249, memory: 8511, decode.loss_ce: 0.0713, decode.acc_seg: 96.0590, aux_0.loss_ce: 0.0749, aux_0.acc_seg: 95.9045, aux_1.loss_ce: 0.0870, aux_1.acc_seg: 95.2801, aux_2.loss_ce: 0.1243, aux_2.loss_dice: 0.2611, aux_2.acc_seg: 95.8846, aux_3.loss_ce: 0.1882, aux_3.acc_seg: 94.8190, loss: 0.8068
2023-03-28 22:58:54,018 - mmseg - INFO - Iter [7550/10000]	lr: 2.822e-03, eta: 0:49:37, time: 1.351, data_time: 0.357, memory: 8511, decode.loss_ce: 0.0711, decode.acc_seg: 95.9815, aux_0.loss_ce: 0.0752, aux_0.acc_seg: 95.8329, aux_1.loss_ce: 0.0867, aux_1.acc_seg: 95.2242, aux_2.loss_ce: 0.1246, aux_2.loss_dice: 0.2610, aux_2.acc_seg: 95.8875, aux_3.loss_ce: 0.1863, aux_3.acc_seg: 94.7672, loss: 0.8048
2023-03-28 22:59:50,830 - mmseg - INFO - Iter [7600/10000]	lr: 2.770e-03, eta: 0:48:35, time: 1.136, data_time: 0.258, memory: 8511, decode.loss_ce: 0.0712, decode.acc_seg: 96.0722, aux_0.loss_ce: 0.0757, aux_0.acc_seg: 95.9087, aux_1.loss_ce: 0.0869, aux_1.acc_seg: 95.2658, aux_2.loss_ce: 0.1243, aux_2.loss_dice: 0.2609, aux_2.acc_seg: 95.9144, aux_3.loss_ce: 0.1921, aux_3.acc_seg: 94.8178, loss: 0.8110
2023-03-28 23:00:48,053 - mmseg - INFO - Iter [7650/10000]	lr: 2.718e-03, eta: 0:47:33, time: 1.144, data_time: 0.277, memory: 8511, decode.loss_ce: 0.0718, decode.acc_seg: 95.9377, aux_0.loss_ce: 0.0755, aux_0.acc_seg: 95.7906, aux_1.loss_ce: 0.0880, aux_1.acc_seg: 95.1409, aux_2.loss_ce: 0.1241, aux_2.loss_dice: 0.2603, aux_2.acc_seg: 95.8908, aux_3.loss_ce: 0.1831, aux_3.acc_seg: 94.6642, loss: 0.8028
2023-03-28 23:01:53,240 - mmseg - INFO - Iter [7700/10000]	lr: 2.666e-03, eta: 0:46:34, time: 1.304, data_time: 0.333, memory: 8511, decode.loss_ce: 0.0713, decode.acc_seg: 95.9796, aux_0.loss_ce: 0.0752, aux_0.acc_seg: 95.8217, aux_1.loss_ce: 0.0870, aux_1.acc_seg: 95.1894, aux_2.loss_ce: 0.1249, aux_2.loss_dice: 0.2605, aux_2.acc_seg: 95.8556, aux_3.loss_ce: 0.1866, aux_3.acc_seg: 94.7641, loss: 0.8056
2023-03-28 23:02:53,956 - mmseg - INFO - Iter [7750/10000]	lr: 2.614e-03, eta: 0:45:33, time: 1.214, data_time: 0.262, memory: 8511, decode.loss_ce: 0.0733, decode.acc_seg: 95.9789, aux_0.loss_ce: 0.0769, aux_0.acc_seg: 95.8388, aux_1.loss_ce: 0.0892, aux_1.acc_seg: 95.2135, aux_2.loss_ce: 0.1258, aux_2.loss_dice: 0.2614, aux_2.acc_seg: 95.8531, aux_3.loss_ce: 0.1857, aux_3.acc_seg: 94.7436, loss: 0.8124
2023-03-28 23:03:49,457 - mmseg - INFO - Iter [7800/10000]	lr: 2.561e-03, eta: 0:44:31, time: 1.110, data_time: 0.240, memory: 8511, decode.loss_ce: 0.0739, decode.acc_seg: 95.9212, aux_0.loss_ce: 0.0771, aux_0.acc_seg: 95.7652, aux_1.loss_ce: 0.0894, aux_1.acc_seg: 95.1460, aux_2.loss_ce: 0.1267, aux_2.loss_dice: 0.2625, aux_2.acc_seg: 95.8106, aux_3.loss_ce: 0.1900, aux_3.acc_seg: 94.6943, loss: 0.8197
2023-03-28 23:04:53,101 - mmseg - INFO - Iter [7850/10000]	lr: 2.509e-03, eta: 0:43:31, time: 1.273, data_time: 0.351, memory: 8511, decode.loss_ce: 0.0716, decode.acc_seg: 96.0013, aux_0.loss_ce: 0.0759, aux_0.acc_seg: 95.8648, aux_1.loss_ce: 0.0871, aux_1.acc_seg: 95.2471, aux_2.loss_ce: 0.1251, aux_2.loss_dice: 0.2618, aux_2.acc_seg: 95.8822, aux_3.loss_ce: 0.1851, aux_3.acc_seg: 94.7681, loss: 0.8065
2023-03-28 23:05:55,302 - mmseg - INFO - Iter [7900/10000]	lr: 2.457e-03, eta: 0:42:31, time: 1.244, data_time: 0.258, memory: 8511, decode.loss_ce: 0.0710, decode.acc_seg: 96.0535, aux_0.loss_ce: 0.0747, aux_0.acc_seg: 95.9069, aux_1.loss_ce: 0.0871, aux_1.acc_seg: 95.2741, aux_2.loss_ce: 0.1260, aux_2.loss_dice: 0.2616, aux_2.acc_seg: 95.8345, aux_3.loss_ce: 0.1848, aux_3.acc_seg: 94.8115, loss: 0.8052
2023-03-28 23:06:51,179 - mmseg - INFO - Iter [7950/10000]	lr: 2.404e-03, eta: 0:41:29, time: 1.118, data_time: 0.248, memory: 8511, decode.loss_ce: 0.0725, decode.acc_seg: 96.0153, aux_0.loss_ce: 0.0766, aux_0.acc_seg: 95.8613, aux_1.loss_ce: 0.0880, aux_1.acc_seg: 95.2482, aux_2.loss_ce: 0.1255, aux_2.loss_dice: 0.2620, aux_2.acc_seg: 95.8797, aux_3.loss_ce: 0.1894, aux_3.acc_seg: 94.7713, loss: 0.8140
2023-03-28 23:07:50,505 - mmseg - INFO - Saving checkpoint at 8000 iterations
2023-03-28 23:07:50,787 - mmseg - INFO - Exp name: stdc1-entext_2x12_720x960_10k_camvid.py
2023-03-28 23:07:50,788 - mmseg - INFO - Iter [8000/10000]	lr: 2.351e-03, eta: 0:40:28, time: 1.194, data_time: 0.326, memory: 8511, decode.loss_ce: 0.0702, decode.acc_seg: 96.0443, aux_0.loss_ce: 0.0747, aux_0.acc_seg: 95.8814, aux_1.loss_ce: 0.0865, aux_1.acc_seg: 95.2564, aux_2.loss_ce: 0.1240, aux_2.loss_dice: 0.2607, aux_2.acc_seg: 95.9005, aux_3.loss_ce: 0.1849, aux_3.acc_seg: 94.7995, loss: 0.8010
2023-03-28 23:07:54,006 - mmseg - INFO - per class results:
2023-03-28 23:07:54,007 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 82.27 | 90.05 |
|   Building  | 92.33 | 94.52 |
|     Car     | 91.73 | 95.47 |
| Column_Pole | 13.55 | 14.91 |
|    Fence    | 81.93 |  93.6 |
|  Pedestrian | 56.49 | 77.11 |
|     Road    | 97.22 |  98.0 |
|   Sidewalk  | 90.88 | 96.99 |
|  SignSymbol |  0.0  |  0.0  |
|     Sky     | 93.93 | 96.61 |
|     Tree    | 90.91 | 98.15 |
+-------------+-------+-------+
2023-03-28 23:07:54,007 - mmseg - INFO - Summary:
2023-03-28 23:07:54,007 - mmseg - INFO - 
+------+-------+-------+
| aAcc |  mIoU |  mAcc |
+------+-------+-------+
| 95.8 | 71.93 | 77.76 |
+------+-------+-------+
2023-03-28 23:07:54,008 - mmseg - INFO - Exp name: stdc1-entext_2x12_720x960_10k_camvid.py
2023-03-28 23:07:54,008 - mmseg - INFO - Iter(val) [51]	aAcc: 0.9580, mIoU: 0.7193, mAcc: 0.7776, IoU.Bicyclist: 0.8227, IoU.Building: 0.9233, IoU.Car: 0.9173, IoU.Column_Pole: 0.1355, IoU.Fence: 0.8193, IoU.Pedestrian: 0.5649, IoU.Road: 0.9722, IoU.Sidewalk: 0.9088, IoU.SignSymbol: 0.0000, IoU.Sky: 0.9393, IoU.Tree: 0.9091, Acc.Bicyclist: 0.9005, Acc.Building: 0.9452, Acc.Car: 0.9547, Acc.Column_Pole: 0.1491, Acc.Fence: 0.9360, Acc.Pedestrian: 0.7711, Acc.Road: 0.9800, Acc.Sidewalk: 0.9699, Acc.SignSymbol: 0.0000, Acc.Sky: 0.9661, Acc.Tree: 0.9815
2023-03-28 23:08:55,321 - mmseg - INFO - Iter [8050/10000]	lr: 2.298e-03, eta: 0:39:28, time: 1.289, data_time: 0.332, memory: 8511, decode.loss_ce: 0.0719, decode.acc_seg: 96.0445, aux_0.loss_ce: 0.0757, aux_0.acc_seg: 95.9007, aux_1.loss_ce: 0.0883, aux_1.acc_seg: 95.2919, aux_2.loss_ce: 0.1250, aux_2.loss_dice: 0.2616, aux_2.acc_seg: 95.8785, aux_3.loss_ce: 0.1919, aux_3.acc_seg: 94.7937, loss: 0.8145
2023-03-28 23:09:50,692 - mmseg - INFO - Iter [8100/10000]	lr: 2.245e-03, eta: 0:38:26, time: 1.108, data_time: 0.253, memory: 8511, decode.loss_ce: 0.0727, decode.acc_seg: 95.9652, aux_0.loss_ce: 0.0768, aux_0.acc_seg: 95.8283, aux_1.loss_ce: 0.0881, aux_1.acc_seg: 95.2361, aux_2.loss_ce: 0.1245, aux_2.loss_dice: 0.2619, aux_2.acc_seg: 95.9281, aux_3.loss_ce: 0.1860, aux_3.acc_seg: 94.7684, loss: 0.8101
2023-03-28 23:10:55,649 - mmseg - INFO - Iter [8150/10000]	lr: 2.192e-03, eta: 0:37:26, time: 1.299, data_time: 0.351, memory: 8511, decode.loss_ce: 0.0741, decode.acc_seg: 95.9451, aux_0.loss_ce: 0.0780, aux_0.acc_seg: 95.8061, aux_1.loss_ce: 0.0907, aux_1.acc_seg: 95.1784, aux_2.loss_ce: 0.1269, aux_2.loss_dice: 0.2635, aux_2.acc_seg: 95.8259, aux_3.loss_ce: 0.1913, aux_3.acc_seg: 94.7481, loss: 0.8244
2023-03-28 23:11:57,629 - mmseg - INFO - Iter [8200/10000]	lr: 2.139e-03, eta: 0:36:26, time: 1.240, data_time: 0.275, memory: 8511, decode.loss_ce: 0.0700, decode.acc_seg: 96.0519, aux_0.loss_ce: 0.0733, aux_0.acc_seg: 95.9048, aux_1.loss_ce: 0.0859, aux_1.acc_seg: 95.2849, aux_2.loss_ce: 0.1231, aux_2.loss_dice: 0.2589, aux_2.acc_seg: 95.9443, aux_3.loss_ce: 0.1803, aux_3.acc_seg: 94.8004, loss: 0.7914
2023-03-28 23:12:53,190 - mmseg - INFO - Iter [8250/10000]	lr: 2.085e-03, eta: 0:35:24, time: 1.111, data_time: 0.238, memory: 8511, decode.loss_ce: 0.0703, decode.acc_seg: 96.0239, aux_0.loss_ce: 0.0743, aux_0.acc_seg: 95.8744, aux_1.loss_ce: 0.0861, aux_1.acc_seg: 95.2494, aux_2.loss_ce: 0.1250, aux_2.loss_dice: 0.2601, aux_2.acc_seg: 95.8545, aux_3.loss_ce: 0.1836, aux_3.acc_seg: 94.7849, loss: 0.7994
2023-03-28 23:13:56,654 - mmseg - INFO - Iter [8300/10000]	lr: 2.031e-03, eta: 0:34:24, time: 1.269, data_time: 0.371, memory: 8511, decode.loss_ce: 0.0720, decode.acc_seg: 95.9745, aux_0.loss_ce: 0.0764, aux_0.acc_seg: 95.8223, aux_1.loss_ce: 0.0892, aux_1.acc_seg: 95.1810, aux_2.loss_ce: 0.1266, aux_2.loss_dice: 0.2618, aux_2.acc_seg: 95.8083, aux_3.loss_ce: 0.1847, aux_3.acc_seg: 94.7271, loss: 0.8107
2023-03-28 23:14:58,848 - mmseg - INFO - Iter [8350/10000]	lr: 1.978e-03, eta: 0:33:23, time: 1.244, data_time: 0.269, memory: 8511, decode.loss_ce: 0.0721, decode.acc_seg: 95.9833, aux_0.loss_ce: 0.0765, aux_0.acc_seg: 95.8276, aux_1.loss_ce: 0.0878, aux_1.acc_seg: 95.2032, aux_2.loss_ce: 0.1250, aux_2.loss_dice: 0.2617, aux_2.acc_seg: 95.8848, aux_3.loss_ce: 0.1893, aux_3.acc_seg: 94.7198, loss: 0.8124
2023-03-28 23:15:55,639 - mmseg - INFO - Iter [8400/10000]	lr: 1.924e-03, eta: 0:32:22, time: 1.136, data_time: 0.257, memory: 8511, decode.loss_ce: 0.0716, decode.acc_seg: 96.0627, aux_0.loss_ce: 0.0747, aux_0.acc_seg: 95.9230, aux_1.loss_ce: 0.0867, aux_1.acc_seg: 95.2927, aux_2.loss_ce: 0.1243, aux_2.loss_dice: 0.2607, aux_2.acc_seg: 95.9036, aux_3.loss_ce: 0.1887, aux_3.acc_seg: 94.8390, loss: 0.8067
2023-03-28 23:16:58,162 - mmseg - INFO - Iter [8450/10000]	lr: 1.870e-03, eta: 0:31:22, time: 1.251, data_time: 0.380, memory: 8511, decode.loss_ce: 0.0711, decode.acc_seg: 96.0333, aux_0.loss_ce: 0.0752, aux_0.acc_seg: 95.8713, aux_1.loss_ce: 0.0877, aux_1.acc_seg: 95.2279, aux_2.loss_ce: 0.1256, aux_2.loss_dice: 0.2619, aux_2.acc_seg: 95.8319, aux_3.loss_ce: 0.1833, aux_3.acc_seg: 94.7829, loss: 0.8049
2023-03-28 23:17:59,927 - mmseg - INFO - Iter [8500/10000]	lr: 1.815e-03, eta: 0:30:21, time: 1.235, data_time: 0.282, memory: 8511, decode.loss_ce: 0.0703, decode.acc_seg: 96.0613, aux_0.loss_ce: 0.0737, aux_0.acc_seg: 95.9159, aux_1.loss_ce: 0.0857, aux_1.acc_seg: 95.3049, aux_2.loss_ce: 0.1246, aux_2.loss_dice: 0.2607, aux_2.acc_seg: 95.9067, aux_3.loss_ce: 0.1793, aux_3.acc_seg: 94.8320, loss: 0.7943
2023-03-28 23:18:59,186 - mmseg - INFO - Iter [8550/10000]	lr: 1.761e-03, eta: 0:29:20, time: 1.185, data_time: 0.253, memory: 8511, decode.loss_ce: 0.0700, decode.acc_seg: 96.0447, aux_0.loss_ce: 0.0740, aux_0.acc_seg: 95.8759, aux_1.loss_ce: 0.0862, aux_1.acc_seg: 95.2594, aux_2.loss_ce: 0.1237, aux_2.loss_dice: 0.2603, aux_2.acc_seg: 95.9331, aux_3.loss_ce: 0.1806, aux_3.acc_seg: 94.8063, loss: 0.7948
2023-03-28 23:19:59,635 - mmseg - INFO - Iter [8600/10000]	lr: 1.706e-03, eta: 0:28:19, time: 1.209, data_time: 0.344, memory: 8511, decode.loss_ce: 0.0693, decode.acc_seg: 96.0734, aux_0.loss_ce: 0.0732, aux_0.acc_seg: 95.9224, aux_1.loss_ce: 0.0851, aux_1.acc_seg: 95.3142, aux_2.loss_ce: 0.1238, aux_2.loss_dice: 0.2596, aux_2.acc_seg: 95.9038, aux_3.loss_ce: 0.1798, aux_3.acc_seg: 94.8497, loss: 0.7908
2023-03-28 23:21:01,293 - mmseg - INFO - Iter [8650/10000]	lr: 1.651e-03, eta: 0:27:19, time: 1.233, data_time: 0.263, memory: 8511, decode.loss_ce: 0.0712, decode.acc_seg: 96.0373, aux_0.loss_ce: 0.0748, aux_0.acc_seg: 95.8785, aux_1.loss_ce: 0.0871, aux_1.acc_seg: 95.2721, aux_2.loss_ce: 0.1246, aux_2.loss_dice: 0.2605, aux_2.acc_seg: 95.8389, aux_3.loss_ce: 0.1841, aux_3.acc_seg: 94.7802, loss: 0.8022
2023-03-28 23:22:00,590 - mmseg - INFO - Iter [8700/10000]	lr: 1.596e-03, eta: 0:26:18, time: 1.186, data_time: 0.261, memory: 8511, decode.loss_ce: 0.0717, decode.acc_seg: 95.9424, aux_0.loss_ce: 0.0755, aux_0.acc_seg: 95.7880, aux_1.loss_ce: 0.0867, aux_1.acc_seg: 95.1780, aux_2.loss_ce: 0.1246, aux_2.loss_dice: 0.2611, aux_2.acc_seg: 95.8850, aux_3.loss_ce: 0.1841, aux_3.acc_seg: 94.7052, loss: 0.8037
2023-03-28 23:22:59,511 - mmseg - INFO - Iter [8750/10000]	lr: 1.541e-03, eta: 0:25:17, time: 1.179, data_time: 0.308, memory: 8511, decode.loss_ce: 0.0701, decode.acc_seg: 96.1092, aux_0.loss_ce: 0.0736, aux_0.acc_seg: 95.9533, aux_1.loss_ce: 0.0869, aux_1.acc_seg: 95.3407, aux_2.loss_ce: 0.1241, aux_2.loss_dice: 0.2600, aux_2.acc_seg: 95.9011, aux_3.loss_ce: 0.1841, aux_3.acc_seg: 94.8875, loss: 0.7988
2023-03-28 23:24:03,593 - mmseg - INFO - Iter [8800/10000]	lr: 1.485e-03, eta: 0:24:17, time: 1.283, data_time: 0.302, memory: 8511, decode.loss_ce: 0.0705, decode.acc_seg: 96.0351, aux_0.loss_ce: 0.0743, aux_0.acc_seg: 95.8693, aux_1.loss_ce: 0.0868, aux_1.acc_seg: 95.2417, aux_2.loss_ce: 0.1252, aux_2.loss_dice: 0.2615, aux_2.acc_seg: 95.8448, aux_3.loss_ce: 0.1833, aux_3.acc_seg: 94.7863, loss: 0.8015
2023-03-28 23:25:01,312 - mmseg - INFO - Iter [8850/10000]	lr: 1.430e-03, eta: 0:23:16, time: 1.153, data_time: 0.254, memory: 8511, decode.loss_ce: 0.0690, decode.acc_seg: 96.1324, aux_0.loss_ce: 0.0730, aux_0.acc_seg: 95.9823, aux_1.loss_ce: 0.0851, aux_1.acc_seg: 95.3710, aux_2.loss_ce: 0.1240, aux_2.loss_dice: 0.2595, aux_2.acc_seg: 95.9025, aux_3.loss_ce: 0.1779, aux_3.acc_seg: 94.8932, loss: 0.7885
2023-03-28 23:26:02,710 - mmseg - INFO - Iter [8900/10000]	lr: 1.374e-03, eta: 0:22:15, time: 1.229, data_time: 0.364, memory: 8511, decode.loss_ce: 0.0713, decode.acc_seg: 96.0659, aux_0.loss_ce: 0.0746, aux_0.acc_seg: 95.9314, aux_1.loss_ce: 0.0872, aux_1.acc_seg: 95.3120, aux_2.loss_ce: 0.1250, aux_2.loss_dice: 0.2619, aux_2.acc_seg: 95.8863, aux_3.loss_ce: 0.1859, aux_3.acc_seg: 94.8521, loss: 0.8059
2023-03-28 23:27:02,927 - mmseg - INFO - Iter [8950/10000]	lr: 1.317e-03, eta: 0:21:14, time: 1.204, data_time: 0.249, memory: 8511, decode.loss_ce: 0.0700, decode.acc_seg: 96.0613, aux_0.loss_ce: 0.0749, aux_0.acc_seg: 95.8863, aux_1.loss_ce: 0.0856, aux_1.acc_seg: 95.2842, aux_2.loss_ce: 0.1254, aux_2.loss_dice: 0.2597, aux_2.acc_seg: 95.8409, aux_3.loss_ce: 0.1797, aux_3.acc_seg: 94.8204, loss: 0.7953
2023-03-28 23:28:05,154 - mmseg - INFO - Saving checkpoint at 9000 iterations
2023-03-28 23:28:05,422 - mmseg - INFO - Exp name: stdc1-entext_2x12_720x960_10k_camvid.py
2023-03-28 23:28:05,422 - mmseg - INFO - Iter [9000/10000]	lr: 1.261e-03, eta: 0:20:14, time: 1.252, data_time: 0.303, memory: 8511, decode.loss_ce: 0.0713, decode.acc_seg: 96.0197, aux_0.loss_ce: 0.0758, aux_0.acc_seg: 95.8691, aux_1.loss_ce: 0.0862, aux_1.acc_seg: 95.2561, aux_2.loss_ce: 0.1247, aux_2.loss_dice: 0.2614, aux_2.acc_seg: 95.8819, aux_3.loss_ce: 0.1851, aux_3.acc_seg: 94.7980, loss: 0.8046
2023-03-28 23:28:10,681 - mmseg - INFO - per class results:
2023-03-28 23:28:10,683 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 82.37 | 89.64 |
|   Building  | 92.49 | 94.51 |
|     Car     | 91.71 | 95.43 |
| Column_Pole | 14.31 | 15.85 |
|    Fence    | 81.43 | 94.32 |
|  Pedestrian | 58.63 | 78.35 |
|     Road    | 97.29 | 98.15 |
|   Sidewalk  | 91.09 | 97.08 |
|  SignSymbol |  0.1  |  0.1  |
|     Sky     | 93.86 | 96.67 |
|     Tree    |  91.2 | 98.11 |
+-------------+-------+-------+
2023-03-28 23:28:10,683 - mmseg - INFO - Summary:
2023-03-28 23:28:10,683 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 95.87 | 72.23 | 78.02 |
+-------+-------+-------+
2023-03-28 23:28:10,683 - mmseg - INFO - Exp name: stdc1-entext_2x12_720x960_10k_camvid.py
2023-03-28 23:28:10,684 - mmseg - INFO - Iter(val) [51]	aAcc: 0.9587, mIoU: 0.7223, mAcc: 0.7802, IoU.Bicyclist: 0.8237, IoU.Building: 0.9249, IoU.Car: 0.9171, IoU.Column_Pole: 0.1431, IoU.Fence: 0.8143, IoU.Pedestrian: 0.5863, IoU.Road: 0.9729, IoU.Sidewalk: 0.9109, IoU.SignSymbol: 0.0010, IoU.Sky: 0.9386, IoU.Tree: 0.9120, Acc.Bicyclist: 0.8964, Acc.Building: 0.9451, Acc.Car: 0.9543, Acc.Column_Pole: 0.1585, Acc.Fence: 0.9432, Acc.Pedestrian: 0.7835, Acc.Road: 0.9815, Acc.Sidewalk: 0.9708, Acc.SignSymbol: 0.0010, Acc.Sky: 0.9667, Acc.Tree: 0.9811
2023-03-28 23:29:17,087 - mmseg - INFO - Iter [9050/10000]	lr: 1.204e-03, eta: 0:19:14, time: 1.433, data_time: 0.476, memory: 8511, decode.loss_ce: 0.0719, decode.acc_seg: 96.0373, aux_0.loss_ce: 0.0765, aux_0.acc_seg: 95.8848, aux_1.loss_ce: 0.0881, aux_1.acc_seg: 95.2882, aux_2.loss_ce: 0.1263, aux_2.loss_dice: 0.2619, aux_2.acc_seg: 95.8099, aux_3.loss_ce: 0.1882, aux_3.acc_seg: 94.8309, loss: 0.8129
2023-03-28 23:30:14,244 - mmseg - INFO - Iter [9100/10000]	lr: 1.147e-03, eta: 0:18:13, time: 1.142, data_time: 0.248, memory: 8511, decode.loss_ce: 0.0698, decode.acc_seg: 96.0874, aux_0.loss_ce: 0.0747, aux_0.acc_seg: 95.9148, aux_1.loss_ce: 0.0854, aux_1.acc_seg: 95.3003, aux_2.loss_ce: 0.1250, aux_2.loss_dice: 0.2598, aux_2.acc_seg: 95.8311, aux_3.loss_ce: 0.1782, aux_3.acc_seg: 94.8438, loss: 0.7929
2023-03-28 23:31:16,184 - mmseg - INFO - Iter [9150/10000]	lr: 1.090e-03, eta: 0:17:12, time: 1.239, data_time: 0.267, memory: 8511, decode.loss_ce: 0.0694, decode.acc_seg: 96.0763, aux_0.loss_ce: 0.0733, aux_0.acc_seg: 95.9401, aux_1.loss_ce: 0.0844, aux_1.acc_seg: 95.3360, aux_2.loss_ce: 0.1245, aux_2.loss_dice: 0.2605, aux_2.acc_seg: 95.8880, aux_3.loss_ce: 0.1782, aux_3.acc_seg: 94.8552, loss: 0.7902
2023-03-28 23:32:15,472 - mmseg - INFO - Iter [9200/10000]	lr: 1.032e-03, eta: 0:16:11, time: 1.186, data_time: 0.317, memory: 8511, decode.loss_ce: 0.0715, decode.acc_seg: 96.1042, aux_0.loss_ce: 0.0747, aux_0.acc_seg: 95.9580, aux_1.loss_ce: 0.0872, aux_1.acc_seg: 95.3084, aux_2.loss_ce: 0.1251, aux_2.loss_dice: 0.2602, aux_2.acc_seg: 95.8571, aux_3.loss_ce: 0.1823, aux_3.acc_seg: 94.8539, loss: 0.8011
2023-03-28 23:33:13,919 - mmseg - INFO - Iter [9250/10000]	lr: 9.738e-04, eta: 0:15:11, time: 1.169, data_time: 0.250, memory: 8511, decode.loss_ce: 0.0695, decode.acc_seg: 96.1056, aux_0.loss_ce: 0.0737, aux_0.acc_seg: 95.9571, aux_1.loss_ce: 0.0852, aux_1.acc_seg: 95.3480, aux_2.loss_ce: 0.1242, aux_2.loss_dice: 0.2601, aux_2.acc_seg: 95.8828, aux_3.loss_ce: 0.1747, aux_3.acc_seg: 94.8697, loss: 0.7875
2023-03-28 23:34:18,426 - mmseg - INFO - Iter [9300/10000]	lr: 9.153e-04, eta: 0:14:10, time: 1.290, data_time: 0.291, memory: 8511, decode.loss_ce: 0.0687, decode.acc_seg: 96.1447, aux_0.loss_ce: 0.0728, aux_0.acc_seg: 96.0052, aux_1.loss_ce: 0.0848, aux_1.acc_seg: 95.3784, aux_2.loss_ce: 0.1243, aux_2.loss_dice: 0.2605, aux_2.acc_seg: 95.9015, aux_3.loss_ce: 0.1763, aux_3.acc_seg: 94.9120, loss: 0.7875
2023-03-28 23:35:17,535 - mmseg - INFO - Iter [9350/10000]	lr: 8.564e-04, eta: 0:13:09, time: 1.182, data_time: 0.320, memory: 8511, decode.loss_ce: 0.0706, decode.acc_seg: 96.0687, aux_0.loss_ce: 0.0751, aux_0.acc_seg: 95.9150, aux_1.loss_ce: 0.0867, aux_1.acc_seg: 95.2843, aux_2.loss_ce: 0.1244, aux_2.loss_dice: 0.2606, aux_2.acc_seg: 95.8748, aux_3.loss_ce: 0.1795, aux_3.acc_seg: 94.8530, loss: 0.7969
2023-03-28 23:36:15,431 - mmseg - INFO - Iter [9400/10000]	lr: 7.971e-04, eta: 0:12:08, time: 1.158, data_time: 0.269, memory: 8511, decode.loss_ce: 0.0708, decode.acc_seg: 96.0716, aux_0.loss_ce: 0.0751, aux_0.acc_seg: 95.9079, aux_1.loss_ce: 0.0870, aux_1.acc_seg: 95.2998, aux_2.loss_ce: 0.1263, aux_2.loss_dice: 0.2621, aux_2.acc_seg: 95.8231, aux_3.loss_ce: 0.1829, aux_3.acc_seg: 94.8229, loss: 0.8042
2023-03-28 23:37:17,900 - mmseg - INFO - Iter [9450/10000]	lr: 7.372e-04, eta: 0:11:08, time: 1.249, data_time: 0.263, memory: 8511, decode.loss_ce: 0.0718, decode.acc_seg: 96.0283, aux_0.loss_ce: 0.0755, aux_0.acc_seg: 95.8882, aux_1.loss_ce: 0.0878, aux_1.acc_seg: 95.2674, aux_2.loss_ce: 0.1266, aux_2.loss_dice: 0.2617, aux_2.acc_seg: 95.8166, aux_3.loss_ce: 0.1886, aux_3.acc_seg: 94.8074, loss: 0.8121
2023-03-28 23:38:18,814 - mmseg - INFO - Iter [9500/10000]	lr: 6.768e-04, eta: 0:10:07, time: 1.220, data_time: 0.331, memory: 8511, decode.loss_ce: 0.0719, decode.acc_seg: 95.9974, aux_0.loss_ce: 0.0752, aux_0.acc_seg: 95.8463, aux_1.loss_ce: 0.0885, aux_1.acc_seg: 95.1999, aux_2.loss_ce: 0.1249, aux_2.loss_dice: 0.2610, aux_2.acc_seg: 95.8853, aux_3.loss_ce: 0.1851, aux_3.acc_seg: 94.7189, loss: 0.8064
2023-03-28 23:39:15,280 - mmseg - INFO - Iter [9550/10000]	lr: 6.158e-04, eta: 0:09:06, time: 1.128, data_time: 0.250, memory: 8511, decode.loss_ce: 0.0705, decode.acc_seg: 96.1135, aux_0.loss_ce: 0.0735, aux_0.acc_seg: 95.9751, aux_1.loss_ce: 0.0856, aux_1.acc_seg: 95.3623, aux_2.loss_ce: 0.1256, aux_2.loss_dice: 0.2619, aux_2.acc_seg: 95.8564, aux_3.loss_ce: 0.1863, aux_3.acc_seg: 94.8669, loss: 0.8034
2023-03-28 23:40:19,721 - mmseg - INFO - Iter [9600/10000]	lr: 5.541e-04, eta: 0:08:05, time: 1.289, data_time: 0.278, memory: 8511, decode.loss_ce: 0.0707, decode.acc_seg: 96.0805, aux_0.loss_ce: 0.0751, aux_0.acc_seg: 95.9221, aux_1.loss_ce: 0.0863, aux_1.acc_seg: 95.2861, aux_2.loss_ce: 0.1254, aux_2.loss_dice: 0.2612, aux_2.acc_seg: 95.8518, aux_3.loss_ce: 0.1822, aux_3.acc_seg: 94.8294, loss: 0.8010
2023-03-28 23:41:22,466 - mmseg - INFO - Iter [9650/10000]	lr: 4.916e-04, eta: 0:07:05, time: 1.256, data_time: 0.319, memory: 8511, decode.loss_ce: 0.0690, decode.acc_seg: 96.0868, aux_0.loss_ce: 0.0734, aux_0.acc_seg: 95.9445, aux_1.loss_ce: 0.0846, aux_1.acc_seg: 95.3208, aux_2.loss_ce: 0.1242, aux_2.loss_dice: 0.2600, aux_2.acc_seg: 95.9020, aux_3.loss_ce: 0.1782, aux_3.acc_seg: 94.8381, loss: 0.7893
2023-03-28 23:42:19,254 - mmseg - INFO - Iter [9700/10000]	lr: 4.282e-04, eta: 0:06:04, time: 1.134, data_time: 0.256, memory: 8511, decode.loss_ce: 0.0697, decode.acc_seg: 96.0764, aux_0.loss_ce: 0.0741, aux_0.acc_seg: 95.9182, aux_1.loss_ce: 0.0860, aux_1.acc_seg: 95.2791, aux_2.loss_ce: 0.1249, aux_2.loss_dice: 0.2605, aux_2.acc_seg: 95.8457, aux_3.loss_ce: 0.1768, aux_3.acc_seg: 94.8483, loss: 0.7919
2023-03-28 23:43:22,491 - mmseg - INFO - Iter [9750/10000]	lr: 3.638e-04, eta: 0:05:03, time: 1.265, data_time: 0.272, memory: 8511, decode.loss_ce: 0.0698, decode.acc_seg: 96.0884, aux_0.loss_ce: 0.0737, aux_0.acc_seg: 95.9434, aux_1.loss_ce: 0.0861, aux_1.acc_seg: 95.3276, aux_2.loss_ce: 0.1242, aux_2.loss_dice: 0.2615, aux_2.acc_seg: 95.9160, aux_3.loss_ce: 0.1815, aux_3.acc_seg: 94.8719, loss: 0.7969
2023-03-28 23:44:23,409 - mmseg - INFO - Iter [9800/10000]	lr: 2.981e-04, eta: 0:04:02, time: 1.218, data_time: 0.325, memory: 8511, decode.loss_ce: 0.0695, decode.acc_seg: 96.1568, aux_0.loss_ce: 0.0728, aux_0.acc_seg: 96.0185, aux_1.loss_ce: 0.0857, aux_1.acc_seg: 95.3922, aux_2.loss_ce: 0.1243, aux_2.loss_dice: 0.2600, aux_2.acc_seg: 95.8848, aux_3.loss_ce: 0.1811, aux_3.acc_seg: 94.9333, loss: 0.7935
2023-03-28 23:45:19,776 - mmseg - INFO - Iter [9850/10000]	lr: 2.306e-04, eta: 0:03:02, time: 1.127, data_time: 0.256, memory: 8511, decode.loss_ce: 0.0695, decode.acc_seg: 96.1223, aux_0.loss_ce: 0.0730, aux_0.acc_seg: 95.9865, aux_1.loss_ce: 0.0849, aux_1.acc_seg: 95.3678, aux_2.loss_ce: 0.1252, aux_2.loss_dice: 0.2614, aux_2.acc_seg: 95.8676, aux_3.loss_ce: 0.1808, aux_3.acc_seg: 94.8991, loss: 0.7949
2023-03-28 23:46:23,364 - mmseg - INFO - Iter [9900/10000]	lr: 1.609e-04, eta: 0:02:01, time: 1.272, data_time: 0.273, memory: 8511, decode.loss_ce: 0.0707, decode.acc_seg: 96.1225, aux_0.loss_ce: 0.0737, aux_0.acc_seg: 95.9892, aux_1.loss_ce: 0.0859, aux_1.acc_seg: 95.3607, aux_2.loss_ce: 0.1253, aux_2.loss_dice: 0.2608, aux_2.acc_seg: 95.8573, aux_3.loss_ce: 0.1868, aux_3.acc_seg: 94.9141, loss: 0.8031
2023-03-28 23:47:22,946 - mmseg - INFO - Iter [9950/10000]	lr: 8.745e-05, eta: 0:01:00, time: 1.191, data_time: 0.305, memory: 8511, decode.loss_ce: 0.0697, decode.acc_seg: 96.0593, aux_0.loss_ce: 0.0736, aux_0.acc_seg: 95.9031, aux_1.loss_ce: 0.0853, aux_1.acc_seg: 95.2749, aux_2.loss_ce: 0.1245, aux_2.loss_dice: 0.2605, aux_2.acc_seg: 95.8812, aux_3.loss_ce: 0.1806, aux_3.acc_seg: 94.7989, loss: 0.7942
2023-03-28 23:48:20,007 - mmseg - INFO - Saving checkpoint at 10000 iterations
2023-03-28 23:48:20,324 - mmseg - INFO - Exp name: stdc1-entext_2x12_720x960_10k_camvid.py
2023-03-28 23:48:20,324 - mmseg - INFO - Iter [10000/10000]	lr: 3.512e-06, eta: 0:00:00, time: 1.150, data_time: 0.260, memory: 8511, decode.loss_ce: 0.0691, decode.acc_seg: 96.1167, aux_0.loss_ce: 0.0732, aux_0.acc_seg: 95.9839, aux_1.loss_ce: 0.0841, aux_1.acc_seg: 95.3667, aux_2.loss_ce: 0.1253, aux_2.loss_dice: 0.2608, aux_2.acc_seg: 95.8459, aux_3.loss_ce: 0.1817, aux_3.acc_seg: 94.8863, loss: 0.7943
2023-03-28 23:48:23,844 - mmseg - INFO - per class results:
2023-03-28 23:48:23,845 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 82.87 | 91.26 |
|   Building  | 92.22 | 94.27 |
|     Car     | 91.99 | 95.55 |
| Column_Pole | 13.24 | 14.61 |
|    Fence    | 81.61 | 93.62 |
|  Pedestrian | 57.42 | 78.15 |
|     Road    | 97.25 |  98.0 |
|   Sidewalk  | 90.93 | 97.06 |
|  SignSymbol |  0.0  |  0.0  |
|     Sky     | 93.84 | 96.85 |
|     Tree    | 90.99 | 98.15 |
+-------------+-------+-------+
2023-03-28 23:48:23,846 - mmseg - INFO - Summary:
2023-03-28 23:48:23,846 - mmseg - INFO - 
+------+-------+-------+
| aAcc |  mIoU |  mAcc |
+------+-------+-------+
| 95.8 | 72.03 | 77.96 |
+------+-------+-------+
2023-03-28 23:48:23,846 - mmseg - INFO - Exp name: stdc1-entext_2x12_720x960_10k_camvid.py
2023-03-28 23:48:23,846 - mmseg - INFO - Iter(val) [51]	aAcc: 0.9580, mIoU: 0.7203, mAcc: 0.7796, IoU.Bicyclist: 0.8287, IoU.Building: 0.9222, IoU.Car: 0.9199, IoU.Column_Pole: 0.1324, IoU.Fence: 0.8161, IoU.Pedestrian: 0.5742, IoU.Road: 0.9725, IoU.Sidewalk: 0.9093, IoU.SignSymbol: 0.0000, IoU.Sky: 0.9384, IoU.Tree: 0.9099, Acc.Bicyclist: 0.9126, Acc.Building: 0.9427, Acc.Car: 0.9555, Acc.Column_Pole: 0.1461, Acc.Fence: 0.9362, Acc.Pedestrian: 0.7815, Acc.Road: 0.9800, Acc.Sidewalk: 0.9706, Acc.SignSymbol: 0.0000, Acc.Sky: 0.9685, Acc.Tree: 0.9815
