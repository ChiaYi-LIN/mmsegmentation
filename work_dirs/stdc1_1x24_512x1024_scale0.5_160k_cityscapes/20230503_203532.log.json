{"env_info": "sys.platform: linux\nPython: 3.8.16 (default, Mar  2 2023, 03:21:46) [GCC 11.2.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 3090\nCUDA_HOME: None\nGCC: gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0\nPyTorch: 1.12.1+cu113\nPyTorch compiling details: PyTorch built with:\n  - GCC 9.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.3\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.3.2  (built against CUDA 11.5)\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.13.1+cu113\nOpenCV: 4.7.0\nMMCV: 1.7.0\nMMCV Compiler: GCC 9.3\nMMCV CUDA Compiler: 11.3\nMMSegmentation: 0.30.0+e7ed570", "seed": 142311418, "exp_name": "stdc1_1x24_512x1024_scale0.5_160k_cityscapes.py", "mmseg_version": "0.30.0+e7ed570", "config": "norm_cfg = dict(type='BN', requires_grad=True)\nmodel = dict(\n    type='EncoderDecoder',\n    pretrained=None,\n    backbone=dict(\n        type='STDCContextPathNet',\n        backbone_cfg=dict(\n            type='STDCNet',\n            stdc_type='STDCNet1',\n            in_channels=3,\n            channels=(32, 64, 256, 512, 1024),\n            bottleneck_type='cat',\n            num_convs=4,\n            norm_cfg=dict(type='BN', requires_grad=True),\n            act_cfg=dict(type='ReLU'),\n            with_final_conv=False,\n            init_cfg=dict(\n                type='Pretrained',\n                checkpoint=\n                'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth'\n            )),\n        last_in_channels=(1024, 512),\n        out_channels=128,\n        ffm_cfg=dict(in_channels=384, out_channels=256, scale_factor=4)),\n    decode_head=dict(\n        type='FCNHead',\n        in_channels=256,\n        channels=256,\n        num_convs=1,\n        num_classes=19,\n        in_index=3,\n        concat_input=False,\n        dropout_ratio=0.1,\n        norm_cfg=dict(type='BN', requires_grad=True),\n        align_corners=True,\n        sampler=dict(type='OHEMPixelSampler', thresh=0.7, min_kept=780000),\n        loss_decode=dict(\n            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n    auxiliary_head=[\n        dict(\n            type='FCNHead',\n            in_channels=128,\n            channels=64,\n            num_convs=1,\n            num_classes=19,\n            in_index=2,\n            norm_cfg=dict(type='BN', requires_grad=True),\n            concat_input=False,\n            align_corners=False,\n            sampler=dict(type='OHEMPixelSampler', thresh=0.7, min_kept=780000),\n            loss_decode=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n        dict(\n            type='FCNHead',\n            in_channels=128,\n            channels=64,\n            num_convs=1,\n            num_classes=19,\n            in_index=1,\n            norm_cfg=dict(type='BN', requires_grad=True),\n            concat_input=False,\n            align_corners=False,\n            sampler=dict(type='OHEMPixelSampler', thresh=0.7, min_kept=780000),\n            loss_decode=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),\n        dict(\n            type='STDCHead',\n            in_channels=256,\n            channels=64,\n            num_convs=1,\n            num_classes=2,\n            boundary_threshold=0.1,\n            in_index=0,\n            norm_cfg=dict(type='BN', requires_grad=True),\n            concat_input=False,\n            align_corners=True,\n            loss_decode=[\n                dict(\n                    type='CrossEntropyLoss',\n                    loss_name='loss_ce',\n                    use_sigmoid=True,\n                    loss_weight=1.0),\n                dict(type='DiceLoss', loss_name='loss_dice', loss_weight=1.0)\n            ])\n    ],\n    train_cfg=dict(),\n    test_cfg=dict(mode='whole'))\ndataset_type = 'CityscapesDataset'\ndata_root = 'data/cityscapes/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ncrop_size = (512, 1024)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations'),\n    dict(\n        type='Resize',\n        img_scale=(2048, 1024),\n        ratio_range=(0.125, 1.5),\n        scale_step_size=0.125),\n    dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size=(512, 1024), pad_val=0, seg_pad_val=255),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1024, 512),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=24,\n    workers_per_gpu=4,\n    train=dict(\n        type='CityscapesDataset',\n        data_root='data/cityscapes/',\n        img_dir='leftImg8bit/train',\n        ann_dir='gtFine/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations'),\n            dict(\n                type='Resize',\n                img_scale=(2048, 1024),\n                ratio_range=(0.125, 1.5),\n                scale_step_size=0.125),\n            dict(type='RandomCrop', crop_size=(512, 1024), cat_max_ratio=0.75),\n            dict(type='RandomFlip', prob=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size=(512, 1024), pad_val=0, seg_pad_val=255),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n        ]),\n    val=dict(\n        type='CityscapesDataset',\n        data_root='data/cityscapes/',\n        img_dir='leftImg8bit/val',\n        ann_dir='gtFine/val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CityscapesDataset',\n        data_root='data/cityscapes/',\n        img_dir='leftImg8bit/val',\n        ann_dir='gtFine/val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nlog_config = dict(\n    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\noptimizer = dict(\n    type='SGD',\n    lr=0.05,\n    momentum=0.9,\n    weight_decay=0.0005,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            {\n                'backbone.backbone': dict(lr_mult=0.1),\n                'backbone.text_encoder': dict(lr_mult=0.0, decay_mult=0.0),\n                '.bn.': dict(decay_mult=0.0)\n            })))\noptimizer_config = dict()\nlr_config = dict(\n    policy='poly',\n    power=0.9,\n    min_lr=1e-06,\n    by_epoch=False,\n    warmup='linear',\n    warmup_iters=1000,\n    warmup_ratio=1e-05)\nrunner = dict(type='IterBasedRunner', max_iters=160000)\ncheckpoint_config = dict(by_epoch=False, interval=16000)\nevaluation = dict(interval=16000, metric='mIoU', pre_eval=True)\ncheckpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth'\nwork_dir = './work_dirs/stdc1_1x24_512x1024_scale0.5_160k_cityscapes'\ngpu_ids = [0]\nauto_resume = False\ndevice = 'cuda'\nseed = 142311418\n", "CLASSES": ["road", "sidewalk", "building", "wall", "fence", "pole", "traffic light", "traffic sign", "vegetation", "terrain", "sky", "person", "rider", "car", "truck", "bus", "train", "motorcycle", "bicycle"], "PALETTE": [[128, 64, 128], [244, 35, 232], [70, 70, 70], [102, 102, 156], [190, 153, 153], [153, 153, 153], [250, 170, 30], [220, 220, 0], [107, 142, 35], [152, 251, 152], [70, 130, 180], [220, 20, 60], [255, 0, 0], [0, 0, 142], [0, 0, 70], [0, 60, 100], [0, 80, 100], [0, 0, 230], [119, 11, 32]]}
{"mode": "train", "epoch": 1, "iter": 50, "lr": 0.00024, "memory": 19452, "data_time": 0.43622, "decode.loss_ce": 1.92872, "decode.acc_seg": 31.69111, "aux_0.loss_ce": 2.1293, "aux_0.acc_seg": 17.84768, "aux_1.loss_ce": 2.06631, "aux_1.acc_seg": 19.795, "aux_2.loss_ce": 0.50695, "aux_2.loss_dice": 0.48084, "aux_2.acc_seg": 91.10309, "loss": 7.11212, "time": 1.19409}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 0.00049, "memory": 19452, "data_time": 0.4696, "decode.loss_ce": 1.26055, "decode.acc_seg": 53.44502, "aux_0.loss_ce": 1.38638, "aux_0.acc_seg": 50.78673, "aux_1.loss_ce": 1.43472, "aux_1.acc_seg": 46.87008, "aux_2.loss_ce": 0.24194, "aux_2.loss_dice": 0.47719, "aux_2.acc_seg": 96.89649, "loss": 4.80078, "time": 0.99286}
{"mode": "train", "epoch": 2, "iter": 150, "lr": 0.00074, "memory": 19452, "data_time": 0.41656, "decode.loss_ce": 0.94352, "decode.acc_seg": 66.07709, "aux_0.loss_ce": 0.93736, "aux_0.acc_seg": 68.1699, "aux_1.loss_ce": 1.00949, "aux_1.acc_seg": 64.47772, "aux_2.loss_ce": 0.17183, "aux_2.loss_dice": 0.47808, "aux_2.acc_seg": 96.88902, "loss": 3.54028, "time": 0.96477}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.00099, "memory": 19452, "data_time": 0.25244, "decode.loss_ce": 0.70894, "decode.acc_seg": 74.80229, "aux_0.loss_ce": 0.72018, "aux_0.acc_seg": 74.90907, "aux_1.loss_ce": 0.77474, "aux_1.acc_seg": 72.25379, "aux_2.loss_ce": 0.16302, "aux_2.loss_dice": 0.3802, "aux_2.acc_seg": 96.96616, "loss": 2.74708, "time": 0.81859}
{"mode": "train", "epoch": 3, "iter": 250, "lr": 0.00124, "memory": 19452, "data_time": 0.33724, "decode.loss_ce": 0.5888, "decode.acc_seg": 78.20411, "aux_0.loss_ce": 0.60518, "aux_0.acc_seg": 78.35577, "aux_1.loss_ce": 0.65387, "aux_1.acc_seg": 76.47417, "aux_2.loss_ce": 0.13084, "aux_2.loss_dice": 0.32995, "aux_2.acc_seg": 97.05742, "loss": 2.30864, "time": 0.89161}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.00149, "memory": 19452, "data_time": 0.25973, "decode.loss_ce": 0.52084, "decode.acc_seg": 80.62431, "aux_0.loss_ce": 0.53787, "aux_0.acc_seg": 80.72124, "aux_1.loss_ce": 0.57822, "aux_1.acc_seg": 78.82837, "aux_2.loss_ce": 0.11691, "aux_2.loss_dice": 0.31152, "aux_2.acc_seg": 97.1529, "loss": 2.06536, "time": 0.80849}
{"mode": "train", "epoch": 3, "iter": 350, "lr": 0.00174, "memory": 19452, "data_time": 0.2826, "decode.loss_ce": 0.47924, "decode.acc_seg": 82.55674, "aux_0.loss_ce": 0.49539, "aux_0.acc_seg": 82.31437, "aux_1.loss_ce": 0.53506, "aux_1.acc_seg": 80.66227, "aux_2.loss_ce": 0.1138, "aux_2.loss_dice": 0.30822, "aux_2.acc_seg": 97.06751, "loss": 1.93171, "time": 0.84961}
{"mode": "train", "epoch": 4, "iter": 400, "lr": 0.00199, "memory": 19452, "data_time": 0.39131, "decode.loss_ce": 0.44036, "decode.acc_seg": 83.66446, "aux_0.loss_ce": 0.45735, "aux_0.acc_seg": 83.27875, "aux_1.loss_ce": 0.49158, "aux_1.acc_seg": 81.85412, "aux_2.loss_ce": 0.10891, "aux_2.loss_dice": 0.30129, "aux_2.acc_seg": 97.13818, "loss": 1.79949, "time": 0.95006}
{"mode": "train", "epoch": 4, "iter": 450, "lr": 0.00224, "memory": 19452, "data_time": 0.31579, "decode.loss_ce": 0.40057, "decode.acc_seg": 84.77202, "aux_0.loss_ce": 0.42057, "aux_0.acc_seg": 84.15952, "aux_1.loss_ce": 0.45382, "aux_1.acc_seg": 82.82787, "aux_2.loss_ce": 0.10711, "aux_2.loss_dice": 0.29627, "aux_2.acc_seg": 97.17043, "loss": 1.67834, "time": 0.88437}
{"mode": "train", "epoch": 5, "iter": 500, "lr": 0.00249, "memory": 19452, "data_time": 0.43126, "decode.loss_ce": 0.37269, "decode.acc_seg": 85.5496, "aux_0.loss_ce": 0.38885, "aux_0.acc_seg": 85.00593, "aux_1.loss_ce": 0.4203, "aux_1.acc_seg": 83.82335, "aux_2.loss_ce": 0.10688, "aux_2.loss_dice": 0.29335, "aux_2.acc_seg": 97.15498, "loss": 1.58207, "time": 0.99311}
{"mode": "train", "epoch": 5, "iter": 550, "lr": 0.00274, "memory": 19452, "data_time": 0.3446, "decode.loss_ce": 0.37134, "decode.acc_seg": 85.60136, "aux_0.loss_ce": 0.38024, "aux_0.acc_seg": 85.30558, "aux_1.loss_ce": 0.41427, "aux_1.acc_seg": 83.99113, "aux_2.loss_ce": 0.10531, "aux_2.loss_dice": 0.29002, "aux_2.acc_seg": 97.20826, "loss": 1.56119, "time": 0.9061}
{"mode": "train", "epoch": 5, "iter": 600, "lr": 0.00298, "memory": 19452, "data_time": 0.32973, "decode.loss_ce": 0.36988, "decode.acc_seg": 85.74387, "aux_0.loss_ce": 0.38013, "aux_0.acc_seg": 85.45628, "aux_1.loss_ce": 0.41433, "aux_1.acc_seg": 84.12626, "aux_2.loss_ce": 0.10746, "aux_2.loss_dice": 0.28952, "aux_2.acc_seg": 97.13376, "loss": 1.56131, "time": 0.89403}
{"mode": "train", "epoch": 6, "iter": 650, "lr": 0.00323, "memory": 19452, "data_time": 0.40352, "decode.loss_ce": 0.33809, "decode.acc_seg": 86.55051, "aux_0.loss_ce": 0.34689, "aux_0.acc_seg": 86.30257, "aux_1.loss_ce": 0.3803, "aux_1.acc_seg": 84.88926, "aux_2.loss_ce": 0.10512, "aux_2.loss_dice": 0.28407, "aux_2.acc_seg": 97.18034, "loss": 1.45447, "time": 0.96909}
{"mode": "train", "epoch": 6, "iter": 700, "lr": 0.00348, "memory": 19452, "data_time": 0.30894, "decode.loss_ce": 0.32023, "decode.acc_seg": 87.41716, "aux_0.loss_ce": 0.33103, "aux_0.acc_seg": 87.08932, "aux_1.loss_ce": 0.36181, "aux_1.acc_seg": 85.84131, "aux_2.loss_ce": 0.10517, "aux_2.loss_dice": 0.28627, "aux_2.acc_seg": 97.18709, "loss": 1.40451, "time": 0.88457}
{"mode": "train", "epoch": 7, "iter": 750, "lr": 0.00373, "memory": 19452, "data_time": 0.42371, "decode.loss_ce": 0.30441, "decode.acc_seg": 87.54598, "aux_0.loss_ce": 0.31341, "aux_0.acc_seg": 87.10146, "aux_1.loss_ce": 0.34486, "aux_1.acc_seg": 85.84996, "aux_2.loss_ce": 0.10186, "aux_2.loss_dice": 0.27894, "aux_2.acc_seg": 97.28986, "loss": 1.34348, "time": 0.98725}
{"mode": "train", "epoch": 7, "iter": 800, "lr": 0.00398, "memory": 19452, "data_time": 0.33285, "decode.loss_ce": 0.29521, "decode.acc_seg": 87.94408, "aux_0.loss_ce": 0.30407, "aux_0.acc_seg": 87.60145, "aux_1.loss_ce": 0.33312, "aux_1.acc_seg": 86.44879, "aux_2.loss_ce": 0.10263, "aux_2.loss_dice": 0.27781, "aux_2.acc_seg": 97.27755, "loss": 1.31285, "time": 0.89662}
{"mode": "train", "epoch": 7, "iter": 850, "lr": 0.00422, "memory": 19452, "data_time": 0.32513, "decode.loss_ce": 0.28055, "decode.acc_seg": 88.47193, "aux_0.loss_ce": 0.28984, "aux_0.acc_seg": 88.1072, "aux_1.loss_ce": 0.31842, "aux_1.acc_seg": 86.89112, "aux_2.loss_ce": 0.10231, "aux_2.loss_dice": 0.27578, "aux_2.acc_seg": 97.25153, "loss": 1.2669, "time": 0.89474}
{"mode": "train", "epoch": 8, "iter": 900, "lr": 0.00447, "memory": 19452, "data_time": 0.41642, "decode.loss_ce": 0.28485, "decode.acc_seg": 88.00781, "aux_0.loss_ce": 0.29496, "aux_0.acc_seg": 87.6546, "aux_1.loss_ce": 0.32272, "aux_1.acc_seg": 86.48995, "aux_2.loss_ce": 0.10301, "aux_2.loss_dice": 0.27661, "aux_2.acc_seg": 97.21985, "loss": 1.28216, "time": 0.9846}
{"mode": "train", "epoch": 8, "iter": 950, "lr": 0.00472, "memory": 19452, "data_time": 0.32779, "decode.loss_ce": 0.29216, "decode.acc_seg": 87.99026, "aux_0.loss_ce": 0.30033, "aux_0.acc_seg": 87.70856, "aux_1.loss_ce": 0.32717, "aux_1.acc_seg": 86.56071, "aux_2.loss_ce": 0.10255, "aux_2.loss_dice": 0.27517, "aux_2.acc_seg": 97.25684, "loss": 1.29738, "time": 0.89767}
{"mode": "train", "epoch": 9, "iter": 1000, "lr": 0.00497, "memory": 19452, "data_time": 0.41211, "decode.loss_ce": 0.28111, "decode.acc_seg": 88.46332, "aux_0.loss_ce": 0.29016, "aux_0.acc_seg": 88.17393, "aux_1.loss_ce": 0.31678, "aux_1.acc_seg": 86.99718, "aux_2.loss_ce": 0.10374, "aux_2.loss_dice": 0.27603, "aux_2.acc_seg": 97.22458, "loss": 1.26782, "time": 0.99401}
{"mode": "train", "epoch": 9, "iter": 1050, "lr": 0.00497, "memory": 19452, "data_time": 0.33663, "decode.loss_ce": 0.29169, "decode.acc_seg": 88.18718, "aux_0.loss_ce": 0.2996, "aux_0.acc_seg": 87.89702, "aux_1.loss_ce": 0.32512, "aux_1.acc_seg": 86.76392, "aux_2.loss_ce": 0.10378, "aux_2.loss_dice": 0.27595, "aux_2.acc_seg": 97.23568, "loss": 1.29614, "time": 0.89427}
{"mode": "train", "epoch": 9, "iter": 1100, "lr": 0.00497, "memory": 19452, "data_time": 0.34581, "decode.loss_ce": 0.2823, "decode.acc_seg": 88.34432, "aux_0.loss_ce": 0.28951, "aux_0.acc_seg": 88.11798, "aux_1.loss_ce": 0.31601, "aux_1.acc_seg": 86.94148, "aux_2.loss_ce": 0.105, "aux_2.loss_dice": 0.27435, "aux_2.acc_seg": 97.18921, "loss": 1.26717, "time": 0.91722}
{"mode": "train", "epoch": 10, "iter": 1150, "lr": 0.00497, "memory": 19452, "data_time": 0.45801, "decode.loss_ce": 0.2628, "decode.acc_seg": 88.62511, "aux_0.loss_ce": 0.27054, "aux_0.acc_seg": 88.33314, "aux_1.loss_ce": 0.29345, "aux_1.acc_seg": 87.19806, "aux_2.loss_ce": 0.10033, "aux_2.loss_dice": 0.26574, "aux_2.acc_seg": 97.33377, "loss": 1.19286, "time": 1.01553}
{"mode": "train", "epoch": 10, "iter": 1200, "lr": 0.00497, "memory": 19452, "data_time": 0.47179, "decode.loss_ce": 0.27339, "decode.acc_seg": 88.81383, "aux_0.loss_ce": 0.28138, "aux_0.acc_seg": 88.56744, "aux_1.loss_ce": 0.30922, "aux_1.acc_seg": 87.32645, "aux_2.loss_ce": 0.10322, "aux_2.loss_dice": 0.27341, "aux_2.acc_seg": 97.25662, "loss": 1.24062, "time": 1.02995}
{"mode": "train", "epoch": 11, "iter": 1250, "lr": 0.00496, "memory": 19452, "data_time": 0.48173, "decode.loss_ce": 0.26603, "decode.acc_seg": 88.88327, "aux_0.loss_ce": 0.27659, "aux_0.acc_seg": 88.52443, "aux_1.loss_ce": 0.30102, "aux_1.acc_seg": 87.33127, "aux_2.loss_ce": 0.10286, "aux_2.loss_dice": 0.27063, "aux_2.acc_seg": 97.25921, "loss": 1.21713, "time": 1.06115}
{"mode": "train", "epoch": 11, "iter": 1300, "lr": 0.00496, "memory": 19452, "data_time": 0.4206, "decode.loss_ce": 0.25874, "decode.acc_seg": 89.21542, "aux_0.loss_ce": 0.26568, "aux_0.acc_seg": 88.98867, "aux_1.loss_ce": 0.29085, "aux_1.acc_seg": 87.86705, "aux_2.loss_ce": 0.10135, "aux_2.loss_dice": 0.26849, "aux_2.acc_seg": 97.27653, "loss": 1.18511, "time": 0.99224}
{"mode": "train", "epoch": 11, "iter": 1350, "lr": 0.00496, "memory": 19452, "data_time": 0.42092, "decode.loss_ce": 0.25799, "decode.acc_seg": 89.26171, "aux_0.loss_ce": 0.26753, "aux_0.acc_seg": 88.88378, "aux_1.loss_ce": 0.29116, "aux_1.acc_seg": 87.84876, "aux_2.loss_ce": 0.10201, "aux_2.loss_dice": 0.26935, "aux_2.acc_seg": 97.26831, "loss": 1.18804, "time": 0.97373}
{"mode": "train", "epoch": 12, "iter": 1400, "lr": 0.00496, "memory": 19452, "data_time": 0.50048, "decode.loss_ce": 0.25192, "decode.acc_seg": 89.18147, "aux_0.loss_ce": 0.25891, "aux_0.acc_seg": 88.97457, "aux_1.loss_ce": 0.28227, "aux_1.acc_seg": 87.88546, "aux_2.loss_ce": 0.10151, "aux_2.loss_dice": 0.26775, "aux_2.acc_seg": 97.27746, "loss": 1.16236, "time": 1.06763}
{"mode": "train", "epoch": 12, "iter": 1450, "lr": 0.00496, "memory": 19452, "data_time": 0.37886, "decode.loss_ce": 0.25141, "decode.acc_seg": 89.3148, "aux_0.loss_ce": 0.25797, "aux_0.acc_seg": 89.12758, "aux_1.loss_ce": 0.28139, "aux_1.acc_seg": 88.0075, "aux_2.loss_ce": 0.10073, "aux_2.loss_dice": 0.26724, "aux_2.acc_seg": 97.32839, "loss": 1.15873, "time": 0.95869}
{"mode": "train", "epoch": 13, "iter": 1500, "lr": 0.00496, "memory": 19452, "data_time": 0.48693, "decode.loss_ce": 0.24005, "decode.acc_seg": 89.87003, "aux_0.loss_ce": 0.24971, "aux_0.acc_seg": 89.53902, "aux_1.loss_ce": 0.2735, "aux_1.acc_seg": 88.46825, "aux_2.loss_ce": 0.10061, "aux_2.loss_dice": 0.26558, "aux_2.acc_seg": 97.30652, "loss": 1.12945, "time": 1.04996}
{"mode": "train", "epoch": 13, "iter": 1550, "lr": 0.00496, "memory": 19452, "data_time": 0.45019, "decode.loss_ce": 0.24671, "decode.acc_seg": 89.85785, "aux_0.loss_ce": 0.2558, "aux_0.acc_seg": 89.59493, "aux_1.loss_ce": 0.28195, "aux_1.acc_seg": 88.36348, "aux_2.loss_ce": 0.10365, "aux_2.loss_dice": 0.27074, "aux_2.acc_seg": 97.21678, "loss": 1.15885, "time": 1.02205}
{"mode": "train", "epoch": 13, "iter": 1600, "lr": 0.00496, "memory": 19452, "data_time": 0.50278, "decode.loss_ce": 0.23489, "decode.acc_seg": 90.12987, "aux_0.loss_ce": 0.24267, "aux_0.acc_seg": 89.87977, "aux_1.loss_ce": 0.26898, "aux_1.acc_seg": 88.79797, "aux_2.loss_ce": 0.10229, "aux_2.loss_dice": 0.26976, "aux_2.acc_seg": 97.25273, "loss": 1.1186, "time": 1.08448}
{"mode": "train", "epoch": 14, "iter": 1650, "lr": 0.00495, "memory": 19452, "data_time": 0.39091, "decode.loss_ce": 0.22896, "decode.acc_seg": 90.1136, "aux_0.loss_ce": 0.23829, "aux_0.acc_seg": 89.81574, "aux_1.loss_ce": 0.26312, "aux_1.acc_seg": 88.66725, "aux_2.loss_ce": 0.09975, "aux_2.loss_dice": 0.26488, "aux_2.acc_seg": 97.34722, "loss": 1.095, "time": 0.96678}
{"mode": "train", "epoch": 14, "iter": 1700, "lr": 0.00495, "memory": 19452, "data_time": 0.42601, "decode.loss_ce": 0.22201, "decode.acc_seg": 90.4309, "aux_0.loss_ce": 0.2299, "aux_0.acc_seg": 90.16712, "aux_1.loss_ce": 0.25522, "aux_1.acc_seg": 89.03694, "aux_2.loss_ce": 0.10196, "aux_2.loss_dice": 0.26571, "aux_2.acc_seg": 97.23129, "loss": 1.07479, "time": 0.99254}
{"mode": "train", "epoch": 15, "iter": 1750, "lr": 0.00495, "memory": 19452, "data_time": 0.53269, "decode.loss_ce": 0.21915, "decode.acc_seg": 90.57887, "aux_0.loss_ce": 0.22764, "aux_0.acc_seg": 90.27206, "aux_1.loss_ce": 0.25264, "aux_1.acc_seg": 89.14528, "aux_2.loss_ce": 0.09976, "aux_2.loss_dice": 0.26424, "aux_2.acc_seg": 97.30841, "loss": 1.06342, "time": 1.09169}
{"mode": "train", "epoch": 15, "iter": 1800, "lr": 0.00495, "memory": 19452, "data_time": 0.41434, "decode.loss_ce": 0.21328, "decode.acc_seg": 90.87032, "aux_0.loss_ce": 0.22099, "aux_0.acc_seg": 90.56985, "aux_1.loss_ce": 0.2446, "aux_1.acc_seg": 89.48492, "aux_2.loss_ce": 0.09998, "aux_2.loss_dice": 0.26314, "aux_2.acc_seg": 97.29703, "loss": 1.042, "time": 0.97213}
{"mode": "train", "epoch": 16, "iter": 1850, "lr": 0.00495, "memory": 19452, "data_time": 0.53248, "decode.loss_ce": 0.2194, "decode.acc_seg": 90.73476, "aux_0.loss_ce": 0.22709, "aux_0.acc_seg": 90.50168, "aux_1.loss_ce": 0.25042, "aux_1.acc_seg": 89.38908, "aux_2.loss_ce": 0.09991, "aux_2.loss_dice": 0.26266, "aux_2.acc_seg": 97.30227, "loss": 1.05948, "time": 1.08883}
{"mode": "train", "epoch": 16, "iter": 1900, "lr": 0.00495, "memory": 19452, "data_time": 0.40294, "decode.loss_ce": 0.22586, "decode.acc_seg": 90.41356, "aux_0.loss_ce": 0.23335, "aux_0.acc_seg": 90.18418, "aux_1.loss_ce": 0.25912, "aux_1.acc_seg": 89.04026, "aux_2.loss_ce": 0.10038, "aux_2.loss_dice": 0.26537, "aux_2.acc_seg": 97.27512, "loss": 1.08409, "time": 0.96803}
{"mode": "train", "epoch": 16, "iter": 1950, "lr": 0.00495, "memory": 19452, "data_time": 0.46537, "decode.loss_ce": 0.22689, "decode.acc_seg": 90.18868, "aux_0.loss_ce": 0.2347, "aux_0.acc_seg": 89.90339, "aux_1.loss_ce": 0.25951, "aux_1.acc_seg": 88.7631, "aux_2.loss_ce": 0.0998, "aux_2.loss_dice": 0.26316, "aux_2.acc_seg": 97.30819, "loss": 1.08407, "time": 1.03925}
{"mode": "train", "epoch": 17, "iter": 2000, "lr": 0.00494, "memory": 19452, "data_time": 0.57979, "decode.loss_ce": 0.22402, "decode.acc_seg": 90.55744, "aux_0.loss_ce": 0.23195, "aux_0.acc_seg": 90.29316, "aux_1.loss_ce": 0.25576, "aux_1.acc_seg": 89.17131, "aux_2.loss_ce": 0.10021, "aux_2.loss_dice": 0.26354, "aux_2.acc_seg": 97.28853, "loss": 1.07549, "time": 1.14375}
{"mode": "train", "epoch": 17, "iter": 2050, "lr": 0.00494, "memory": 19452, "data_time": 0.49955, "decode.loss_ce": 0.2082, "decode.acc_seg": 91.03491, "aux_0.loss_ce": 0.21583, "aux_0.acc_seg": 90.77596, "aux_1.loss_ce": 0.24154, "aux_1.acc_seg": 89.59396, "aux_2.loss_ce": 0.09933, "aux_2.loss_dice": 0.26207, "aux_2.acc_seg": 97.30445, "loss": 1.02697, "time": 1.08579}
{"mode": "train", "epoch": 18, "iter": 2100, "lr": 0.00494, "memory": 19452, "data_time": 0.58109, "decode.loss_ce": 0.2057, "decode.acc_seg": 91.20814, "aux_0.loss_ce": 0.2125, "aux_0.acc_seg": 90.98411, "aux_1.loss_ce": 0.23622, "aux_1.acc_seg": 89.82371, "aux_2.loss_ce": 0.09976, "aux_2.loss_dice": 0.26238, "aux_2.acc_seg": 97.30252, "loss": 1.01656, "time": 1.14244}
{"mode": "train", "epoch": 18, "iter": 2150, "lr": 0.00494, "memory": 19452, "data_time": 0.43158, "decode.loss_ce": 0.21569, "decode.acc_seg": 90.85364, "aux_0.loss_ce": 0.22366, "aux_0.acc_seg": 90.61845, "aux_1.loss_ce": 0.24769, "aux_1.acc_seg": 89.48689, "aux_2.loss_ce": 0.10099, "aux_2.loss_dice": 0.26463, "aux_2.acc_seg": 97.24565, "loss": 1.05266, "time": 1.0088}
{"mode": "train", "epoch": 18, "iter": 2200, "lr": 0.00494, "memory": 19452, "data_time": 0.46316, "decode.loss_ce": 0.20056, "decode.acc_seg": 91.60062, "aux_0.loss_ce": 0.20842, "aux_0.acc_seg": 91.36262, "aux_1.loss_ce": 0.23378, "aux_1.acc_seg": 90.21784, "aux_2.loss_ce": 0.10042, "aux_2.loss_dice": 0.26376, "aux_2.acc_seg": 97.25977, "loss": 1.00694, "time": 1.03176}
{"mode": "train", "epoch": 19, "iter": 2250, "lr": 0.00494, "memory": 19452, "data_time": 0.44371, "decode.loss_ce": 0.20042, "decode.acc_seg": 91.32522, "aux_0.loss_ce": 0.20971, "aux_0.acc_seg": 91.01099, "aux_1.loss_ce": 0.23425, "aux_1.acc_seg": 89.87059, "aux_2.loss_ce": 0.09933, "aux_2.loss_dice": 0.26162, "aux_2.acc_seg": 97.28341, "loss": 1.00533, "time": 1.0112}
{"mode": "train", "epoch": 19, "iter": 2300, "lr": 0.00494, "memory": 19452, "data_time": 0.40279, "decode.loss_ce": 0.20633, "decode.acc_seg": 91.27521, "aux_0.loss_ce": 0.2149, "aux_0.acc_seg": 90.95348, "aux_1.loss_ce": 0.23844, "aux_1.acc_seg": 89.86748, "aux_2.loss_ce": 0.09996, "aux_2.loss_dice": 0.26211, "aux_2.acc_seg": 97.26244, "loss": 1.02174, "time": 0.97079}
{"mode": "train", "epoch": 20, "iter": 2350, "lr": 0.00493, "memory": 19452, "data_time": 0.56621, "decode.loss_ce": 0.20932, "decode.acc_seg": 90.99981, "aux_0.loss_ce": 0.21604, "aux_0.acc_seg": 90.84235, "aux_1.loss_ce": 0.23861, "aux_1.acc_seg": 89.80236, "aux_2.loss_ce": 0.0997, "aux_2.loss_dice": 0.26304, "aux_2.acc_seg": 97.27538, "loss": 1.02671, "time": 1.12197}
{"mode": "train", "epoch": 20, "iter": 2400, "lr": 0.00493, "memory": 19452, "data_time": 0.41846, "decode.loss_ce": 0.20841, "decode.acc_seg": 91.2261, "aux_0.loss_ce": 0.21521, "aux_0.acc_seg": 90.99274, "aux_1.loss_ce": 0.2401, "aux_1.acc_seg": 89.85551, "aux_2.loss_ce": 0.09829, "aux_2.loss_dice": 0.26126, "aux_2.acc_seg": 97.33453, "loss": 1.02327, "time": 0.98906}
{"mode": "train", "epoch": 20, "iter": 2450, "lr": 0.00493, "memory": 19452, "data_time": 0.44329, "decode.loss_ce": 0.20849, "decode.acc_seg": 91.13429, "aux_0.loss_ce": 0.21549, "aux_0.acc_seg": 90.85993, "aux_1.loss_ce": 0.24157, "aux_1.acc_seg": 89.72828, "aux_2.loss_ce": 0.09976, "aux_2.loss_dice": 0.26182, "aux_2.acc_seg": 97.27278, "loss": 1.02715, "time": 1.01807}
{"mode": "train", "epoch": 21, "iter": 2500, "lr": 0.00493, "memory": 19452, "data_time": 0.50321, "decode.loss_ce": 0.19707, "decode.acc_seg": 91.52464, "aux_0.loss_ce": 0.2039, "aux_0.acc_seg": 91.33631, "aux_1.loss_ce": 0.22895, "aux_1.acc_seg": 90.18862, "aux_2.loss_ce": 0.09759, "aux_2.loss_dice": 0.25938, "aux_2.acc_seg": 97.34351, "loss": 0.98689, "time": 1.07186}
{"mode": "train", "epoch": 21, "iter": 2550, "lr": 0.00493, "memory": 19452, "data_time": 0.39785, "decode.loss_ce": 0.20062, "decode.acc_seg": 91.49118, "aux_0.loss_ce": 0.2091, "aux_0.acc_seg": 91.18158, "aux_1.loss_ce": 0.23247, "aux_1.acc_seg": 90.10037, "aux_2.loss_ce": 0.10093, "aux_2.loss_dice": 0.26285, "aux_2.acc_seg": 97.22496, "loss": 1.00596, "time": 0.97492}
{"mode": "train", "epoch": 22, "iter": 2600, "lr": 0.00493, "memory": 19452, "data_time": 0.53672, "decode.loss_ce": 0.20164, "decode.acc_seg": 91.42805, "aux_0.loss_ce": 0.20908, "aux_0.acc_seg": 91.14478, "aux_1.loss_ce": 0.23363, "aux_1.acc_seg": 90.09892, "aux_2.loss_ce": 0.10048, "aux_2.loss_dice": 0.26294, "aux_2.acc_seg": 97.24748, "loss": 1.00777, "time": 1.08479}
{"mode": "train", "epoch": 22, "iter": 2650, "lr": 0.00493, "memory": 19452, "data_time": 0.39696, "decode.loss_ce": 0.19699, "decode.acc_seg": 91.6025, "aux_0.loss_ce": 0.20399, "aux_0.acc_seg": 91.35435, "aux_1.loss_ce": 0.22728, "aux_1.acc_seg": 90.28628, "aux_2.loss_ce": 0.09982, "aux_2.loss_dice": 0.26188, "aux_2.acc_seg": 97.28252, "loss": 0.98996, "time": 0.99107}
{"mode": "train", "epoch": 22, "iter": 2700, "lr": 0.00492, "memory": 19452, "data_time": 0.42148, "decode.loss_ce": 0.19891, "decode.acc_seg": 91.52323, "aux_0.loss_ce": 0.20679, "aux_0.acc_seg": 91.26868, "aux_1.loss_ce": 0.23152, "aux_1.acc_seg": 90.15226, "aux_2.loss_ce": 0.09937, "aux_2.loss_dice": 0.26031, "aux_2.acc_seg": 97.26937, "loss": 0.99691, "time": 1.00578}
{"mode": "train", "epoch": 23, "iter": 2750, "lr": 0.00492, "memory": 19452, "data_time": 0.51916, "decode.loss_ce": 0.20334, "decode.acc_seg": 91.12187, "aux_0.loss_ce": 0.21076, "aux_0.acc_seg": 90.87237, "aux_1.loss_ce": 0.23458, "aux_1.acc_seg": 89.74258, "aux_2.loss_ce": 0.09723, "aux_2.loss_dice": 0.25902, "aux_2.acc_seg": 97.32205, "loss": 1.00494, "time": 1.07634}
{"mode": "train", "epoch": 23, "iter": 2800, "lr": 0.00492, "memory": 19452, "data_time": 0.42693, "decode.loss_ce": 0.19298, "decode.acc_seg": 91.71334, "aux_0.loss_ce": 0.20084, "aux_0.acc_seg": 91.47541, "aux_1.loss_ce": 0.22404, "aux_1.acc_seg": 90.37633, "aux_2.loss_ce": 0.09619, "aux_2.loss_dice": 0.25693, "aux_2.acc_seg": 97.36929, "loss": 0.97098, "time": 0.99067}
{"mode": "train", "epoch": 24, "iter": 2850, "lr": 0.00492, "memory": 19452, "data_time": 0.55245, "decode.loss_ce": 0.19026, "decode.acc_seg": 91.9212, "aux_0.loss_ce": 0.19678, "aux_0.acc_seg": 91.70002, "aux_1.loss_ce": 0.22185, "aux_1.acc_seg": 90.54243, "aux_2.loss_ce": 0.09879, "aux_2.loss_dice": 0.26069, "aux_2.acc_seg": 97.28458, "loss": 0.96837, "time": 1.11305}
{"mode": "train", "epoch": 24, "iter": 2900, "lr": 0.00492, "memory": 19452, "data_time": 0.41198, "decode.loss_ce": 0.19152, "decode.acc_seg": 91.55223, "aux_0.loss_ce": 0.19924, "aux_0.acc_seg": 91.30191, "aux_1.loss_ce": 0.22203, "aux_1.acc_seg": 90.18574, "aux_2.loss_ce": 0.09746, "aux_2.loss_dice": 0.25704, "aux_2.acc_seg": 97.32215, "loss": 0.9673, "time": 0.98305}
{"mode": "train", "epoch": 24, "iter": 2950, "lr": 0.00492, "memory": 19452, "data_time": 0.40623, "decode.loss_ce": 0.19612, "decode.acc_seg": 91.51709, "aux_0.loss_ce": 0.20188, "aux_0.acc_seg": 91.35704, "aux_1.loss_ce": 0.22534, "aux_1.acc_seg": 90.23232, "aux_2.loss_ce": 0.09694, "aux_2.loss_dice": 0.25737, "aux_2.acc_seg": 97.32832, "loss": 0.97765, "time": 0.96188}
{"mode": "train", "epoch": 25, "iter": 3000, "lr": 0.00492, "memory": 19452, "data_time": 0.48015, "decode.loss_ce": 0.19167, "decode.acc_seg": 91.63953, "aux_0.loss_ce": 0.19868, "aux_0.acc_seg": 91.44223, "aux_1.loss_ce": 0.22179, "aux_1.acc_seg": 90.31771, "aux_2.loss_ce": 0.09695, "aux_2.loss_dice": 0.25738, "aux_2.acc_seg": 97.34264, "loss": 0.96647, "time": 1.03952}
{"mode": "train", "epoch": 25, "iter": 3050, "lr": 0.00491, "memory": 19452, "data_time": 0.45037, "decode.loss_ce": 0.18393, "decode.acc_seg": 91.98955, "aux_0.loss_ce": 0.19154, "aux_0.acc_seg": 91.72274, "aux_1.loss_ce": 0.21514, "aux_1.acc_seg": 90.63914, "aux_2.loss_ce": 0.09749, "aux_2.loss_dice": 0.25695, "aux_2.acc_seg": 97.30889, "loss": 0.94506, "time": 1.01398}
{"mode": "train", "epoch": 26, "iter": 3100, "lr": 0.00491, "memory": 19452, "data_time": 0.4978, "decode.loss_ce": 0.19302, "decode.acc_seg": 91.54022, "aux_0.loss_ce": 0.20252, "aux_0.acc_seg": 91.17659, "aux_1.loss_ce": 0.22356, "aux_1.acc_seg": 90.2056, "aux_2.loss_ce": 0.09686, "aux_2.loss_dice": 0.25616, "aux_2.acc_seg": 97.32303, "loss": 0.97212, "time": 1.0675}
{"mode": "train", "epoch": 26, "iter": 3150, "lr": 0.00491, "memory": 19452, "data_time": 0.424, "decode.loss_ce": 0.183, "decode.acc_seg": 92.03939, "aux_0.loss_ce": 0.19149, "aux_0.acc_seg": 91.75652, "aux_1.loss_ce": 0.21543, "aux_1.acc_seg": 90.63389, "aux_2.loss_ce": 0.09848, "aux_2.loss_dice": 0.25646, "aux_2.acc_seg": 97.27679, "loss": 0.94486, "time": 0.99353}
{"mode": "train", "epoch": 27, "iter": 3200, "lr": 0.00491, "memory": 19452, "data_time": 0.56468, "decode.loss_ce": 0.18116, "decode.acc_seg": 92.13347, "aux_0.loss_ce": 0.18845, "aux_0.acc_seg": 91.88208, "aux_1.loss_ce": 0.21369, "aux_1.acc_seg": 90.7222, "aux_2.loss_ce": 0.0989, "aux_2.loss_dice": 0.25965, "aux_2.acc_seg": 97.26019, "loss": 0.94186, "time": 1.13432}
{"mode": "train", "epoch": 27, "iter": 3250, "lr": 0.00491, "memory": 19452, "data_time": 0.38414, "decode.loss_ce": 0.1914, "decode.acc_seg": 91.91025, "aux_0.loss_ce": 0.19872, "aux_0.acc_seg": 91.67929, "aux_1.loss_ce": 0.22197, "aux_1.acc_seg": 90.62202, "aux_2.loss_ce": 0.09796, "aux_2.loss_dice": 0.25914, "aux_2.acc_seg": 97.28993, "loss": 0.96919, "time": 0.97829}
{"mode": "train", "epoch": 27, "iter": 3300, "lr": 0.00491, "memory": 19452, "data_time": 0.43775, "decode.loss_ce": 0.18366, "decode.acc_seg": 92.0451, "aux_0.loss_ce": 0.19152, "aux_0.acc_seg": 91.81062, "aux_1.loss_ce": 0.21446, "aux_1.acc_seg": 90.71326, "aux_2.loss_ce": 0.09857, "aux_2.loss_dice": 0.25893, "aux_2.acc_seg": 97.28557, "loss": 0.94715, "time": 1.0179}
{"mode": "train", "epoch": 28, "iter": 3350, "lr": 0.00491, "memory": 19452, "data_time": 0.49076, "decode.loss_ce": 0.17698, "decode.acc_seg": 92.15109, "aux_0.loss_ce": 0.18428, "aux_0.acc_seg": 91.86553, "aux_1.loss_ce": 0.20767, "aux_1.acc_seg": 90.76828, "aux_2.loss_ce": 0.09694, "aux_2.loss_dice": 0.25572, "aux_2.acc_seg": 97.31836, "loss": 0.9216, "time": 1.05692}
{"mode": "train", "epoch": 28, "iter": 3400, "lr": 0.0049, "memory": 19452, "data_time": 0.42272, "decode.loss_ce": 0.1861, "decode.acc_seg": 91.83432, "aux_0.loss_ce": 0.19404, "aux_0.acc_seg": 91.55, "aux_1.loss_ce": 0.21629, "aux_1.acc_seg": 90.49278, "aux_2.loss_ce": 0.09636, "aux_2.loss_dice": 0.25536, "aux_2.acc_seg": 97.33902, "loss": 0.94815, "time": 0.98955}
{"mode": "train", "epoch": 29, "iter": 3450, "lr": 0.0049, "memory": 19452, "data_time": 0.5088, "decode.loss_ce": 0.18555, "decode.acc_seg": 91.84423, "aux_0.loss_ce": 0.19273, "aux_0.acc_seg": 91.64704, "aux_1.loss_ce": 0.2169, "aux_1.acc_seg": 90.5224, "aux_2.loss_ce": 0.09725, "aux_2.loss_dice": 0.25482, "aux_2.acc_seg": 97.29667, "loss": 0.94725, "time": 1.07265}
{"mode": "train", "epoch": 29, "iter": 3500, "lr": 0.0049, "memory": 19452, "data_time": 0.42614, "decode.loss_ce": 0.17958, "decode.acc_seg": 92.20745, "aux_0.loss_ce": 0.18739, "aux_0.acc_seg": 91.95369, "aux_1.loss_ce": 0.2082, "aux_1.acc_seg": 90.96256, "aux_2.loss_ce": 0.0971, "aux_2.loss_dice": 0.25655, "aux_2.acc_seg": 97.31607, "loss": 0.92882, "time": 0.98601}
{"mode": "train", "epoch": 29, "iter": 3550, "lr": 0.0049, "memory": 19452, "data_time": 0.43957, "decode.loss_ce": 0.17935, "decode.acc_seg": 92.21066, "aux_0.loss_ce": 0.18705, "aux_0.acc_seg": 91.98915, "aux_1.loss_ce": 0.21085, "aux_1.acc_seg": 90.87652, "aux_2.loss_ce": 0.09841, "aux_2.loss_dice": 0.25674, "aux_2.acc_seg": 97.2804, "loss": 0.9324, "time": 0.99453}
{"mode": "train", "epoch": 30, "iter": 3600, "lr": 0.0049, "memory": 19452, "data_time": 0.48296, "decode.loss_ce": 0.18382, "decode.acc_seg": 91.96796, "aux_0.loss_ce": 0.1902, "aux_0.acc_seg": 91.77886, "aux_1.loss_ce": 0.21219, "aux_1.acc_seg": 90.74536, "aux_2.loss_ce": 0.09662, "aux_2.loss_dice": 0.25676, "aux_2.acc_seg": 97.30678, "loss": 0.93959, "time": 1.0421}
{"mode": "train", "epoch": 30, "iter": 3650, "lr": 0.0049, "memory": 19452, "data_time": 0.41368, "decode.loss_ce": 0.18122, "decode.acc_seg": 92.04343, "aux_0.loss_ce": 0.18718, "aux_0.acc_seg": 91.83385, "aux_1.loss_ce": 0.21081, "aux_1.acc_seg": 90.69989, "aux_2.loss_ce": 0.09561, "aux_2.loss_dice": 0.25425, "aux_2.acc_seg": 97.34871, "loss": 0.92907, "time": 0.96818}
{"mode": "train", "epoch": 31, "iter": 3700, "lr": 0.0049, "memory": 19452, "data_time": 0.57258, "decode.loss_ce": 0.1742, "decode.acc_seg": 92.47036, "aux_0.loss_ce": 0.18249, "aux_0.acc_seg": 92.22572, "aux_1.loss_ce": 0.20577, "aux_1.acc_seg": 91.13868, "aux_2.loss_ce": 0.0958, "aux_2.loss_dice": 0.25591, "aux_2.acc_seg": 97.35534, "loss": 0.91417, "time": 1.12171}
{"mode": "train", "epoch": 31, "iter": 3750, "lr": 0.00489, "memory": 19452, "data_time": 0.507, "decode.loss_ce": 0.18666, "decode.acc_seg": 91.99202, "aux_0.loss_ce": 0.19497, "aux_0.acc_seg": 91.74011, "aux_1.loss_ce": 0.21649, "aux_1.acc_seg": 90.65659, "aux_2.loss_ce": 0.09777, "aux_2.loss_dice": 0.25643, "aux_2.acc_seg": 97.29315, "loss": 0.95231, "time": 1.06582}
{"mode": "train", "epoch": 31, "iter": 3800, "lr": 0.00489, "memory": 19452, "data_time": 0.4328, "decode.loss_ce": 0.17664, "decode.acc_seg": 92.3454, "aux_0.loss_ce": 0.18293, "aux_0.acc_seg": 92.1726, "aux_1.loss_ce": 0.20598, "aux_1.acc_seg": 91.08733, "aux_2.loss_ce": 0.09654, "aux_2.loss_dice": 0.25408, "aux_2.acc_seg": 97.31899, "loss": 0.91618, "time": 1.00066}
{"mode": "train", "epoch": 32, "iter": 3850, "lr": 0.00489, "memory": 19452, "data_time": 0.55921, "decode.loss_ce": 0.17361, "decode.acc_seg": 92.52357, "aux_0.loss_ce": 0.18136, "aux_0.acc_seg": 92.26632, "aux_1.loss_ce": 0.20487, "aux_1.acc_seg": 91.20128, "aux_2.loss_ce": 0.09829, "aux_2.loss_dice": 0.25737, "aux_2.acc_seg": 97.26656, "loss": 0.91549, "time": 1.124}
{"mode": "train", "epoch": 32, "iter": 3900, "lr": 0.00489, "memory": 19452, "data_time": 0.4993, "decode.loss_ce": 0.17768, "decode.acc_seg": 92.27112, "aux_0.loss_ce": 0.18368, "aux_0.acc_seg": 92.10235, "aux_1.loss_ce": 0.20909, "aux_1.acc_seg": 90.94707, "aux_2.loss_ce": 0.09895, "aux_2.loss_dice": 0.2582, "aux_2.acc_seg": 97.2441, "loss": 0.92759, "time": 1.05914}
{"mode": "train", "epoch": 33, "iter": 3950, "lr": 0.00489, "memory": 19452, "data_time": 0.54218, "decode.loss_ce": 0.17345, "decode.acc_seg": 92.58217, "aux_0.loss_ce": 0.17952, "aux_0.acc_seg": 92.36271, "aux_1.loss_ce": 0.20484, "aux_1.acc_seg": 91.24033, "aux_2.loss_ce": 0.09593, "aux_2.loss_dice": 0.25457, "aux_2.acc_seg": 97.33492, "loss": 0.90831, "time": 1.09241}
{"mode": "train", "epoch": 33, "iter": 4000, "lr": 0.00489, "memory": 19452, "data_time": 0.3838, "decode.loss_ce": 0.16631, "decode.acc_seg": 92.71278, "aux_0.loss_ce": 0.17314, "aux_0.acc_seg": 92.477, "aux_1.loss_ce": 0.19601, "aux_1.acc_seg": 91.42152, "aux_2.loss_ce": 0.09606, "aux_2.loss_dice": 0.25378, "aux_2.acc_seg": 97.31071, "loss": 0.88531, "time": 0.93514}
{"mode": "train", "epoch": 33, "iter": 4050, "lr": 0.00489, "memory": 19452, "data_time": 0.48169, "decode.loss_ce": 0.1809, "decode.acc_seg": 92.11689, "aux_0.loss_ce": 0.18691, "aux_0.acc_seg": 91.96818, "aux_1.loss_ce": 0.20999, "aux_1.acc_seg": 90.85088, "aux_2.loss_ce": 0.09762, "aux_2.loss_dice": 0.25569, "aux_2.acc_seg": 97.2508, "loss": 0.93111, "time": 1.03967}
{"mode": "train", "epoch": 34, "iter": 4100, "lr": 0.00488, "memory": 19452, "data_time": 0.54851, "decode.loss_ce": 0.17247, "decode.acc_seg": 92.50146, "aux_0.loss_ce": 0.17956, "aux_0.acc_seg": 92.29513, "aux_1.loss_ce": 0.20258, "aux_1.acc_seg": 91.19226, "aux_2.loss_ce": 0.09671, "aux_2.loss_dice": 0.25425, "aux_2.acc_seg": 97.28129, "loss": 0.90557, "time": 1.1094}
{"mode": "train", "epoch": 34, "iter": 4150, "lr": 0.00488, "memory": 19452, "data_time": 0.43592, "decode.loss_ce": 0.18171, "decode.acc_seg": 92.31008, "aux_0.loss_ce": 0.188, "aux_0.acc_seg": 92.13224, "aux_1.loss_ce": 0.21117, "aux_1.acc_seg": 91.03122, "aux_2.loss_ce": 0.09811, "aux_2.loss_dice": 0.25786, "aux_2.acc_seg": 97.28473, "loss": 0.93686, "time": 1.00169}
{"mode": "train", "epoch": 35, "iter": 4200, "lr": 0.00488, "memory": 19452, "data_time": 0.54873, "decode.loss_ce": 0.17299, "decode.acc_seg": 92.48243, "aux_0.loss_ce": 0.18068, "aux_0.acc_seg": 92.24084, "aux_1.loss_ce": 0.20278, "aux_1.acc_seg": 91.16588, "aux_2.loss_ce": 0.09585, "aux_2.loss_dice": 0.25248, "aux_2.acc_seg": 97.29853, "loss": 0.90478, "time": 1.1072}
{"mode": "train", "epoch": 35, "iter": 4250, "lr": 0.00488, "memory": 19452, "data_time": 0.40807, "decode.loss_ce": 0.18175, "decode.acc_seg": 92.19717, "aux_0.loss_ce": 0.18822, "aux_0.acc_seg": 91.9848, "aux_1.loss_ce": 0.21165, "aux_1.acc_seg": 90.88439, "aux_2.loss_ce": 0.09787, "aux_2.loss_dice": 0.25602, "aux_2.acc_seg": 97.28104, "loss": 0.93551, "time": 0.97129}
