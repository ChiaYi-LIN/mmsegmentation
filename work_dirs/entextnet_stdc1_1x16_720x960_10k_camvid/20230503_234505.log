2023-05-03 23:45:05,882 - mmseg - INFO - Multi-processing start method is `None`
2023-05-03 23:45:05,883 - mmseg - INFO - OpenCV num_threads is `96
2023-05-03 23:45:05,936 - mmseg - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.16 (default, Mar  2 2023, 03:21:46) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 3090
CUDA_HOME: None
GCC: gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
PyTorch: 1.12.1+cu113
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.13.1+cu113
OpenCV: 4.7.0
MMCV: 1.7.0
MMCV Compiler: GCC 9.3
MMCV CUDA Compiler: 11.3
MMSegmentation: 0.30.0+e7ed570
------------------------------------------------------------

2023-05-03 23:45:05,937 - mmseg - INFO - Distributed training: False
2023-05-03 23:45:06,893 - mmseg - INFO - Config:
norm_cfg = dict(type='BN', requires_grad=True)
model = dict(
    type='EncoderDecoder',
    pretrained=None,
    backbone=dict(
        type='STDCEnTextNet',
        backbone_cfg=dict(
            type='STDCNet',
            stdc_type='STDCNet1',
            in_channels=3,
            channels=(32, 64, 256, 512, 1024),
            bottleneck_type='cat',
            num_convs=4,
            norm_cfg=dict(type='BN', requires_grad=True),
            act_cfg=dict(type='ReLU'),
            with_final_conv=False,
            init_cfg=dict(
                type='Pretrained',
                checkpoint=
                'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth'
            )),
        last_in_channels=(1035, 512),
        out_channels=128,
        ffm_cfg=dict(in_channels=384, out_channels=256, scale_factor=4),
        text_embeddings='./pretrained/textfeat_camvid_11_RN50_1024.pth'),
    decode_head=dict(
        type='FCNHead',
        in_channels=256,
        channels=256,
        num_convs=1,
        num_classes=19,
        in_index=3,
        concat_input=False,
        dropout_ratio=0.1,
        norm_cfg=dict(type='BN', requires_grad=True),
        align_corners=True,
        sampler=dict(type='OHEMPixelSampler', thresh=0.7, min_kept=690000),
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
    auxiliary_head=[
        dict(
            type='FCNHead',
            in_channels=128,
            channels=64,
            num_convs=1,
            num_classes=11,
            in_index=2,
            norm_cfg=dict(type='BN', requires_grad=True),
            concat_input=False,
            align_corners=False,
            sampler=dict(type='OHEMPixelSampler', thresh=0.7, min_kept=690000),
            loss_decode=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
        dict(
            type='FCNHead',
            in_channels=128,
            channels=64,
            num_convs=1,
            num_classes=11,
            in_index=1,
            norm_cfg=dict(type='BN', requires_grad=True),
            concat_input=False,
            align_corners=False,
            sampler=dict(type='OHEMPixelSampler', thresh=0.7, min_kept=690000),
            loss_decode=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
        dict(
            type='STDCHead',
            in_channels=256,
            channels=64,
            num_convs=1,
            num_classes=2,
            boundary_threshold=0.1,
            in_index=0,
            norm_cfg=dict(type='BN', requires_grad=True),
            concat_input=False,
            align_corners=True,
            loss_decode=[
                dict(
                    type='CrossEntropyLoss',
                    loss_name='loss_ce',
                    use_sigmoid=True,
                    loss_weight=1.0),
                dict(type='DiceLoss', loss_name='loss_dice', loss_weight=1.0)
            ]),
        dict(
            type='VanillaHead',
            temperature=0.07,
            in_channels=11,
            channels=1,
            num_classes=11,
            in_index=4,
            sampler=dict(type='OHEMPixelSampler', thresh=0.7, min_kept=690000),
            loss_decode=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0))
    ],
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
dataset_type = 'CamVidDataset'
data_root = 'data/CamVid/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
crop_size = (720, 960)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(
        type='Resize',
        img_scale=(960, 720),
        ratio_range=(0.5, 2.5),
        scale_step_size=0.25),
    dict(type='RandomCrop', crop_size=(720, 960), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size=(720, 960), pad_val=0, seg_pad_val=255),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_semantic_seg'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(960, 720),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=16,
    workers_per_gpu=4,
    train=dict(
        type='CamVidDataset',
        data_root='data/CamVid/',
        img_dir='train',
        ann_dir='train_labelIds',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations'),
            dict(
                type='Resize',
                img_scale=(960, 720),
                ratio_range=(0.5, 2.5),
                scale_step_size=0.25),
            dict(type='RandomCrop', crop_size=(720, 960), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size=(720, 960), pad_val=0, seg_pad_val=255),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_semantic_seg'])
        ]),
    val=dict(
        type='CamVidDataset',
        data_root='data/CamVid/',
        img_dir='val',
        ann_dir='val_labelIds',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(960, 720),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CamVidDataset',
        data_root='data/CamVid/',
        img_dir='val',
        ann_dir='val_labelIds',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(960, 720),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
log_config = dict(
    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
cudnn_benchmark = True
optimizer = dict(
    type='SGD',
    lr=0.1,
    momentum=0.9,
    weight_decay=0.0005,
    paramwise_cfg=dict(
        custom_keys=dict(
            {
                'backbone.backbone': dict(lr_mult=0.1),
                'backbone.text_encoder': dict(lr_mult=0.0, decay_mult=0.0),
                '.bn.': dict(decay_mult=0.0)
            })))
optimizer_config = dict()
lr_config = dict(
    policy='poly',
    power=0.9,
    min_lr=1e-06,
    by_epoch=False,
    warmup='linear',
    warmup_iters=200,
    warmup_ratio=1e-05)
runner = dict(type='IterBasedRunner', max_iters=10000)
checkpoint_config = dict(by_epoch=False, interval=1000)
evaluation = dict(interval=1000, metric='mIoU', pre_eval=True)
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth'
work_dir = './work_dirs/entextnet_stdc1_1x16_720x960_10k_camvid'
gpu_ids = [0]
auto_resume = False

2023-05-03 23:45:06,893 - mmseg - INFO - Set random seed to 1650940211, deterministic: False
2023-05-03 23:45:06,899 - mmseg - INFO - Loaded 367 images
2023-05-03 23:45:08,392 - mmseg - INFO - initialize STDCNet with init_cfg {'type': 'Pretrained', 'checkpoint': 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth'}
2023-05-03 23:45:09,525 - mmseg - INFO - initialize FCNHead with init_cfg {'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
Name of parameter - Initialization information

backbone.text_embeddings - torch.Size([11, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.backbone.stages.0.conv.weight - torch.Size([32, 3, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.0.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.0.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.1.conv.weight - torch.Size([64, 32, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.1.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.0.conv.weight - torch.Size([128, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.0.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.0.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.1.conv.weight - torch.Size([64, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.1.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.2.conv.weight - torch.Size([32, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.2.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.2.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.3.conv.weight - torch.Size([32, 32, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.3.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.3.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.downsample.conv.weight - torch.Size([128, 1, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.downsample.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.downsample.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.0.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.0.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.0.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.1.conv.weight - torch.Size([64, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.1.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.2.conv.weight - torch.Size([32, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.2.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.2.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.3.conv.weight - torch.Size([32, 32, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.3.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.3.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.0.conv.weight - torch.Size([256, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.0.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.0.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.1.conv.weight - torch.Size([128, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.1.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.1.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.2.conv.weight - torch.Size([64, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.2.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.2.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.3.conv.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.3.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.3.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.downsample.conv.weight - torch.Size([256, 1, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.downsample.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.downsample.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.0.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.0.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.0.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.1.conv.weight - torch.Size([128, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.1.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.1.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.2.conv.weight - torch.Size([64, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.2.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.2.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.3.conv.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.3.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.3.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.0.conv.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.0.bn.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.0.bn.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.1.conv.weight - torch.Size([256, 512, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.1.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.1.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.2.conv.weight - torch.Size([128, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.2.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.2.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.3.conv.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.3.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.3.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.downsample.conv.weight - torch.Size([512, 1, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.downsample.bn.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.downsample.bn.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.0.conv.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.0.bn.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.0.bn.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.1.conv.weight - torch.Size([256, 512, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.1.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.1.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.2.conv.weight - torch.Size([128, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.2.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.2.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.3.conv.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.3.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.3.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.arms.0.conv_layer.conv.weight - torch.Size([128, 1035, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.arms.0.conv_layer.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.0.conv_layer.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.0.atten_conv_layer.1.conv.weight - torch.Size([128, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.0.atten_conv_layer.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.0.atten_conv_layer.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.conv_layer.conv.weight - torch.Size([128, 512, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.arms.1.conv_layer.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.conv_layer.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.atten_conv_layer.1.conv.weight - torch.Size([128, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.atten_conv_layer.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.atten_conv_layer.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.convs.0.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.convs.0.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.convs.0.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.convs.1.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.convs.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.convs.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.conv_avg.conv.weight - torch.Size([128, 1035, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.conv_avg.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.conv_avg.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.ffm.conv0.conv.weight - torch.Size([256, 384, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.ffm.conv0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.ffm.conv0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.ffm.attention.1.conv.weight - torch.Size([64, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.ffm.attention.2.conv.weight - torch.Size([256, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.conv_seg.weight - torch.Size([19, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.conv_seg.bias - torch.Size([19]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.conv_seg.weight - torch.Size([11, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.conv_seg.bias - torch.Size([11]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.convs.0.conv.weight - torch.Size([64, 128, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.convs.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.convs.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.conv_seg.weight - torch.Size([11, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.conv_seg.bias - torch.Size([11]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.convs.0.conv.weight - torch.Size([64, 128, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.convs.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.convs.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.fusion_kernel - torch.Size([1, 3, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.conv_seg.weight - torch.Size([2, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.conv_seg.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.convs.0.conv.weight - torch.Size([64, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.convs.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.convs.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
2023-05-03 23:45:09,551 - mmseg - INFO - EncoderDecoder(
  (backbone): STDCEnTextNet(
    (backbone): STDCNet(
      (stages): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (1): ConvModule(
          (conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (2): Sequential(
          (0): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
            (downsample): ConvModule(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
              (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (skip): AvgPool2d(kernel_size=3, stride=2, padding=1)
          )
          (1): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
          )
        )
        (3): Sequential(
          (0): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
            (downsample): ConvModule(
              (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=256, bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (skip): AvgPool2d(kernel_size=3, stride=2, padding=1)
          )
          (1): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
          )
        )
        (4): Sequential(
          (0): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
            (downsample): ConvModule(
              (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=512, bias=False)
              (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (skip): AvgPool2d(kernel_size=3, stride=2, padding=1)
          )
          (1): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
          )
        )
      )
    )
    init_cfg={'type': 'Pretrained', 'checkpoint': 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth'}
    (arms): ModuleList(
      (0): AttentionRefinementModule(
        (conv_layer): ConvModule(
          (conv): Conv2d(1035, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (atten_conv_layer): Sequential(
          (0): AdaptiveAvgPool2d(output_size=(1, 1))
          (1): ConvModule(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): Sigmoid()
        )
      )
      (1): AttentionRefinementModule(
        (conv_layer): ConvModule(
          (conv): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (atten_conv_layer): Sequential(
          (0): AdaptiveAvgPool2d(output_size=(1, 1))
          (1): ConvModule(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): Sigmoid()
        )
      )
    )
    (convs): ModuleList(
      (0): ConvModule(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
      (1): ConvModule(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
    (conv_avg): ConvModule(
      (conv): Conv2d(1035, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activate): ReLU(inplace=True)
    )
    (ffm): FeatureFusionModule(
      (conv0): ConvModule(
        (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
      (attention): Sequential(
        (0): AdaptiveAvgPool2d(output_size=(1, 1))
        (1): ConvModule(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (activate): ReLU(inplace=True)
        )
        (2): ConvModule(
          (conv): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (3): Sigmoid()
      )
    )
  )
  (decode_head): FCNHead(
    input_transform=None, ignore_index=255, align_corners=True
    (loss_decode): CrossEntropyLoss(avg_non_ignore=False)
    (conv_seg): Conv2d(256, 19, kernel_size=(1, 1), stride=(1, 1))
    (dropout): Dropout2d(p=0.1, inplace=False)
    (convs): Sequential(
      (0): ConvModule(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
  )
  init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
  (auxiliary_head): ModuleList(
    (0): FCNHead(
      input_transform=None, ignore_index=255, align_corners=False
      (loss_decode): CrossEntropyLoss(avg_non_ignore=False)
      (conv_seg): Conv2d(64, 11, kernel_size=(1, 1), stride=(1, 1))
      (dropout): Dropout2d(p=0.1, inplace=False)
      (convs): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
    init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
    (1): FCNHead(
      input_transform=None, ignore_index=255, align_corners=False
      (loss_decode): CrossEntropyLoss(avg_non_ignore=False)
      (conv_seg): Conv2d(64, 11, kernel_size=(1, 1), stride=(1, 1))
      (dropout): Dropout2d(p=0.1, inplace=False)
      (convs): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
    init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
    (2): STDCHead(
      input_transform=None, ignore_index=255, align_corners=True
      (loss_decode): ModuleList(
        (0): CrossEntropyLoss(avg_non_ignore=False)
        (1): DiceLoss()
      )
      (conv_seg): Conv2d(64, 2, kernel_size=(1, 1), stride=(1, 1))
      (dropout): Dropout2d(p=0.1, inplace=False)
      (convs): Sequential(
        (0): ConvModule(
          (conv): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
    init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
    (3): VanillaHead(
      input_transform=None, ignore_index=255, align_corners=False
      (loss_decode): CrossEntropyLoss(avg_non_ignore=False)
      (conv_seg): None
      (dropout): Dropout2d(p=0.1, inplace=False)
    )
    init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
  )
)
2023-05-03 23:45:16,578 - mmseg - INFO - Loaded 101 images
2023-05-03 23:45:16,579 - mmseg - INFO - Start running, host: linchiayi@cml9, work_dir: /tmp2/linchiayi/mmsegmentation/work_dirs/entextnet_stdc1_1x16_720x960_10k_camvid
2023-05-03 23:45:16,579 - mmseg - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-05-03 23:45:16,580 - mmseg - INFO - workflow: [('train', 1)], max: 10000 iters
2023-05-03 23:45:16,580 - mmseg - INFO - Checkpoints will be saved to /tmp2/linchiayi/mmsegmentation/work_dirs/entextnet_stdc1_1x16_720x960_10k_camvid by HardDiskBackend.
2023-05-03 23:46:10,365 - mmseg - INFO - Iter [50/10000]	lr: 2.439e-02, eta: 2:56:30, time: 1.064, data_time: 0.274, memory: 18377, decode.loss_ce: 1.3228, decode.acc_seg: 51.7090, aux_0.loss_ce: 1.2356, aux_0.acc_seg: 47.7740, aux_1.loss_ce: 1.3481, aux_1.acc_seg: 40.4168, aux_2.loss_ce: 0.3218, aux_2.loss_dice: 0.4924, aux_2.acc_seg: 91.8705, aux_3.loss_ce: 1.8444, aux_3.acc_seg: 4.6523, loss: 6.5650
2023-05-03 23:46:55,585 - mmseg - INFO - Iter [100/10000]	lr: 4.906e-02, eta: 2:42:25, time: 0.904, data_time: 0.262, memory: 18377, decode.loss_ce: 0.4728, decode.acc_seg: 80.9748, aux_0.loss_ce: 0.4724, aux_0.acc_seg: 81.7375, aux_1.loss_ce: 0.5218, aux_1.acc_seg: 79.6819, aux_2.loss_ce: 0.1612, aux_2.loss_dice: 0.4263, aux_2.acc_seg: 95.8787, aux_3.loss_ce: 1.6168, aux_3.acc_seg: 47.8588, loss: 3.6712
2023-05-03 23:47:39,367 - mmseg - INFO - Iter [150/10000]	lr: 7.350e-02, eta: 2:35:39, time: 0.876, data_time: 0.229, memory: 18377, decode.loss_ce: 0.3465, decode.acc_seg: 85.8928, aux_0.loss_ce: 0.3572, aux_0.acc_seg: 85.7859, aux_1.loss_ce: 0.3861, aux_1.acc_seg: 84.8324, aux_2.loss_ce: 0.1447, aux_2.loss_dice: 0.3288, aux_2.acc_seg: 96.0525, aux_3.loss_ce: 1.2528, aux_3.acc_seg: 80.6652, loss: 2.8160
2023-05-03 23:48:27,226 - mmseg - INFO - Iter [200/10000]	lr: 9.772e-02, eta: 2:35:13, time: 0.957, data_time: 0.317, memory: 18377, decode.loss_ce: 0.3119, decode.acc_seg: 87.2255, aux_0.loss_ce: 0.3181, aux_0.acc_seg: 87.0999, aux_1.loss_ce: 0.3422, aux_1.acc_seg: 86.3701, aux_2.loss_ce: 0.1404, aux_2.loss_dice: 0.3091, aux_2.acc_seg: 96.0191, aux_3.loss_ce: 0.9873, aux_3.acc_seg: 84.0682, loss: 2.4090
2023-05-03 23:49:10,391 - mmseg - INFO - Iter [250/10000]	lr: 9.776e-02, eta: 2:31:36, time: 0.863, data_time: 0.228, memory: 18377, decode.loss_ce: 0.2618, decode.acc_seg: 89.1752, aux_0.loss_ce: 0.2593, aux_0.acc_seg: 89.2197, aux_1.loss_ce: 0.2852, aux_1.acc_seg: 88.2555, aux_2.loss_ce: 0.1356, aux_2.loss_dice: 0.3000, aux_2.acc_seg: 96.0455, aux_3.loss_ce: 0.8265, aux_3.acc_seg: 86.4890, loss: 2.0683
2023-05-03 23:49:55,050 - mmseg - INFO - Iter [300/10000]	lr: 9.730e-02, eta: 2:29:45, time: 0.893, data_time: 0.250, memory: 18377, decode.loss_ce: 0.2202, decode.acc_seg: 90.7750, aux_0.loss_ce: 0.2288, aux_0.acc_seg: 90.5086, aux_1.loss_ce: 0.2568, aux_1.acc_seg: 89.4641, aux_2.loss_ce: 0.1392, aux_2.loss_dice: 0.2957, aux_2.acc_seg: 95.9117, aux_3.loss_ce: 0.7363, aux_3.acc_seg: 88.3397, loss: 1.8770
2023-05-03 23:50:38,959 - mmseg - INFO - Iter [350/10000]	lr: 9.685e-02, eta: 2:27:52, time: 0.878, data_time: 0.236, memory: 18377, decode.loss_ce: 0.2009, decode.acc_seg: 91.1961, aux_0.loss_ce: 0.2097, aux_0.acc_seg: 90.8869, aux_1.loss_ce: 0.2405, aux_1.acc_seg: 89.8355, aux_2.loss_ce: 0.1342, aux_2.loss_dice: 0.2890, aux_2.acc_seg: 95.9907, aux_3.loss_ce: 0.6583, aux_3.acc_seg: 88.7475, loss: 1.7325
2023-05-03 23:51:26,276 - mmseg - INFO - Iter [400/10000]	lr: 9.640e-02, eta: 2:27:39, time: 0.946, data_time: 0.307, memory: 18377, decode.loss_ce: 0.1807, decode.acc_seg: 92.0042, aux_0.loss_ce: 0.1885, aux_0.acc_seg: 91.7021, aux_1.loss_ce: 0.2180, aux_1.acc_seg: 90.6800, aux_2.loss_ce: 0.1327, aux_2.loss_dice: 0.2851, aux_2.acc_seg: 96.0287, aux_3.loss_ce: 0.6090, aux_3.acc_seg: 89.8473, loss: 1.6139
2023-05-03 23:52:10,239 - mmseg - INFO - Iter [450/10000]	lr: 9.595e-02, eta: 2:26:06, time: 0.879, data_time: 0.231, memory: 18377, decode.loss_ce: 0.1713, decode.acc_seg: 92.2440, aux_0.loss_ce: 0.1768, aux_0.acc_seg: 92.0024, aux_1.loss_ce: 0.2062, aux_1.acc_seg: 91.0104, aux_2.loss_ce: 0.1291, aux_2.loss_dice: 0.2814, aux_2.acc_seg: 96.1230, aux_3.loss_ce: 0.5719, aux_3.acc_seg: 89.9536, loss: 1.5367
2023-05-03 23:52:54,528 - mmseg - INFO - Iter [500/10000]	lr: 9.550e-02, eta: 2:24:50, time: 0.886, data_time: 0.244, memory: 18377, decode.loss_ce: 0.1707, decode.acc_seg: 92.3952, aux_0.loss_ce: 0.1778, aux_0.acc_seg: 92.1323, aux_1.loss_ce: 0.2073, aux_1.acc_seg: 91.1105, aux_2.loss_ce: 0.1311, aux_2.loss_dice: 0.2810, aux_2.acc_seg: 96.0690, aux_3.loss_ce: 0.5684, aux_3.acc_seg: 90.2309, loss: 1.5363
2023-05-03 23:53:39,389 - mmseg - INFO - Iter [550/10000]	lr: 9.505e-02, eta: 2:23:49, time: 0.897, data_time: 0.255, memory: 18377, decode.loss_ce: 0.1752, decode.acc_seg: 92.2625, aux_0.loss_ce: 0.1782, aux_0.acc_seg: 92.0939, aux_1.loss_ce: 0.2071, aux_1.acc_seg: 91.1211, aux_2.loss_ce: 0.1325, aux_2.loss_dice: 0.2821, aux_2.acc_seg: 96.0301, aux_3.loss_ce: 0.5641, aux_3.acc_seg: 90.1401, loss: 1.5391
2023-05-03 23:54:27,016 - mmseg - INFO - Iter [600/10000]	lr: 9.459e-02, eta: 2:23:34, time: 0.953, data_time: 0.310, memory: 18377, decode.loss_ce: 0.1512, decode.acc_seg: 93.0730, aux_0.loss_ce: 0.1557, aux_0.acc_seg: 92.8454, aux_1.loss_ce: 0.1865, aux_1.acc_seg: 91.7713, aux_2.loss_ce: 0.1295, aux_2.loss_dice: 0.2775, aux_2.acc_seg: 96.0896, aux_3.loss_ce: 0.5193, aux_3.acc_seg: 90.9045, loss: 1.4197
2023-05-03 23:55:10,812 - mmseg - INFO - Iter [650/10000]	lr: 9.414e-02, eta: 2:22:19, time: 0.876, data_time: 0.241, memory: 18377, decode.loss_ce: 0.1594, decode.acc_seg: 92.8581, aux_0.loss_ce: 0.1659, aux_0.acc_seg: 92.6069, aux_1.loss_ce: 0.1950, aux_1.acc_seg: 91.5221, aux_2.loss_ce: 0.1313, aux_2.loss_dice: 0.2792, aux_2.acc_seg: 96.0375, aux_3.loss_ce: 0.5222, aux_3.acc_seg: 90.6682, loss: 1.4530
2023-05-03 23:55:53,687 - mmseg - INFO - Iter [700/10000]	lr: 9.369e-02, eta: 2:20:56, time: 0.857, data_time: 0.224, memory: 18377, decode.loss_ce: 0.1455, decode.acc_seg: 93.3883, aux_0.loss_ce: 0.1505, aux_0.acc_seg: 93.1807, aux_1.loss_ce: 0.1776, aux_1.acc_seg: 92.1241, aux_2.loss_ce: 0.1276, aux_2.loss_dice: 0.2760, aux_2.acc_seg: 96.1298, aux_3.loss_ce: 0.4964, aux_3.acc_seg: 91.0911, loss: 1.3737
2023-05-03 23:56:41,467 - mmseg - INFO - Iter [750/10000]	lr: 9.323e-02, eta: 2:20:39, time: 0.956, data_time: 0.320, memory: 18377, decode.loss_ce: 0.1442, decode.acc_seg: 93.4640, aux_0.loss_ce: 0.1508, aux_0.acc_seg: 93.2039, aux_1.loss_ce: 0.1793, aux_1.acc_seg: 92.1890, aux_2.loss_ce: 0.1288, aux_2.loss_dice: 0.2764, aux_2.acc_seg: 96.0207, aux_3.loss_ce: 0.4956, aux_3.acc_seg: 91.1752, loss: 1.3750
2023-05-03 23:57:24,436 - mmseg - INFO - Iter [800/10000]	lr: 9.278e-02, eta: 2:19:23, time: 0.859, data_time: 0.219, memory: 18377, decode.loss_ce: 0.1305, decode.acc_seg: 93.8296, aux_0.loss_ce: 0.1359, aux_0.acc_seg: 93.6133, aux_1.loss_ce: 0.1617, aux_1.acc_seg: 92.5982, aux_2.loss_ce: 0.1268, aux_2.loss_dice: 0.2712, aux_2.acc_seg: 96.0739, aux_3.loss_ce: 0.4611, aux_3.acc_seg: 91.6316, loss: 1.2872
2023-05-03 23:58:08,502 - mmseg - INFO - Iter [850/10000]	lr: 9.233e-02, eta: 2:18:23, time: 0.881, data_time: 0.248, memory: 18377, decode.loss_ce: 0.1304, decode.acc_seg: 93.7940, aux_0.loss_ce: 0.1350, aux_0.acc_seg: 93.5957, aux_1.loss_ce: 0.1611, aux_1.acc_seg: 92.5561, aux_2.loss_ce: 0.1273, aux_2.loss_dice: 0.2711, aux_2.acc_seg: 96.0357, aux_3.loss_ce: 0.4568, aux_3.acc_seg: 91.4916, loss: 1.2817
2023-05-03 23:58:51,772 - mmseg - INFO - Iter [900/10000]	lr: 9.187e-02, eta: 2:17:16, time: 0.865, data_time: 0.226, memory: 18377, decode.loss_ce: 0.1356, decode.acc_seg: 93.7261, aux_0.loss_ce: 0.1407, aux_0.acc_seg: 93.5385, aux_1.loss_ce: 0.1658, aux_1.acc_seg: 92.5805, aux_2.loss_ce: 0.1282, aux_2.loss_dice: 0.2726, aux_2.acc_seg: 96.0456, aux_3.loss_ce: 0.4641, aux_3.acc_seg: 91.7810, loss: 1.3070
2023-05-03 23:59:40,775 - mmseg - INFO - Iter [950/10000]	lr: 9.142e-02, eta: 2:17:07, time: 0.980, data_time: 0.334, memory: 18377, decode.loss_ce: 0.1236, decode.acc_seg: 94.1219, aux_0.loss_ce: 0.1281, aux_0.acc_seg: 93.8922, aux_1.loss_ce: 0.1525, aux_1.acc_seg: 92.9047, aux_2.loss_ce: 0.1250, aux_2.loss_dice: 0.2693, aux_2.acc_seg: 96.1054, aux_3.loss_ce: 0.4405, aux_3.acc_seg: 91.9159, loss: 1.2392
2023-05-04 00:00:23,816 - mmseg - INFO - Saving checkpoint at 1000 iterations
2023-05-04 00:00:24,214 - mmseg - INFO - Exp name: entextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 00:00:24,215 - mmseg - INFO - Iter [1000/10000]	lr: 9.096e-02, eta: 2:16:04, time: 0.871, data_time: 0.218, memory: 18377, decode.loss_ce: 0.1215, decode.acc_seg: 94.3149, aux_0.loss_ce: 0.1270, aux_0.acc_seg: 94.0883, aux_1.loss_ce: 0.1495, aux_1.acc_seg: 93.1747, aux_2.loss_ce: 0.1259, aux_2.loss_dice: 0.2686, aux_2.acc_seg: 96.0705, aux_3.loss_ce: 0.4360, aux_3.acc_seg: 92.1409, loss: 1.2285
2023-05-04 00:00:37,408 - mmseg - INFO - per class results:
2023-05-04 00:00:37,410 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 62.38 | 65.47 |
|   Building  |  90.6 | 92.49 |
|     Car     | 90.81 | 94.54 |
| Column_Pole | 12.08 | 14.24 |
|    Fence    | 64.53 | 98.39 |
|  Pedestrian | 36.38 | 82.46 |
|     Road    | 96.95 |  97.8 |
|   Sidewalk  | 88.63 |  97.4 |
|  SignSymbol |  0.0  |  0.0  |
|     Sky     | 93.87 | 95.74 |
|     Tree    | 92.01 | 96.18 |
+-------------+-------+-------+
2023-05-04 00:00:37,410 - mmseg - INFO - Summary:
2023-05-04 00:00:37,410 - mmseg - INFO - 
+-------+------+-------+
|  aAcc | mIoU |  mAcc |
+-------+------+-------+
| 94.42 | 66.2 | 75.88 |
+-------+------+-------+
2023-05-04 00:00:37,410 - mmseg - INFO - Exp name: entextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 00:00:37,411 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9442, mIoU: 0.6620, mAcc: 0.7588, IoU.Bicyclist: 0.6238, IoU.Building: 0.9060, IoU.Car: 0.9081, IoU.Column_Pole: 0.1208, IoU.Fence: 0.6453, IoU.Pedestrian: 0.3638, IoU.Road: 0.9695, IoU.Sidewalk: 0.8863, IoU.SignSymbol: 0.0000, IoU.Sky: 0.9387, IoU.Tree: 0.9201, Acc.Bicyclist: 0.6547, Acc.Building: 0.9249, Acc.Car: 0.9454, Acc.Column_Pole: 0.1424, Acc.Fence: 0.9839, Acc.Pedestrian: 0.8246, Acc.Road: 0.9780, Acc.Sidewalk: 0.9740, Acc.SignSymbol: 0.0000, Acc.Sky: 0.9574, Acc.Tree: 0.9618
2023-05-04 00:01:20,478 - mmseg - INFO - Iter [1050/10000]	lr: 9.051e-02, eta: 2:16:51, time: 1.123, data_time: 0.486, memory: 18377, decode.loss_ce: 0.1215, decode.acc_seg: 94.3237, aux_0.loss_ce: 0.1273, aux_0.acc_seg: 94.0847, aux_1.loss_ce: 0.1515, aux_1.acc_seg: 93.1184, aux_2.loss_ce: 0.1269, aux_2.loss_dice: 0.2705, aux_2.acc_seg: 96.0584, aux_3.loss_ce: 0.4392, aux_3.acc_seg: 92.0371, loss: 1.2368
2023-05-04 00:02:03,156 - mmseg - INFO - Iter [1100/10000]	lr: 9.005e-02, eta: 2:15:39, time: 0.854, data_time: 0.224, memory: 18377, decode.loss_ce: 0.1157, decode.acc_seg: 94.5643, aux_0.loss_ce: 0.1209, aux_0.acc_seg: 94.3733, aux_1.loss_ce: 0.1440, aux_1.acc_seg: 93.4367, aux_2.loss_ce: 0.1283, aux_2.loss_dice: 0.2699, aux_2.acc_seg: 95.9781, aux_3.loss_ce: 0.4372, aux_3.acc_seg: 92.4097, loss: 1.2160
2023-05-04 00:02:49,753 - mmseg - INFO - Iter [1150/10000]	lr: 8.960e-02, eta: 2:15:00, time: 0.932, data_time: 0.304, memory: 18377, decode.loss_ce: 0.1175, decode.acc_seg: 94.4762, aux_0.loss_ce: 0.1224, aux_0.acc_seg: 94.2669, aux_1.loss_ce: 0.1466, aux_1.acc_seg: 93.2606, aux_2.loss_ce: 0.1245, aux_2.loss_dice: 0.2679, aux_2.acc_seg: 96.1035, aux_3.loss_ce: 0.4243, aux_3.acc_seg: 92.3215, loss: 1.2032
2023-05-04 00:03:32,531 - mmseg - INFO - Iter [1200/10000]	lr: 8.914e-02, eta: 2:13:52, time: 0.856, data_time: 0.218, memory: 18377, decode.loss_ce: 0.1198, decode.acc_seg: 94.4563, aux_0.loss_ce: 0.1251, aux_0.acc_seg: 94.2355, aux_1.loss_ce: 0.1488, aux_1.acc_seg: 93.2405, aux_2.loss_ce: 0.1274, aux_2.loss_dice: 0.2701, aux_2.acc_seg: 96.0423, aux_3.loss_ce: 0.4347, aux_3.acc_seg: 92.1765, loss: 1.2260
2023-05-04 00:04:15,716 - mmseg - INFO - Iter [1250/10000]	lr: 8.869e-02, eta: 2:12:49, time: 0.864, data_time: 0.223, memory: 18377, decode.loss_ce: 0.1263, decode.acc_seg: 94.1938, aux_0.loss_ce: 0.1336, aux_0.acc_seg: 93.9382, aux_1.loss_ce: 0.1553, aux_1.acc_seg: 92.9909, aux_2.loss_ce: 0.1256, aux_2.loss_dice: 0.2691, aux_2.acc_seg: 96.0967, aux_3.loss_ce: 0.4351, aux_3.acc_seg: 91.8105, loss: 1.2449
2023-05-04 00:05:02,017 - mmseg - INFO - Iter [1300/10000]	lr: 8.823e-02, eta: 2:12:09, time: 0.926, data_time: 0.298, memory: 18377, decode.loss_ce: 0.1172, decode.acc_seg: 94.5841, aux_0.loss_ce: 0.1222, aux_0.acc_seg: 94.3929, aux_1.loss_ce: 0.1459, aux_1.acc_seg: 93.4044, aux_2.loss_ce: 0.1268, aux_2.loss_dice: 0.2679, aux_2.acc_seg: 95.9974, aux_3.loss_ce: 0.4301, aux_3.acc_seg: 92.3184, loss: 1.2101
2023-05-04 00:05:44,774 - mmseg - INFO - Iter [1350/10000]	lr: 8.777e-02, eta: 2:11:05, time: 0.855, data_time: 0.217, memory: 18377, decode.loss_ce: 0.1426, decode.acc_seg: 93.5616, aux_0.loss_ce: 0.1457, aux_0.acc_seg: 93.4540, aux_1.loss_ce: 0.1680, aux_1.acc_seg: 92.4643, aux_2.loss_ce: 0.1281, aux_2.loss_dice: 0.2731, aux_2.acc_seg: 96.1016, aux_3.loss_ce: 0.4443, aux_3.acc_seg: 91.5594, loss: 1.3019
2023-05-04 00:06:27,537 - mmseg - INFO - Iter [1400/10000]	lr: 8.732e-02, eta: 2:10:03, time: 0.855, data_time: 0.223, memory: 18377, decode.loss_ce: 0.1156, decode.acc_seg: 94.5307, aux_0.loss_ce: 0.1203, aux_0.acc_seg: 94.3467, aux_1.loss_ce: 0.1437, aux_1.acc_seg: 93.3677, aux_2.loss_ce: 0.1277, aux_2.loss_dice: 0.2679, aux_2.acc_seg: 95.9240, aux_3.loss_ce: 0.4179, aux_3.acc_seg: 92.2673, loss: 1.1932
2023-05-04 00:07:10,341 - mmseg - INFO - Iter [1450/10000]	lr: 8.686e-02, eta: 2:09:03, time: 0.856, data_time: 0.220, memory: 18377, decode.loss_ce: 0.1139, decode.acc_seg: 94.7254, aux_0.loss_ce: 0.1193, aux_0.acc_seg: 94.5316, aux_1.loss_ce: 0.1458, aux_1.acc_seg: 93.4213, aux_2.loss_ce: 0.1239, aux_2.loss_dice: 0.2667, aux_2.acc_seg: 96.1243, aux_3.loss_ce: 0.4125, aux_3.acc_seg: 92.4702, loss: 1.1820
2023-05-04 00:07:56,505 - mmseg - INFO - Iter [1500/10000]	lr: 8.640e-02, eta: 2:08:22, time: 0.923, data_time: 0.293, memory: 18377, decode.loss_ce: 0.1238, decode.acc_seg: 94.3107, aux_0.loss_ce: 0.1275, aux_0.acc_seg: 94.1814, aux_1.loss_ce: 0.1545, aux_1.acc_seg: 93.0629, aux_2.loss_ce: 0.1261, aux_2.loss_dice: 0.2678, aux_2.acc_seg: 96.0320, aux_3.loss_ce: 0.4279, aux_3.acc_seg: 92.1853, loss: 1.2275
2023-05-04 00:08:38,865 - mmseg - INFO - Iter [1550/10000]	lr: 8.594e-02, eta: 2:07:21, time: 0.847, data_time: 0.217, memory: 18377, decode.loss_ce: 0.1062, decode.acc_seg: 94.8344, aux_0.loss_ce: 0.1108, aux_0.acc_seg: 94.6624, aux_1.loss_ce: 0.1336, aux_1.acc_seg: 93.6746, aux_2.loss_ce: 0.1240, aux_2.loss_dice: 0.2646, aux_2.acc_seg: 96.0841, aux_3.loss_ce: 0.3965, aux_3.acc_seg: 92.7681, loss: 1.1356
2023-05-04 00:09:20,849 - mmseg - INFO - Iter [1600/10000]	lr: 8.549e-02, eta: 2:06:19, time: 0.840, data_time: 0.210, memory: 18377, decode.loss_ce: 0.1093, decode.acc_seg: 94.8737, aux_0.loss_ce: 0.1137, aux_0.acc_seg: 94.6929, aux_1.loss_ce: 0.1371, aux_1.acc_seg: 93.7351, aux_2.loss_ce: 0.1271, aux_2.loss_dice: 0.2678, aux_2.acc_seg: 95.9720, aux_3.loss_ce: 0.4076, aux_3.acc_seg: 92.7523, loss: 1.1627
2023-05-04 00:10:03,893 - mmseg - INFO - Iter [1650/10000]	lr: 8.503e-02, eta: 2:05:23, time: 0.861, data_time: 0.225, memory: 18377, decode.loss_ce: 0.1042, decode.acc_seg: 95.0183, aux_0.loss_ce: 0.1095, aux_0.acc_seg: 94.8309, aux_1.loss_ce: 0.1316, aux_1.acc_seg: 93.8963, aux_2.loss_ce: 0.1229, aux_2.loss_dice: 0.2643, aux_2.acc_seg: 96.1070, aux_3.loss_ce: 0.3948, aux_3.acc_seg: 92.8452, loss: 1.1273
2023-05-04 00:10:50,461 - mmseg - INFO - Iter [1700/10000]	lr: 8.457e-02, eta: 2:04:46, time: 0.931, data_time: 0.296, memory: 18377, decode.loss_ce: 0.1037, decode.acc_seg: 95.0712, aux_0.loss_ce: 0.1082, aux_0.acc_seg: 94.8972, aux_1.loss_ce: 0.1309, aux_1.acc_seg: 93.9154, aux_2.loss_ce: 0.1266, aux_2.loss_dice: 0.2652, aux_2.acc_seg: 95.9408, aux_3.loss_ce: 0.3958, aux_3.acc_seg: 92.9773, loss: 1.1303
2023-05-04 00:11:32,644 - mmseg - INFO - Iter [1750/10000]	lr: 8.411e-02, eta: 2:03:47, time: 0.844, data_time: 0.215, memory: 18377, decode.loss_ce: 0.1080, decode.acc_seg: 94.8453, aux_0.loss_ce: 0.1113, aux_0.acc_seg: 94.7074, aux_1.loss_ce: 0.1346, aux_1.acc_seg: 93.7151, aux_2.loss_ce: 0.1242, aux_2.loss_dice: 0.2644, aux_2.acc_seg: 96.0791, aux_3.loss_ce: 0.3914, aux_3.acc_seg: 92.9197, loss: 1.1339
2023-05-04 00:12:15,055 - mmseg - INFO - Iter [1800/10000]	lr: 8.365e-02, eta: 2:02:50, time: 0.848, data_time: 0.214, memory: 18377, decode.loss_ce: 0.1121, decode.acc_seg: 94.7852, aux_0.loss_ce: 0.1165, aux_0.acc_seg: 94.6189, aux_1.loss_ce: 0.1400, aux_1.acc_seg: 93.5844, aux_2.loss_ce: 0.1254, aux_2.loss_dice: 0.2643, aux_2.acc_seg: 96.0119, aux_3.loss_ce: 0.4003, aux_3.acc_seg: 92.7285, loss: 1.1585
2023-05-04 00:13:01,724 - mmseg - INFO - Iter [1850/10000]	lr: 8.319e-02, eta: 2:02:13, time: 0.933, data_time: 0.298, memory: 18377, decode.loss_ce: 0.1322, decode.acc_seg: 93.9415, aux_0.loss_ce: 0.1347, aux_0.acc_seg: 93.8373, aux_1.loss_ce: 0.1543, aux_1.acc_seg: 92.9459, aux_2.loss_ce: 0.1260, aux_2.loss_dice: 0.2685, aux_2.acc_seg: 96.0989, aux_3.loss_ce: 0.4093, aux_3.acc_seg: 92.1007, loss: 1.2248
2023-05-04 00:13:45,740 - mmseg - INFO - Iter [1900/10000]	lr: 8.273e-02, eta: 2:01:23, time: 0.880, data_time: 0.241, memory: 18377, decode.loss_ce: 0.1027, decode.acc_seg: 95.0248, aux_0.loss_ce: 0.1069, aux_0.acc_seg: 94.8564, aux_1.loss_ce: 0.1300, aux_1.acc_seg: 93.8392, aux_2.loss_ce: 0.1225, aux_2.loss_dice: 0.2624, aux_2.acc_seg: 96.0844, aux_3.loss_ce: 0.3812, aux_3.acc_seg: 92.9731, loss: 1.1056
2023-05-04 00:14:28,380 - mmseg - INFO - Iter [1950/10000]	lr: 8.227e-02, eta: 2:00:29, time: 0.853, data_time: 0.220, memory: 18377, decode.loss_ce: 0.1022, decode.acc_seg: 95.0323, aux_0.loss_ce: 0.1054, aux_0.acc_seg: 94.9071, aux_1.loss_ce: 0.1284, aux_1.acc_seg: 93.9047, aux_2.loss_ce: 0.1237, aux_2.loss_dice: 0.2627, aux_2.acc_seg: 96.0470, aux_3.loss_ce: 0.3813, aux_3.acc_seg: 93.0745, loss: 1.1036
2023-05-04 00:15:11,681 - mmseg - INFO - Saving checkpoint at 2000 iterations
2023-05-04 00:15:12,002 - mmseg - INFO - Exp name: entextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 00:15:12,003 - mmseg - INFO - Iter [2000/10000]	lr: 8.181e-02, eta: 1:59:39, time: 0.874, data_time: 0.238, memory: 18377, decode.loss_ce: 0.1025, decode.acc_seg: 95.1944, aux_0.loss_ce: 0.1065, aux_0.acc_seg: 95.0417, aux_1.loss_ce: 0.1288, aux_1.acc_seg: 94.0995, aux_2.loss_ce: 0.1241, aux_2.loss_dice: 0.2646, aux_2.acc_seg: 96.0666, aux_3.loss_ce: 0.3884, aux_3.acc_seg: 93.1345, loss: 1.1150
2023-05-04 00:15:23,314 - mmseg - INFO - per class results:
2023-05-04 00:15:23,316 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 80.29 | 94.76 |
|   Building  | 93.24 | 95.23 |
|     Car     | 92.52 | 95.95 |
| Column_Pole | 21.39 | 25.15 |
|    Fence    |  80.1 | 96.08 |
|  Pedestrian | 58.42 |  76.4 |
|     Road    | 96.18 | 96.62 |
|   Sidewalk  | 88.38 | 97.39 |
|  SignSymbol |  0.13 |  0.13 |
|     Sky     | 93.85 | 95.93 |
|     Tree    | 92.63 | 97.72 |
+-------------+-------+-------+
2023-05-04 00:15:23,316 - mmseg - INFO - Summary:
2023-05-04 00:15:23,316 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 95.74 | 72.47 | 79.21 |
+-------+-------+-------+
2023-05-04 00:15:23,316 - mmseg - INFO - Exp name: entextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 00:15:23,316 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9574, mIoU: 0.7247, mAcc: 0.7921, IoU.Bicyclist: 0.8029, IoU.Building: 0.9324, IoU.Car: 0.9252, IoU.Column_Pole: 0.2139, IoU.Fence: 0.8010, IoU.Pedestrian: 0.5842, IoU.Road: 0.9618, IoU.Sidewalk: 0.8838, IoU.SignSymbol: 0.0013, IoU.Sky: 0.9385, IoU.Tree: 0.9263, Acc.Bicyclist: 0.9476, Acc.Building: 0.9523, Acc.Car: 0.9595, Acc.Column_Pole: 0.2515, Acc.Fence: 0.9608, Acc.Pedestrian: 0.7640, Acc.Road: 0.9662, Acc.Sidewalk: 0.9739, Acc.SignSymbol: 0.0013, Acc.Sky: 0.9593, Acc.Tree: 0.9772
2023-05-04 00:16:10,834 - mmseg - INFO - Iter [2050/10000]	lr: 8.135e-02, eta: 1:59:48, time: 1.175, data_time: 0.540, memory: 18377, decode.loss_ce: 0.1029, decode.acc_seg: 95.1256, aux_0.loss_ce: 0.1066, aux_0.acc_seg: 94.9840, aux_1.loss_ce: 0.1311, aux_1.acc_seg: 93.9312, aux_2.loss_ce: 0.1246, aux_2.loss_dice: 0.2638, aux_2.acc_seg: 96.0419, aux_3.loss_ce: 0.3881, aux_3.acc_seg: 92.9887, loss: 1.1170
2023-05-04 00:16:53,278 - mmseg - INFO - Iter [2100/10000]	lr: 8.089e-02, eta: 1:58:52, time: 0.849, data_time: 0.220, memory: 18377, decode.loss_ce: 0.0937, decode.acc_seg: 95.4744, aux_0.loss_ce: 0.0975, aux_0.acc_seg: 95.3408, aux_1.loss_ce: 0.1190, aux_1.acc_seg: 94.3753, aux_2.loss_ce: 0.1222, aux_2.loss_dice: 0.2610, aux_2.acc_seg: 96.0973, aux_3.loss_ce: 0.3719, aux_3.acc_seg: 93.4505, loss: 1.0654
2023-05-04 00:17:35,994 - mmseg - INFO - Iter [2150/10000]	lr: 8.043e-02, eta: 1:57:58, time: 0.854, data_time: 0.227, memory: 18377, decode.loss_ce: 0.0979, decode.acc_seg: 95.1845, aux_0.loss_ce: 0.1014, aux_0.acc_seg: 95.0881, aux_1.loss_ce: 0.1241, aux_1.acc_seg: 94.0502, aux_2.loss_ce: 0.1237, aux_2.loss_dice: 0.2617, aux_2.acc_seg: 96.0448, aux_3.loss_ce: 0.3748, aux_3.acc_seg: 93.1534, loss: 1.0836
2023-05-04 00:18:18,344 - mmseg - INFO - Iter [2200/10000]	lr: 7.997e-02, eta: 1:57:04, time: 0.847, data_time: 0.217, memory: 18377, decode.loss_ce: 0.0934, decode.acc_seg: 95.4558, aux_0.loss_ce: 0.0972, aux_0.acc_seg: 95.3153, aux_1.loss_ce: 0.1186, aux_1.acc_seg: 94.2990, aux_2.loss_ce: 0.1215, aux_2.loss_dice: 0.2601, aux_2.acc_seg: 96.1210, aux_3.loss_ce: 0.3651, aux_3.acc_seg: 93.3704, loss: 1.0559
2023-05-04 00:19:04,647 - mmseg - INFO - Iter [2250/10000]	lr: 7.951e-02, eta: 1:56:23, time: 0.926, data_time: 0.297, memory: 18377, decode.loss_ce: 0.0964, decode.acc_seg: 95.3437, aux_0.loss_ce: 0.0995, aux_0.acc_seg: 95.2137, aux_1.loss_ce: 0.1219, aux_1.acc_seg: 94.2223, aux_2.loss_ce: 0.1229, aux_2.loss_dice: 0.2615, aux_2.acc_seg: 96.0798, aux_3.loss_ce: 0.3751, aux_3.acc_seg: 93.2935, loss: 1.0772
2023-05-04 00:19:47,032 - mmseg - INFO - Iter [2300/10000]	lr: 7.905e-02, eta: 1:55:29, time: 0.848, data_time: 0.217, memory: 18377, decode.loss_ce: 0.0954, decode.acc_seg: 95.3000, aux_0.loss_ce: 0.0995, aux_0.acc_seg: 95.1560, aux_1.loss_ce: 0.1209, aux_1.acc_seg: 94.1643, aux_2.loss_ce: 0.1225, aux_2.loss_dice: 0.2615, aux_2.acc_seg: 96.0759, aux_3.loss_ce: 0.3636, aux_3.acc_seg: 93.3041, loss: 1.0634
2023-05-04 00:20:29,530 - mmseg - INFO - Iter [2350/10000]	lr: 7.859e-02, eta: 1:54:36, time: 0.850, data_time: 0.222, memory: 18377, decode.loss_ce: 0.1030, decode.acc_seg: 95.1163, aux_0.loss_ce: 0.1063, aux_0.acc_seg: 95.0047, aux_1.loss_ce: 0.1270, aux_1.acc_seg: 94.0576, aux_2.loss_ce: 0.1243, aux_2.loss_dice: 0.2622, aux_2.acc_seg: 96.0260, aux_3.loss_ce: 0.3763, aux_3.acc_seg: 93.2550, loss: 1.0992
2023-05-04 00:21:16,399 - mmseg - INFO - Iter [2400/10000]	lr: 7.812e-02, eta: 1:53:57, time: 0.937, data_time: 0.313, memory: 18377, decode.loss_ce: 0.1057, decode.acc_seg: 95.0291, aux_0.loss_ce: 0.1073, aux_0.acc_seg: 94.9573, aux_1.loss_ce: 0.1289, aux_1.acc_seg: 93.9757, aux_2.loss_ce: 0.1245, aux_2.loss_dice: 0.2616, aux_2.acc_seg: 96.0188, aux_3.loss_ce: 0.3802, aux_3.acc_seg: 93.1413, loss: 1.1081
2023-05-04 00:21:59,145 - mmseg - INFO - Iter [2450/10000]	lr: 7.766e-02, eta: 1:53:05, time: 0.855, data_time: 0.221, memory: 18377, decode.loss_ce: 0.0982, decode.acc_seg: 95.3293, aux_0.loss_ce: 0.1016, aux_0.acc_seg: 95.2106, aux_1.loss_ce: 0.1235, aux_1.acc_seg: 94.2217, aux_2.loss_ce: 0.1234, aux_2.loss_dice: 0.2630, aux_2.acc_seg: 96.0812, aux_3.loss_ce: 0.3745, aux_3.acc_seg: 93.4129, loss: 1.0841
2023-05-04 00:22:41,715 - mmseg - INFO - Iter [2500/10000]	lr: 7.720e-02, eta: 1:52:13, time: 0.851, data_time: 0.223, memory: 18377, decode.loss_ce: 0.1026, decode.acc_seg: 95.1823, aux_0.loss_ce: 0.1055, aux_0.acc_seg: 95.0776, aux_1.loss_ce: 0.1284, aux_1.acc_seg: 94.0844, aux_2.loss_ce: 0.1252, aux_2.loss_dice: 0.2632, aux_2.acc_seg: 95.9759, aux_3.loss_ce: 0.3782, aux_3.acc_seg: 93.2559, loss: 1.1030
2023-05-04 00:23:24,020 - mmseg - INFO - Iter [2550/10000]	lr: 7.674e-02, eta: 1:51:21, time: 0.846, data_time: 0.221, memory: 18377, decode.loss_ce: 0.0968, decode.acc_seg: 95.2819, aux_0.loss_ce: 0.0993, aux_0.acc_seg: 95.2064, aux_1.loss_ce: 0.1219, aux_1.acc_seg: 94.1924, aux_2.loss_ce: 0.1202, aux_2.loss_dice: 0.2605, aux_2.acc_seg: 96.1729, aux_3.loss_ce: 0.3609, aux_3.acc_seg: 93.4332, loss: 1.0595
2023-05-04 00:24:10,580 - mmseg - INFO - Iter [2600/10000]	lr: 7.627e-02, eta: 1:50:41, time: 0.931, data_time: 0.305, memory: 18377, decode.loss_ce: 0.0917, decode.acc_seg: 95.3988, aux_0.loss_ce: 0.0950, aux_0.acc_seg: 95.2824, aux_1.loss_ce: 0.1159, aux_1.acc_seg: 94.3075, aux_2.loss_ce: 0.1200, aux_2.loss_dice: 0.2576, aux_2.acc_seg: 96.1745, aux_3.loss_ce: 0.3519, aux_3.acc_seg: 93.4666, loss: 1.0321
2023-05-04 00:24:53,038 - mmseg - INFO - Iter [2650/10000]	lr: 7.581e-02, eta: 1:49:49, time: 0.849, data_time: 0.222, memory: 18377, decode.loss_ce: 0.0906, decode.acc_seg: 95.6300, aux_0.loss_ce: 0.0940, aux_0.acc_seg: 95.5091, aux_1.loss_ce: 0.1162, aux_1.acc_seg: 94.5051, aux_2.loss_ce: 0.1235, aux_2.loss_dice: 0.2615, aux_2.acc_seg: 96.0344, aux_3.loss_ce: 0.3661, aux_3.acc_seg: 93.5242, loss: 1.0519
2023-05-04 00:25:35,877 - mmseg - INFO - Iter [2700/10000]	lr: 7.534e-02, eta: 1:48:59, time: 0.857, data_time: 0.229, memory: 18377, decode.loss_ce: 0.0938, decode.acc_seg: 95.5529, aux_0.loss_ce: 0.0972, aux_0.acc_seg: 95.4551, aux_1.loss_ce: 0.1179, aux_1.acc_seg: 94.4959, aux_2.loss_ce: 0.1251, aux_2.loss_dice: 0.2627, aux_2.acc_seg: 95.9781, aux_3.loss_ce: 0.3655, aux_3.acc_seg: 93.6188, loss: 1.0622
2023-05-04 00:26:17,930 - mmseg - INFO - Iter [2750/10000]	lr: 7.488e-02, eta: 1:48:07, time: 0.841, data_time: 0.208, memory: 18377, decode.loss_ce: 0.0905, decode.acc_seg: 95.6158, aux_0.loss_ce: 0.0931, aux_0.acc_seg: 95.5316, aux_1.loss_ce: 0.1143, aux_1.acc_seg: 94.5914, aux_2.loss_ce: 0.1217, aux_2.loss_dice: 0.2598, aux_2.acc_seg: 96.0739, aux_3.loss_ce: 0.3591, aux_3.acc_seg: 93.7442, loss: 1.0385
2023-05-04 00:27:04,806 - mmseg - INFO - Iter [2800/10000]	lr: 7.441e-02, eta: 1:47:28, time: 0.938, data_time: 0.305, memory: 18377, decode.loss_ce: 0.0863, decode.acc_seg: 95.7217, aux_0.loss_ce: 0.0895, aux_0.acc_seg: 95.6186, aux_1.loss_ce: 0.1110, aux_1.acc_seg: 94.6294, aux_2.loss_ce: 0.1216, aux_2.loss_dice: 0.2592, aux_2.acc_seg: 96.0766, aux_3.loss_ce: 0.3519, aux_3.acc_seg: 93.7933, loss: 1.0195
2023-05-04 00:27:46,838 - mmseg - INFO - Iter [2850/10000]	lr: 7.395e-02, eta: 1:46:36, time: 0.841, data_time: 0.214, memory: 18377, decode.loss_ce: 0.0977, decode.acc_seg: 95.2699, aux_0.loss_ce: 0.1001, aux_0.acc_seg: 95.1688, aux_1.loss_ce: 0.1211, aux_1.acc_seg: 94.2508, aux_2.loss_ce: 0.1225, aux_2.loss_dice: 0.2585, aux_2.acc_seg: 96.0468, aux_3.loss_ce: 0.3590, aux_3.acc_seg: 93.4795, loss: 1.0589
2023-05-04 00:28:29,310 - mmseg - INFO - Iter [2900/10000]	lr: 7.348e-02, eta: 1:45:46, time: 0.849, data_time: 0.227, memory: 18377, decode.loss_ce: 0.0898, decode.acc_seg: 95.6604, aux_0.loss_ce: 0.0925, aux_0.acc_seg: 95.5682, aux_1.loss_ce: 0.1133, aux_1.acc_seg: 94.6284, aux_2.loss_ce: 0.1223, aux_2.loss_dice: 0.2594, aux_2.acc_seg: 96.0641, aux_3.loss_ce: 0.3561, aux_3.acc_seg: 93.7222, loss: 1.0335
2023-05-04 00:29:15,495 - mmseg - INFO - Iter [2950/10000]	lr: 7.302e-02, eta: 1:45:05, time: 0.924, data_time: 0.300, memory: 18377, decode.loss_ce: 0.0880, decode.acc_seg: 95.6241, aux_0.loss_ce: 0.0910, aux_0.acc_seg: 95.5315, aux_1.loss_ce: 0.1122, aux_1.acc_seg: 94.5206, aux_2.loss_ce: 0.1233, aux_2.loss_dice: 0.2593, aux_2.acc_seg: 96.0002, aux_3.loss_ce: 0.3488, aux_3.acc_seg: 93.5887, loss: 1.0226
2023-05-04 00:29:58,496 - mmseg - INFO - Saving checkpoint at 3000 iterations
2023-05-04 00:29:58,854 - mmseg - INFO - Exp name: entextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 00:29:58,854 - mmseg - INFO - Iter [3000/10000]	lr: 7.255e-02, eta: 1:44:17, time: 0.869, data_time: 0.238, memory: 18377, decode.loss_ce: 0.0928, decode.acc_seg: 95.4382, aux_0.loss_ce: 0.0946, aux_0.acc_seg: 95.4303, aux_1.loss_ce: 0.1134, aux_1.acc_seg: 94.5561, aux_2.loss_ce: 0.1199, aux_2.loss_dice: 0.2574, aux_2.acc_seg: 96.1389, aux_3.loss_ce: 0.3497, aux_3.acc_seg: 93.6732, loss: 1.0279
2023-05-04 00:30:10,619 - mmseg - INFO - per class results:
2023-05-04 00:30:10,620 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 78.47 | 83.34 |
|   Building  |  91.1 | 92.41 |
|     Car     | 91.44 | 95.28 |
| Column_Pole | 19.66 | 25.79 |
|    Fence    |  80.1 | 93.04 |
|  Pedestrian | 59.16 | 81.18 |
|     Road    | 97.46 | 98.91 |
|   Sidewalk  | 91.19 | 97.48 |
|  SignSymbol |  9.55 |  9.58 |
|     Sky     |  93.7 | 96.82 |
|     Tree    | 90.59 | 98.43 |
+-------------+-------+-------+
2023-05-04 00:30:10,620 - mmseg - INFO - Summary:
2023-05-04 00:30:10,620 - mmseg - INFO - 
+-------+-------+------+
|  aAcc |  mIoU | mAcc |
+-------+-------+------+
| 95.54 | 72.95 | 79.3 |
+-------+-------+------+
2023-05-04 00:30:10,621 - mmseg - INFO - Exp name: entextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 00:30:10,621 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9554, mIoU: 0.7295, mAcc: 0.7930, IoU.Bicyclist: 0.7847, IoU.Building: 0.9110, IoU.Car: 0.9144, IoU.Column_Pole: 0.1966, IoU.Fence: 0.8010, IoU.Pedestrian: 0.5916, IoU.Road: 0.9746, IoU.Sidewalk: 0.9119, IoU.SignSymbol: 0.0955, IoU.Sky: 0.9370, IoU.Tree: 0.9059, Acc.Bicyclist: 0.8334, Acc.Building: 0.9241, Acc.Car: 0.9528, Acc.Column_Pole: 0.2579, Acc.Fence: 0.9304, Acc.Pedestrian: 0.8118, Acc.Road: 0.9891, Acc.Sidewalk: 0.9748, Acc.SignSymbol: 0.0958, Acc.Sky: 0.9682, Acc.Tree: 0.9843
2023-05-04 00:30:53,038 - mmseg - INFO - Iter [3050/10000]	lr: 7.208e-02, eta: 1:43:54, time: 1.082, data_time: 0.460, memory: 18377, decode.loss_ce: 0.0887, decode.acc_seg: 95.6843, aux_0.loss_ce: 0.0923, aux_0.acc_seg: 95.5514, aux_1.loss_ce: 0.1112, aux_1.acc_seg: 94.6677, aux_2.loss_ce: 0.1218, aux_2.loss_dice: 0.2588, aux_2.acc_seg: 96.0507, aux_3.loss_ce: 0.3491, aux_3.acc_seg: 93.8148, loss: 1.0219
2023-05-04 00:31:34,524 - mmseg - INFO - Iter [3100/10000]	lr: 7.162e-02, eta: 1:43:01, time: 0.830, data_time: 0.209, memory: 18377, decode.loss_ce: 0.0881, decode.acc_seg: 95.6129, aux_0.loss_ce: 0.0909, aux_0.acc_seg: 95.5213, aux_1.loss_ce: 0.1094, aux_1.acc_seg: 94.6507, aux_2.loss_ce: 0.1204, aux_2.loss_dice: 0.2577, aux_2.acc_seg: 96.1345, aux_3.loss_ce: 0.3479, aux_3.acc_seg: 93.7755, loss: 1.0144
2023-05-04 00:32:20,748 - mmseg - INFO - Iter [3150/10000]	lr: 7.115e-02, eta: 1:42:20, time: 0.924, data_time: 0.296, memory: 18377, decode.loss_ce: 0.0881, decode.acc_seg: 95.5963, aux_0.loss_ce: 0.0908, aux_0.acc_seg: 95.5098, aux_1.loss_ce: 0.1111, aux_1.acc_seg: 94.5659, aux_2.loss_ce: 0.1205, aux_2.loss_dice: 0.2587, aux_2.acc_seg: 96.1188, aux_3.loss_ce: 0.3449, aux_3.acc_seg: 93.6296, loss: 1.0142
2023-05-04 00:33:03,574 - mmseg - INFO - Iter [3200/10000]	lr: 7.068e-02, eta: 1:41:31, time: 0.857, data_time: 0.225, memory: 18377, decode.loss_ce: 0.0875, decode.acc_seg: 95.7572, aux_0.loss_ce: 0.0902, aux_0.acc_seg: 95.6684, aux_1.loss_ce: 0.1101, aux_1.acc_seg: 94.7752, aux_2.loss_ce: 0.1229, aux_2.loss_dice: 0.2601, aux_2.acc_seg: 96.0451, aux_3.loss_ce: 0.3541, aux_3.acc_seg: 93.8128, loss: 1.0250
2023-05-04 00:33:46,461 - mmseg - INFO - Iter [3250/10000]	lr: 7.022e-02, eta: 1:40:42, time: 0.858, data_time: 0.238, memory: 18377, decode.loss_ce: 0.0827, decode.acc_seg: 95.8812, aux_0.loss_ce: 0.0856, aux_0.acc_seg: 95.7951, aux_1.loss_ce: 0.1053, aux_1.acc_seg: 94.8796, aux_2.loss_ce: 0.1202, aux_2.loss_dice: 0.2562, aux_2.acc_seg: 96.0966, aux_3.loss_ce: 0.3421, aux_3.acc_seg: 93.9569, loss: 0.9922
2023-05-04 00:34:28,533 - mmseg - INFO - Iter [3300/10000]	lr: 6.975e-02, eta: 1:39:52, time: 0.841, data_time: 0.217, memory: 18377, decode.loss_ce: 0.0875, decode.acc_seg: 95.6279, aux_0.loss_ce: 0.0902, aux_0.acc_seg: 95.5509, aux_1.loss_ce: 0.1087, aux_1.acc_seg: 94.6839, aux_2.loss_ce: 0.1204, aux_2.loss_dice: 0.2572, aux_2.acc_seg: 96.0986, aux_3.loss_ce: 0.3418, aux_3.acc_seg: 93.8454, loss: 1.0057
2023-05-04 00:35:14,764 - mmseg - INFO - Iter [3350/10000]	lr: 6.928e-02, eta: 1:39:10, time: 0.925, data_time: 0.300, memory: 18377, decode.loss_ce: 0.0879, decode.acc_seg: 95.7246, aux_0.loss_ce: 0.0901, aux_0.acc_seg: 95.6602, aux_1.loss_ce: 0.1107, aux_1.acc_seg: 94.7122, aux_2.loss_ce: 0.1220, aux_2.loss_dice: 0.2584, aux_2.acc_seg: 96.0486, aux_3.loss_ce: 0.3473, aux_3.acc_seg: 93.8206, loss: 1.0164
2023-05-04 00:35:57,040 - mmseg - INFO - Iter [3400/10000]	lr: 6.881e-02, eta: 1:38:20, time: 0.846, data_time: 0.221, memory: 18377, decode.loss_ce: 0.0841, decode.acc_seg: 95.8398, aux_0.loss_ce: 0.0869, aux_0.acc_seg: 95.7476, aux_1.loss_ce: 0.1070, aux_1.acc_seg: 94.7955, aux_2.loss_ce: 0.1210, aux_2.loss_dice: 0.2568, aux_2.acc_seg: 96.0440, aux_3.loss_ce: 0.3420, aux_3.acc_seg: 93.8929, loss: 0.9977
2023-05-04 00:36:38,849 - mmseg - INFO - Iter [3450/10000]	lr: 6.834e-02, eta: 1:37:30, time: 0.836, data_time: 0.213, memory: 18377, decode.loss_ce: 0.0820, decode.acc_seg: 95.9299, aux_0.loss_ce: 0.0847, aux_0.acc_seg: 95.8526, aux_1.loss_ce: 0.1039, aux_1.acc_seg: 94.9698, aux_2.loss_ce: 0.1214, aux_2.loss_dice: 0.2568, aux_2.acc_seg: 95.9997, aux_3.loss_ce: 0.3420, aux_3.acc_seg: 94.0638, loss: 0.9909
2023-05-04 00:37:24,928 - mmseg - INFO - Iter [3500/10000]	lr: 6.787e-02, eta: 1:36:48, time: 0.922, data_time: 0.298, memory: 18377, decode.loss_ce: 0.0770, decode.acc_seg: 96.0918, aux_0.loss_ce: 0.0798, aux_0.acc_seg: 95.9883, aux_1.loss_ce: 0.0995, aux_1.acc_seg: 95.0405, aux_2.loss_ce: 0.1210, aux_2.loss_dice: 0.2562, aux_2.acc_seg: 96.0281, aux_3.loss_ce: 0.3337, aux_3.acc_seg: 94.0548, loss: 0.9670
2023-05-04 00:38:07,006 - mmseg - INFO - Iter [3550/10000]	lr: 6.740e-02, eta: 1:35:59, time: 0.842, data_time: 0.217, memory: 18377, decode.loss_ce: 0.0834, decode.acc_seg: 95.8133, aux_0.loss_ce: 0.0858, aux_0.acc_seg: 95.7479, aux_1.loss_ce: 0.1067, aux_1.acc_seg: 94.7520, aux_2.loss_ce: 0.1219, aux_2.loss_dice: 0.2573, aux_2.acc_seg: 96.0228, aux_3.loss_ce: 0.3420, aux_3.acc_seg: 93.8291, loss: 0.9972
2023-05-04 00:38:48,994 - mmseg - INFO - Iter [3600/10000]	lr: 6.693e-02, eta: 1:35:09, time: 0.840, data_time: 0.210, memory: 18377, decode.loss_ce: 0.0847, decode.acc_seg: 95.8098, aux_0.loss_ce: 0.0870, aux_0.acc_seg: 95.7506, aux_1.loss_ce: 0.1064, aux_1.acc_seg: 94.8558, aux_2.loss_ce: 0.1213, aux_2.loss_dice: 0.2570, aux_2.acc_seg: 96.0343, aux_3.loss_ce: 0.3407, aux_3.acc_seg: 93.9603, loss: 0.9971
2023-05-04 00:39:31,068 - mmseg - INFO - Iter [3650/10000]	lr: 6.646e-02, eta: 1:34:20, time: 0.841, data_time: 0.220, memory: 18377, decode.loss_ce: 0.0776, decode.acc_seg: 96.1553, aux_0.loss_ce: 0.0798, aux_0.acc_seg: 96.0937, aux_1.loss_ce: 0.0999, aux_1.acc_seg: 95.1321, aux_2.loss_ce: 0.1207, aux_2.loss_dice: 0.2557, aux_2.acc_seg: 96.0378, aux_3.loss_ce: 0.3359, aux_3.acc_seg: 94.2166, loss: 0.9697
2023-05-04 00:40:17,742 - mmseg - INFO - Iter [3700/10000]	lr: 6.599e-02, eta: 1:33:39, time: 0.933, data_time: 0.307, memory: 18377, decode.loss_ce: 0.0846, decode.acc_seg: 95.8296, aux_0.loss_ce: 0.0872, aux_0.acc_seg: 95.7460, aux_1.loss_ce: 0.1052, aux_1.acc_seg: 94.8766, aux_2.loss_ce: 0.1206, aux_2.loss_dice: 0.2562, aux_2.acc_seg: 96.0883, aux_3.loss_ce: 0.3391, aux_3.acc_seg: 93.9127, loss: 0.9929
2023-05-04 00:40:59,801 - mmseg - INFO - Iter [3750/10000]	lr: 6.552e-02, eta: 1:32:51, time: 0.841, data_time: 0.219, memory: 18377, decode.loss_ce: 0.0798, decode.acc_seg: 96.0694, aux_0.loss_ce: 0.0822, aux_0.acc_seg: 95.9881, aux_1.loss_ce: 0.1019, aux_1.acc_seg: 95.0460, aux_2.loss_ce: 0.1217, aux_2.loss_dice: 0.2563, aux_2.acc_seg: 95.9999, aux_3.loss_ce: 0.3382, aux_3.acc_seg: 94.1534, loss: 0.9800
2023-05-04 00:41:42,434 - mmseg - INFO - Iter [3800/10000]	lr: 6.505e-02, eta: 1:32:03, time: 0.853, data_time: 0.230, memory: 18377, decode.loss_ce: 0.0809, decode.acc_seg: 95.9235, aux_0.loss_ce: 0.0833, aux_0.acc_seg: 95.8342, aux_1.loss_ce: 0.1020, aux_1.acc_seg: 94.9509, aux_2.loss_ce: 0.1220, aux_2.loss_dice: 0.2564, aux_2.acc_seg: 95.9998, aux_3.loss_ce: 0.3325, aux_3.acc_seg: 93.9795, loss: 0.9771
2023-05-04 00:42:25,227 - mmseg - INFO - Iter [3850/10000]	lr: 6.457e-02, eta: 1:31:15, time: 0.856, data_time: 0.234, memory: 18377, decode.loss_ce: 0.0820, decode.acc_seg: 95.9724, aux_0.loss_ce: 0.0843, aux_0.acc_seg: 95.9133, aux_1.loss_ce: 0.1044, aux_1.acc_seg: 95.0104, aux_2.loss_ce: 0.1227, aux_2.loss_dice: 0.2578, aux_2.acc_seg: 95.9968, aux_3.loss_ce: 0.3428, aux_3.acc_seg: 94.1077, loss: 0.9941
2023-05-04 00:43:11,510 - mmseg - INFO - Iter [3900/10000]	lr: 6.410e-02, eta: 1:30:34, time: 0.926, data_time: 0.298, memory: 18377, decode.loss_ce: 0.0802, decode.acc_seg: 95.9569, aux_0.loss_ce: 0.0829, aux_0.acc_seg: 95.8729, aux_1.loss_ce: 0.1030, aux_1.acc_seg: 94.9242, aux_2.loss_ce: 0.1204, aux_2.loss_dice: 0.2554, aux_2.acc_seg: 96.0439, aux_3.loss_ce: 0.3341, aux_3.acc_seg: 93.9703, loss: 0.9760
2023-05-04 00:43:56,078 - mmseg - INFO - Iter [3950/10000]	lr: 6.363e-02, eta: 1:29:49, time: 0.891, data_time: 0.252, memory: 18377, decode.loss_ce: 0.0801, decode.acc_seg: 95.9870, aux_0.loss_ce: 0.0822, aux_0.acc_seg: 95.9230, aux_1.loss_ce: 0.1023, aux_1.acc_seg: 94.9691, aux_2.loss_ce: 0.1211, aux_2.loss_dice: 0.2551, aux_2.acc_seg: 96.0250, aux_3.loss_ce: 0.3347, aux_3.acc_seg: 94.0664, loss: 0.9756
2023-05-04 00:44:38,581 - mmseg - INFO - Saving checkpoint at 4000 iterations
2023-05-04 00:44:38,891 - mmseg - INFO - Exp name: entextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 00:44:38,891 - mmseg - INFO - Iter [4000/10000]	lr: 6.315e-02, eta: 1:29:02, time: 0.858, data_time: 0.219, memory: 18377, decode.loss_ce: 0.0821, decode.acc_seg: 95.9505, aux_0.loss_ce: 0.0850, aux_0.acc_seg: 95.8500, aux_1.loss_ce: 0.1051, aux_1.acc_seg: 94.9144, aux_2.loss_ce: 0.1229, aux_2.loss_dice: 0.2578, aux_2.acc_seg: 95.9716, aux_3.loss_ce: 0.3390, aux_3.acc_seg: 93.9571, loss: 0.9919
2023-05-04 00:44:47,726 - mmseg - INFO - per class results:
2023-05-04 00:44:47,728 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 84.57 | 94.96 |
|   Building  | 93.48 | 95.07 |
|     Car     | 92.49 | 96.28 |
| Column_Pole |  9.94 | 10.29 |
|    Fence    | 81.89 | 95.65 |
|  Pedestrian | 65.72 | 80.31 |
|     Road    | 97.43 | 97.99 |
|   Sidewalk  | 90.97 | 98.02 |
|  SignSymbol |  0.22 |  0.22 |
|     Sky     | 93.71 | 96.02 |
|     Tree    | 92.64 | 98.56 |
+-------------+-------+-------+
2023-05-04 00:44:47,728 - mmseg - INFO - Summary:
2023-05-04 00:44:47,728 - mmseg - INFO - 
+-------+------+-------+
|  aAcc | mIoU |  mAcc |
+-------+------+-------+
| 96.24 | 73.0 | 78.49 |
+-------+------+-------+
2023-05-04 00:44:47,728 - mmseg - INFO - Exp name: entextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 00:44:47,728 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9624, mIoU: 0.7300, mAcc: 0.7849, IoU.Bicyclist: 0.8457, IoU.Building: 0.9348, IoU.Car: 0.9249, IoU.Column_Pole: 0.0994, IoU.Fence: 0.8189, IoU.Pedestrian: 0.6572, IoU.Road: 0.9743, IoU.Sidewalk: 0.9097, IoU.SignSymbol: 0.0022, IoU.Sky: 0.9371, IoU.Tree: 0.9264, Acc.Bicyclist: 0.9496, Acc.Building: 0.9507, Acc.Car: 0.9628, Acc.Column_Pole: 0.1029, Acc.Fence: 0.9565, Acc.Pedestrian: 0.8031, Acc.Road: 0.9799, Acc.Sidewalk: 0.9802, Acc.SignSymbol: 0.0022, Acc.Sky: 0.9602, Acc.Tree: 0.9856
2023-05-04 00:45:34,404 - mmseg - INFO - Iter [4050/10000]	lr: 6.268e-02, eta: 1:28:34, time: 1.108, data_time: 0.477, memory: 18377, decode.loss_ce: 0.0771, decode.acc_seg: 96.1269, aux_0.loss_ce: 0.0791, aux_0.acc_seg: 96.0751, aux_1.loss_ce: 0.0986, aux_1.acc_seg: 95.1381, aux_2.loss_ce: 0.1197, aux_2.loss_dice: 0.2546, aux_2.acc_seg: 96.0490, aux_3.loss_ce: 0.3296, aux_3.acc_seg: 94.2414, loss: 0.9587
2023-05-04 00:46:19,014 - mmseg - INFO - Iter [4100/10000]	lr: 6.221e-02, eta: 1:27:49, time: 0.892, data_time: 0.253, memory: 18377, decode.loss_ce: 0.0794, decode.acc_seg: 96.0446, aux_0.loss_ce: 0.0819, aux_0.acc_seg: 95.9670, aux_1.loss_ce: 0.1015, aux_1.acc_seg: 95.0368, aux_2.loss_ce: 0.1224, aux_2.loss_dice: 0.2571, aux_2.acc_seg: 95.9634, aux_3.loss_ce: 0.3339, aux_3.acc_seg: 94.1408, loss: 0.9764
2023-05-04 00:47:02,792 - mmseg - INFO - Iter [4150/10000]	lr: 6.173e-02, eta: 1:27:03, time: 0.876, data_time: 0.241, memory: 18377, decode.loss_ce: 0.0770, decode.acc_seg: 96.1306, aux_0.loss_ce: 0.0791, aux_0.acc_seg: 96.0640, aux_1.loss_ce: 0.0971, aux_1.acc_seg: 95.1938, aux_2.loss_ce: 0.1190, aux_2.loss_dice: 0.2543, aux_2.acc_seg: 96.1078, aux_3.loss_ce: 0.3280, aux_3.acc_seg: 94.2300, loss: 0.9545
2023-05-04 00:47:46,223 - mmseg - INFO - Iter [4200/10000]	lr: 6.126e-02, eta: 1:26:17, time: 0.869, data_time: 0.241, memory: 18377, decode.loss_ce: 0.0765, decode.acc_seg: 96.0891, aux_0.loss_ce: 0.0793, aux_0.acc_seg: 96.0047, aux_1.loss_ce: 0.0991, aux_1.acc_seg: 95.0513, aux_2.loss_ce: 0.1220, aux_2.loss_dice: 0.2561, aux_2.acc_seg: 95.9472, aux_3.loss_ce: 0.3274, aux_3.acc_seg: 94.0888, loss: 0.9603
2023-05-04 00:48:33,428 - mmseg - INFO - Iter [4250/10000]	lr: 6.078e-02, eta: 1:25:36, time: 0.944, data_time: 0.311, memory: 18377, decode.loss_ce: 0.0711, decode.acc_seg: 96.3130, aux_0.loss_ce: 0.0738, aux_0.acc_seg: 96.2258, aux_1.loss_ce: 0.0929, aux_1.acc_seg: 95.3112, aux_2.loss_ce: 0.1194, aux_2.loss_dice: 0.2536, aux_2.acc_seg: 96.0289, aux_3.loss_ce: 0.3204, aux_3.acc_seg: 94.3202, loss: 0.9311
2023-05-04 00:49:15,770 - mmseg - INFO - Iter [4300/10000]	lr: 6.031e-02, eta: 1:24:48, time: 0.847, data_time: 0.224, memory: 18377, decode.loss_ce: 0.0780, decode.acc_seg: 96.0080, aux_0.loss_ce: 0.0800, aux_0.acc_seg: 95.9629, aux_1.loss_ce: 0.0988, aux_1.acc_seg: 95.0005, aux_2.loss_ce: 0.1193, aux_2.loss_dice: 0.2536, aux_2.acc_seg: 96.0519, aux_3.loss_ce: 0.3223, aux_3.acc_seg: 94.0785, loss: 0.9520
2023-05-04 00:49:58,549 - mmseg - INFO - Iter [4350/10000]	lr: 5.983e-02, eta: 1:24:01, time: 0.856, data_time: 0.231, memory: 18377, decode.loss_ce: 0.0791, decode.acc_seg: 96.0489, aux_0.loss_ce: 0.0809, aux_0.acc_seg: 95.9875, aux_1.loss_ce: 0.1008, aux_1.acc_seg: 95.0639, aux_2.loss_ce: 0.1194, aux_2.loss_dice: 0.2548, aux_2.acc_seg: 96.0623, aux_3.loss_ce: 0.3286, aux_3.acc_seg: 94.1960, loss: 0.9636
2023-05-04 00:50:41,895 - mmseg - INFO - Iter [4400/10000]	lr: 5.935e-02, eta: 1:23:15, time: 0.867, data_time: 0.241, memory: 18377, decode.loss_ce: 0.0775, decode.acc_seg: 96.0130, aux_0.loss_ce: 0.0797, aux_0.acc_seg: 95.9586, aux_1.loss_ce: 0.0987, aux_1.acc_seg: 95.0327, aux_2.loss_ce: 0.1185, aux_2.loss_dice: 0.2531, aux_2.acc_seg: 96.1119, aux_3.loss_ce: 0.3206, aux_3.acc_seg: 94.1433, loss: 0.9481
2023-05-04 00:51:27,556 - mmseg - INFO - Iter [4450/10000]	lr: 5.888e-02, eta: 1:22:31, time: 0.913, data_time: 0.291, memory: 18377, decode.loss_ce: 0.0759, decode.acc_seg: 96.1516, aux_0.loss_ce: 0.0783, aux_0.acc_seg: 96.0929, aux_1.loss_ce: 0.0974, aux_1.acc_seg: 95.1763, aux_2.loss_ce: 0.1207, aux_2.loss_dice: 0.2554, aux_2.acc_seg: 96.0047, aux_3.loss_ce: 0.3291, aux_3.acc_seg: 94.2200, loss: 0.9568
2023-05-04 00:52:09,761 - mmseg - INFO - Iter [4500/10000]	lr: 5.840e-02, eta: 1:21:44, time: 0.844, data_time: 0.220, memory: 18377, decode.loss_ce: 0.0737, decode.acc_seg: 96.2663, aux_0.loss_ce: 0.0761, aux_0.acc_seg: 96.1829, aux_1.loss_ce: 0.0955, aux_1.acc_seg: 95.2727, aux_2.loss_ce: 0.1205, aux_2.loss_dice: 0.2546, aux_2.acc_seg: 96.0229, aux_3.loss_ce: 0.3252, aux_3.acc_seg: 94.2764, loss: 0.9457
2023-05-04 00:52:51,689 - mmseg - INFO - Iter [4550/10000]	lr: 5.792e-02, eta: 1:20:56, time: 0.839, data_time: 0.217, memory: 18377, decode.loss_ce: 0.0765, decode.acc_seg: 96.1806, aux_0.loss_ce: 0.0785, aux_0.acc_seg: 96.1324, aux_1.loss_ce: 0.0971, aux_1.acc_seg: 95.2485, aux_2.loss_ce: 0.1214, aux_2.loss_dice: 0.2553, aux_2.acc_seg: 96.0118, aux_3.loss_ce: 0.3303, aux_3.acc_seg: 94.1893, loss: 0.9590
2023-05-04 00:53:38,905 - mmseg - INFO - Iter [4600/10000]	lr: 5.744e-02, eta: 1:20:15, time: 0.944, data_time: 0.322, memory: 18377, decode.loss_ce: 0.0756, decode.acc_seg: 96.1862, aux_0.loss_ce: 0.0775, aux_0.acc_seg: 96.1369, aux_1.loss_ce: 0.0961, aux_1.acc_seg: 95.2297, aux_2.loss_ce: 0.1193, aux_2.loss_dice: 0.2545, aux_2.acc_seg: 96.0753, aux_3.loss_ce: 0.3230, aux_3.acc_seg: 94.2326, loss: 0.9460
2023-05-04 00:54:21,014 - mmseg - INFO - Iter [4650/10000]	lr: 5.696e-02, eta: 1:19:27, time: 0.842, data_time: 0.217, memory: 18377, decode.loss_ce: 0.0722, decode.acc_seg: 96.2873, aux_0.loss_ce: 0.0745, aux_0.acc_seg: 96.2111, aux_1.loss_ce: 0.0934, aux_1.acc_seg: 95.3041, aux_2.loss_ce: 0.1203, aux_2.loss_dice: 0.2541, aux_2.acc_seg: 96.0116, aux_3.loss_ce: 0.3195, aux_3.acc_seg: 94.3572, loss: 0.9339
2023-05-04 00:55:03,260 - mmseg - INFO - Iter [4700/10000]	lr: 5.648e-02, eta: 1:18:40, time: 0.845, data_time: 0.224, memory: 18377, decode.loss_ce: 0.0754, decode.acc_seg: 96.2373, aux_0.loss_ce: 0.0780, aux_0.acc_seg: 96.1520, aux_1.loss_ce: 0.0967, aux_1.acc_seg: 95.2714, aux_2.loss_ce: 0.1214, aux_2.loss_dice: 0.2545, aux_2.acc_seg: 95.9767, aux_3.loss_ce: 0.3282, aux_3.acc_seg: 94.2925, loss: 0.9542
2023-05-04 00:55:44,818 - mmseg - INFO - Iter [4750/10000]	lr: 5.600e-02, eta: 1:17:52, time: 0.831, data_time: 0.205, memory: 18377, decode.loss_ce: 0.0756, decode.acc_seg: 96.2072, aux_0.loss_ce: 0.0776, aux_0.acc_seg: 96.1619, aux_1.loss_ce: 0.0960, aux_1.acc_seg: 95.2844, aux_2.loss_ce: 0.1201, aux_2.loss_dice: 0.2546, aux_2.acc_seg: 96.0482, aux_3.loss_ce: 0.3275, aux_3.acc_seg: 94.3200, loss: 0.9515
2023-05-04 00:56:31,278 - mmseg - INFO - Iter [4800/10000]	lr: 5.552e-02, eta: 1:17:10, time: 0.929, data_time: 0.308, memory: 18377, decode.loss_ce: 0.0749, decode.acc_seg: 96.2487, aux_0.loss_ce: 0.0771, aux_0.acc_seg: 96.1884, aux_1.loss_ce: 0.0958, aux_1.acc_seg: 95.3117, aux_2.loss_ce: 0.1207, aux_2.loss_dice: 0.2553, aux_2.acc_seg: 96.0291, aux_3.loss_ce: 0.3272, aux_3.acc_seg: 94.3237, loss: 0.9511
2023-05-04 00:57:13,553 - mmseg - INFO - Iter [4850/10000]	lr: 5.504e-02, eta: 1:16:23, time: 0.846, data_time: 0.222, memory: 18377, decode.loss_ce: 0.0759, decode.acc_seg: 96.2258, aux_0.loss_ce: 0.0776, aux_0.acc_seg: 96.1875, aux_1.loss_ce: 0.0964, aux_1.acc_seg: 95.3107, aux_2.loss_ce: 0.1201, aux_2.loss_dice: 0.2557, aux_2.acc_seg: 96.0603, aux_3.loss_ce: 0.3292, aux_3.acc_seg: 94.3445, loss: 0.9549
2023-05-04 00:57:56,273 - mmseg - INFO - Iter [4900/10000]	lr: 5.456e-02, eta: 1:15:36, time: 0.854, data_time: 0.228, memory: 18377, decode.loss_ce: 0.0718, decode.acc_seg: 96.3090, aux_0.loss_ce: 0.0739, aux_0.acc_seg: 96.2498, aux_1.loss_ce: 0.0928, aux_1.acc_seg: 95.3280, aux_2.loss_ce: 0.1186, aux_2.loss_dice: 0.2517, aux_2.acc_seg: 96.0340, aux_3.loss_ce: 0.3167, aux_3.acc_seg: 94.3480, loss: 0.9255
2023-05-04 00:58:37,716 - mmseg - INFO - Iter [4950/10000]	lr: 5.408e-02, eta: 1:14:49, time: 0.829, data_time: 0.210, memory: 18377, decode.loss_ce: 0.0755, decode.acc_seg: 96.0872, aux_0.loss_ce: 0.0773, aux_0.acc_seg: 96.0475, aux_1.loss_ce: 0.0955, aux_1.acc_seg: 95.1655, aux_2.loss_ce: 0.1201, aux_2.loss_dice: 0.2542, aux_2.acc_seg: 96.0243, aux_3.loss_ce: 0.3196, aux_3.acc_seg: 94.1846, loss: 0.9422
2023-05-04 00:59:23,627 - mmseg - INFO - Saving checkpoint at 5000 iterations
2023-05-04 00:59:23,935 - mmseg - INFO - Exp name: entextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 00:59:23,935 - mmseg - INFO - Iter [5000/10000]	lr: 5.360e-02, eta: 1:14:06, time: 0.926, data_time: 0.295, memory: 18377, decode.loss_ce: 0.0735, decode.acc_seg: 96.2193, aux_0.loss_ce: 0.0760, aux_0.acc_seg: 96.1486, aux_1.loss_ce: 0.0944, aux_1.acc_seg: 95.2400, aux_2.loss_ce: 0.1205, aux_2.loss_dice: 0.2535, aux_2.acc_seg: 95.9861, aux_3.loss_ce: 0.3183, aux_3.acc_seg: 94.2396, loss: 0.9362
2023-05-04 00:59:37,670 - mmseg - INFO - per class results:
2023-05-04 00:59:37,671 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 84.08 | 88.12 |
|   Building  | 93.66 | 95.36 |
|     Car     | 92.43 | 95.62 |
| Column_Pole | 28.71 | 34.92 |
|    Fence    | 82.55 | 94.25 |
|  Pedestrian | 64.94 | 88.91 |
|     Road    | 97.58 | 98.49 |
|   Sidewalk  | 91.39 | 98.06 |
|  SignSymbol |  1.54 |  1.54 |
|     Sky     | 94.02 | 96.17 |
|     Tree    | 93.04 | 98.13 |
+-------------+-------+-------+
2023-05-04 00:59:37,671 - mmseg - INFO - Summary:
2023-05-04 00:59:37,671 - mmseg - INFO - 
+-------+------+-------+
|  aAcc | mIoU |  mAcc |
+-------+------+-------+
| 96.39 | 74.9 | 80.87 |
+-------+------+-------+
2023-05-04 00:59:37,672 - mmseg - INFO - Exp name: entextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 00:59:37,672 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9639, mIoU: 0.7490, mAcc: 0.8087, IoU.Bicyclist: 0.8408, IoU.Building: 0.9366, IoU.Car: 0.9243, IoU.Column_Pole: 0.2871, IoU.Fence: 0.8255, IoU.Pedestrian: 0.6494, IoU.Road: 0.9758, IoU.Sidewalk: 0.9139, IoU.SignSymbol: 0.0154, IoU.Sky: 0.9402, IoU.Tree: 0.9304, Acc.Bicyclist: 0.8812, Acc.Building: 0.9536, Acc.Car: 0.9562, Acc.Column_Pole: 0.3492, Acc.Fence: 0.9425, Acc.Pedestrian: 0.8891, Acc.Road: 0.9849, Acc.Sidewalk: 0.9806, Acc.SignSymbol: 0.0154, Acc.Sky: 0.9617, Acc.Tree: 0.9813
2023-05-04 01:00:19,297 - mmseg - INFO - Iter [5050/10000]	lr: 5.312e-02, eta: 1:13:32, time: 1.105, data_time: 0.483, memory: 18377, decode.loss_ce: 0.0720, decode.acc_seg: 96.3625, aux_0.loss_ce: 0.0742, aux_0.acc_seg: 96.3135, aux_1.loss_ce: 0.0925, aux_1.acc_seg: 95.4404, aux_2.loss_ce: 0.1195, aux_2.loss_dice: 0.2543, aux_2.acc_seg: 96.0744, aux_3.loss_ce: 0.3222, aux_3.acc_seg: 94.4879, loss: 0.9348
2023-05-04 01:01:01,236 - mmseg - INFO - Iter [5100/10000]	lr: 5.263e-02, eta: 1:12:45, time: 0.839, data_time: 0.219, memory: 18377, decode.loss_ce: 0.0755, decode.acc_seg: 96.2093, aux_0.loss_ce: 0.0773, aux_0.acc_seg: 96.1649, aux_1.loss_ce: 0.0961, aux_1.acc_seg: 95.2677, aux_2.loss_ce: 0.1201, aux_2.loss_dice: 0.2544, aux_2.acc_seg: 96.0401, aux_3.loss_ce: 0.3303, aux_3.acc_seg: 94.2531, loss: 0.9537
2023-05-04 01:01:46,994 - mmseg - INFO - Iter [5150/10000]	lr: 5.215e-02, eta: 1:12:02, time: 0.915, data_time: 0.295, memory: 18377, decode.loss_ce: 0.0755, decode.acc_seg: 96.1948, aux_0.loss_ce: 0.0771, aux_0.acc_seg: 96.1562, aux_1.loss_ce: 0.0955, aux_1.acc_seg: 95.2410, aux_2.loss_ce: 0.1182, aux_2.loss_dice: 0.2521, aux_2.acc_seg: 96.0671, aux_3.loss_ce: 0.3167, aux_3.acc_seg: 94.3600, loss: 0.9351
2023-05-04 01:02:29,369 - mmseg - INFO - Iter [5200/10000]	lr: 5.167e-02, eta: 1:11:15, time: 0.847, data_time: 0.220, memory: 18377, decode.loss_ce: 0.0785, decode.acc_seg: 95.9604, aux_0.loss_ce: 0.0803, aux_0.acc_seg: 95.9123, aux_1.loss_ce: 0.0997, aux_1.acc_seg: 95.0023, aux_2.loss_ce: 0.1195, aux_2.loss_dice: 0.2531, aux_2.acc_seg: 96.0390, aux_3.loss_ce: 0.3206, aux_3.acc_seg: 94.1105, loss: 0.9517
2023-05-04 01:03:11,648 - mmseg - INFO - Iter [5250/10000]	lr: 5.118e-02, eta: 1:10:29, time: 0.846, data_time: 0.222, memory: 18377, decode.loss_ce: 0.0737, decode.acc_seg: 96.1812, aux_0.loss_ce: 0.0757, aux_0.acc_seg: 96.1281, aux_1.loss_ce: 0.0948, aux_1.acc_seg: 95.1874, aux_2.loss_ce: 0.1167, aux_2.loss_dice: 0.2504, aux_2.acc_seg: 96.1253, aux_3.loss_ce: 0.3133, aux_3.acc_seg: 94.2225, loss: 0.9247
2023-05-04 01:03:54,071 - mmseg - INFO - Iter [5300/10000]	lr: 5.070e-02, eta: 1:09:42, time: 0.848, data_time: 0.225, memory: 18377, decode.loss_ce: 0.0717, decode.acc_seg: 96.3240, aux_0.loss_ce: 0.0739, aux_0.acc_seg: 96.2636, aux_1.loss_ce: 0.0920, aux_1.acc_seg: 95.3789, aux_2.loss_ce: 0.1199, aux_2.loss_dice: 0.2537, aux_2.acc_seg: 96.0132, aux_3.loss_ce: 0.3168, aux_3.acc_seg: 94.3917, loss: 0.9278
2023-05-04 01:04:39,789 - mmseg - INFO - Iter [5350/10000]	lr: 5.021e-02, eta: 1:08:59, time: 0.914, data_time: 0.295, memory: 18377, decode.loss_ce: 0.0735, decode.acc_seg: 96.1993, aux_0.loss_ce: 0.0753, aux_0.acc_seg: 96.1577, aux_1.loss_ce: 0.0941, aux_1.acc_seg: 95.2340, aux_2.loss_ce: 0.1197, aux_2.loss_dice: 0.2531, aux_2.acc_seg: 95.9951, aux_3.loss_ce: 0.3170, aux_3.acc_seg: 94.2910, loss: 0.9327
2023-05-04 01:05:22,385 - mmseg - INFO - Iter [5400/10000]	lr: 4.972e-02, eta: 1:08:13, time: 0.852, data_time: 0.227, memory: 18377, decode.loss_ce: 0.0759, decode.acc_seg: 96.1304, aux_0.loss_ce: 0.0782, aux_0.acc_seg: 96.0788, aux_1.loss_ce: 0.0979, aux_1.acc_seg: 95.1142, aux_2.loss_ce: 0.1234, aux_2.loss_dice: 0.2560, aux_2.acc_seg: 95.9431, aux_3.loss_ce: 0.3278, aux_3.acc_seg: 94.0905, loss: 0.9592
2023-05-04 01:06:04,684 - mmseg - INFO - Iter [5450/10000]	lr: 4.924e-02, eta: 1:07:26, time: 0.846, data_time: 0.222, memory: 18377, decode.loss_ce: 0.0686, decode.acc_seg: 96.4286, aux_0.loss_ce: 0.0704, aux_0.acc_seg: 96.3809, aux_1.loss_ce: 0.0884, aux_1.acc_seg: 95.5248, aux_2.loss_ce: 0.1176, aux_2.loss_dice: 0.2511, aux_2.acc_seg: 96.0710, aux_3.loss_ce: 0.3115, aux_3.acc_seg: 94.5013, loss: 0.9076
2023-05-04 01:06:47,231 - mmseg - INFO - Iter [5500/10000]	lr: 4.875e-02, eta: 1:06:40, time: 0.851, data_time: 0.230, memory: 18377, decode.loss_ce: 0.0712, decode.acc_seg: 96.3527, aux_0.loss_ce: 0.0731, aux_0.acc_seg: 96.3167, aux_1.loss_ce: 0.0908, aux_1.acc_seg: 95.4682, aux_2.loss_ce: 0.1190, aux_2.loss_dice: 0.2520, aux_2.acc_seg: 96.0353, aux_3.loss_ce: 0.3170, aux_3.acc_seg: 94.5164, loss: 0.9232
2023-05-04 01:07:34,581 - mmseg - INFO - Iter [5550/10000]	lr: 4.826e-02, eta: 1:05:58, time: 0.947, data_time: 0.322, memory: 18377, decode.loss_ce: 0.0725, decode.acc_seg: 96.2966, aux_0.loss_ce: 0.0746, aux_0.acc_seg: 96.2483, aux_1.loss_ce: 0.0925, aux_1.acc_seg: 95.3688, aux_2.loss_ce: 0.1203, aux_2.loss_dice: 0.2528, aux_2.acc_seg: 95.9712, aux_3.loss_ce: 0.3170, aux_3.acc_seg: 94.3344, loss: 0.9297
2023-05-04 01:08:16,969 - mmseg - INFO - Iter [5600/10000]	lr: 4.778e-02, eta: 1:05:12, time: 0.848, data_time: 0.230, memory: 18377, decode.loss_ce: 0.0742, decode.acc_seg: 96.2051, aux_0.loss_ce: 0.0760, aux_0.acc_seg: 96.1565, aux_1.loss_ce: 0.0943, aux_1.acc_seg: 95.2675, aux_2.loss_ce: 0.1199, aux_2.loss_dice: 0.2533, aux_2.acc_seg: 96.0309, aux_3.loss_ce: 0.3205, aux_3.acc_seg: 94.3149, loss: 0.9381
2023-05-04 01:08:58,987 - mmseg - INFO - Iter [5650/10000]	lr: 4.729e-02, eta: 1:04:26, time: 0.840, data_time: 0.221, memory: 18377, decode.loss_ce: 0.0679, decode.acc_seg: 96.5574, aux_0.loss_ce: 0.0701, aux_0.acc_seg: 96.5022, aux_1.loss_ce: 0.0879, aux_1.acc_seg: 95.6618, aux_2.loss_ce: 0.1186, aux_2.loss_dice: 0.2524, aux_2.acc_seg: 96.0597, aux_3.loss_ce: 0.3183, aux_3.acc_seg: 94.6981, loss: 0.9153
2023-05-04 01:09:44,669 - mmseg - INFO - Iter [5700/10000]	lr: 4.680e-02, eta: 1:03:42, time: 0.914, data_time: 0.295, memory: 18377, decode.loss_ce: 0.0698, decode.acc_seg: 96.4126, aux_0.loss_ce: 0.0719, aux_0.acc_seg: 96.3547, aux_1.loss_ce: 0.0897, aux_1.acc_seg: 95.4915, aux_2.loss_ce: 0.1194, aux_2.loss_dice: 0.2524, aux_2.acc_seg: 96.0044, aux_3.loss_ce: 0.3166, aux_3.acc_seg: 94.4290, loss: 0.9197
2023-05-04 01:10:26,481 - mmseg - INFO - Iter [5750/10000]	lr: 4.631e-02, eta: 1:02:56, time: 0.836, data_time: 0.213, memory: 18377, decode.loss_ce: 0.0740, decode.acc_seg: 96.2217, aux_0.loss_ce: 0.0762, aux_0.acc_seg: 96.1784, aux_1.loss_ce: 0.0937, aux_1.acc_seg: 95.3065, aux_2.loss_ce: 0.1194, aux_2.loss_dice: 0.2517, aux_2.acc_seg: 96.0121, aux_3.loss_ce: 0.3166, aux_3.acc_seg: 94.3766, loss: 0.9317
2023-05-04 01:11:09,018 - mmseg - INFO - Iter [5800/10000]	lr: 4.582e-02, eta: 1:02:10, time: 0.851, data_time: 0.227, memory: 18377, decode.loss_ce: 0.0701, decode.acc_seg: 96.4580, aux_0.loss_ce: 0.0723, aux_0.acc_seg: 96.4035, aux_1.loss_ce: 0.0911, aux_1.acc_seg: 95.5212, aux_2.loss_ce: 0.1193, aux_2.loss_dice: 0.2541, aux_2.acc_seg: 96.0392, aux_3.loss_ce: 0.3195, aux_3.acc_seg: 94.5370, loss: 0.9264
2023-05-04 01:11:50,770 - mmseg - INFO - Iter [5850/10000]	lr: 4.533e-02, eta: 1:01:24, time: 0.835, data_time: 0.213, memory: 18377, decode.loss_ce: 0.0744, decode.acc_seg: 96.1716, aux_0.loss_ce: 0.0767, aux_0.acc_seg: 96.1063, aux_1.loss_ce: 0.0938, aux_1.acc_seg: 95.2586, aux_2.loss_ce: 0.1186, aux_2.loss_dice: 0.2509, aux_2.acc_seg: 96.0126, aux_3.loss_ce: 0.3133, aux_3.acc_seg: 94.2974, loss: 0.9276
2023-05-04 01:12:36,934 - mmseg - INFO - Iter [5900/10000]	lr: 4.483e-02, eta: 1:00:41, time: 0.923, data_time: 0.306, memory: 18377, decode.loss_ce: 0.0717, decode.acc_seg: 96.2903, aux_0.loss_ce: 0.0736, aux_0.acc_seg: 96.2475, aux_1.loss_ce: 0.0928, aux_1.acc_seg: 95.3473, aux_2.loss_ce: 0.1190, aux_2.loss_dice: 0.2525, aux_2.acc_seg: 96.0244, aux_3.loss_ce: 0.3153, aux_3.acc_seg: 94.3958, loss: 0.9248
2023-05-04 01:13:18,868 - mmseg - INFO - Iter [5950/10000]	lr: 4.434e-02, eta: 0:59:55, time: 0.839, data_time: 0.219, memory: 18377, decode.loss_ce: 0.0696, decode.acc_seg: 96.4555, aux_0.loss_ce: 0.0714, aux_0.acc_seg: 96.4303, aux_1.loss_ce: 0.0895, aux_1.acc_seg: 95.5617, aux_2.loss_ce: 0.1197, aux_2.loss_dice: 0.2527, aux_2.acc_seg: 96.0100, aux_3.loss_ce: 0.3180, aux_3.acc_seg: 94.6445, loss: 0.9210
2023-05-04 01:14:01,143 - mmseg - INFO - Saving checkpoint at 6000 iterations
2023-05-04 01:14:01,502 - mmseg - INFO - Exp name: entextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 01:14:01,503 - mmseg - INFO - Iter [6000/10000]	lr: 4.385e-02, eta: 0:59:09, time: 0.855, data_time: 0.225, memory: 18377, decode.loss_ce: 0.0675, decode.acc_seg: 96.4665, aux_0.loss_ce: 0.0695, aux_0.acc_seg: 96.4133, aux_1.loss_ce: 0.0875, aux_1.acc_seg: 95.5251, aux_2.loss_ce: 0.1176, aux_2.loss_dice: 0.2508, aux_2.acc_seg: 96.0785, aux_3.loss_ce: 0.3087, aux_3.acc_seg: 94.5109, loss: 0.9016
2023-05-04 01:14:14,865 - mmseg - INFO - per class results:
2023-05-04 01:14:14,869 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 86.28 | 92.28 |
|   Building  | 94.19 | 95.92 |
|     Car     | 92.57 | 95.05 |
| Column_Pole | 28.48 | 34.43 |
|    Fence    | 84.15 | 92.41 |
|  Pedestrian | 66.87 | 82.44 |
|     Road    | 97.74 |  98.5 |
|   Sidewalk  | 92.05 | 98.12 |
|  SignSymbol |  1.57 |  1.61 |
|     Sky     |  94.4 | 97.74 |
|     Tree    | 93.28 | 97.95 |
+-------------+-------+-------+
2023-05-04 01:14:14,869 - mmseg - INFO - Summary:
2023-05-04 01:14:14,869 - mmseg - INFO - 
+-------+------+-------+
|  aAcc | mIoU |  mAcc |
+-------+------+-------+
| 96.65 | 75.6 | 80.59 |
+-------+------+-------+
2023-05-04 01:14:14,871 - mmseg - INFO - Exp name: entextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 01:14:14,871 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9665, mIoU: 0.7560, mAcc: 0.8059, IoU.Bicyclist: 0.8628, IoU.Building: 0.9419, IoU.Car: 0.9257, IoU.Column_Pole: 0.2848, IoU.Fence: 0.8415, IoU.Pedestrian: 0.6687, IoU.Road: 0.9774, IoU.Sidewalk: 0.9205, IoU.SignSymbol: 0.0157, IoU.Sky: 0.9440, IoU.Tree: 0.9328, Acc.Bicyclist: 0.9228, Acc.Building: 0.9592, Acc.Car: 0.9505, Acc.Column_Pole: 0.3443, Acc.Fence: 0.9241, Acc.Pedestrian: 0.8244, Acc.Road: 0.9850, Acc.Sidewalk: 0.9812, Acc.SignSymbol: 0.0161, Acc.Sky: 0.9774, Acc.Tree: 0.9795
2023-05-04 01:14:56,334 - mmseg - INFO - Iter [6050/10000]	lr: 4.336e-02, eta: 0:58:31, time: 1.095, data_time: 0.474, memory: 18377, decode.loss_ce: 0.0694, decode.acc_seg: 96.4412, aux_0.loss_ce: 0.0715, aux_0.acc_seg: 96.3932, aux_1.loss_ce: 0.0890, aux_1.acc_seg: 95.5557, aux_2.loss_ce: 0.1195, aux_2.loss_dice: 0.2535, aux_2.acc_seg: 96.0327, aux_3.loss_ce: 0.3154, aux_3.acc_seg: 94.4970, loss: 0.9184
2023-05-04 01:15:42,346 - mmseg - INFO - Iter [6100/10000]	lr: 4.286e-02, eta: 0:57:48, time: 0.920, data_time: 0.297, memory: 18377, decode.loss_ce: 0.0782, decode.acc_seg: 96.0721, aux_0.loss_ce: 0.0797, aux_0.acc_seg: 96.0309, aux_1.loss_ce: 0.0973, aux_1.acc_seg: 95.2016, aux_2.loss_ce: 0.1185, aux_2.loss_dice: 0.2521, aux_2.acc_seg: 96.0666, aux_3.loss_ce: 0.3124, aux_3.acc_seg: 94.3098, loss: 0.9382
2023-05-04 01:16:24,253 - mmseg - INFO - Iter [6150/10000]	lr: 4.237e-02, eta: 0:57:02, time: 0.838, data_time: 0.222, memory: 18377, decode.loss_ce: 0.0696, decode.acc_seg: 96.4243, aux_0.loss_ce: 0.0716, aux_0.acc_seg: 96.3810, aux_1.loss_ce: 0.0896, aux_1.acc_seg: 95.5329, aux_2.loss_ce: 0.1192, aux_2.loss_dice: 0.2528, aux_2.acc_seg: 96.0396, aux_3.loss_ce: 0.3138, aux_3.acc_seg: 94.5965, loss: 0.9166
2023-05-04 01:17:05,996 - mmseg - INFO - Iter [6200/10000]	lr: 4.187e-02, eta: 0:56:16, time: 0.835, data_time: 0.215, memory: 18377, decode.loss_ce: 0.0692, decode.acc_seg: 96.3806, aux_0.loss_ce: 0.0704, aux_0.acc_seg: 96.3746, aux_1.loss_ce: 0.0874, aux_1.acc_seg: 95.5570, aux_2.loss_ce: 0.1173, aux_2.loss_dice: 0.2517, aux_2.acc_seg: 96.0808, aux_3.loss_ce: 0.3097, aux_3.acc_seg: 94.5525, loss: 0.9057
2023-05-04 01:17:52,664 - mmseg - INFO - Iter [6250/10000]	lr: 4.138e-02, eta: 0:55:33, time: 0.933, data_time: 0.316, memory: 18377, decode.loss_ce: 0.0692, decode.acc_seg: 96.4263, aux_0.loss_ce: 0.0709, aux_0.acc_seg: 96.3934, aux_1.loss_ce: 0.0879, aux_1.acc_seg: 95.5281, aux_2.loss_ce: 0.1173, aux_2.loss_dice: 0.2501, aux_2.acc_seg: 96.0873, aux_3.loss_ce: 0.3074, aux_3.acc_seg: 94.5413, loss: 0.9029
2023-05-04 01:18:34,808 - mmseg - INFO - Iter [6300/10000]	lr: 4.088e-02, eta: 0:54:47, time: 0.843, data_time: 0.222, memory: 18377, decode.loss_ce: 0.0722, decode.acc_seg: 96.2764, aux_0.loss_ce: 0.0737, aux_0.acc_seg: 96.2653, aux_1.loss_ce: 0.0906, aux_1.acc_seg: 95.4387, aux_2.loss_ce: 0.1162, aux_2.loss_dice: 0.2510, aux_2.acc_seg: 96.1678, aux_3.loss_ce: 0.3098, aux_3.acc_seg: 94.4454, loss: 0.9134
2023-05-04 01:19:17,252 - mmseg - INFO - Iter [6350/10000]	lr: 4.038e-02, eta: 0:54:01, time: 0.849, data_time: 0.229, memory: 18377, decode.loss_ce: 0.0686, decode.acc_seg: 96.5070, aux_0.loss_ce: 0.0703, aux_0.acc_seg: 96.4790, aux_1.loss_ce: 0.0877, aux_1.acc_seg: 95.6488, aux_2.loss_ce: 0.1189, aux_2.loss_dice: 0.2537, aux_2.acc_seg: 96.0797, aux_3.loss_ce: 0.3164, aux_3.acc_seg: 94.5254, loss: 0.9156
2023-05-04 01:19:59,084 - mmseg - INFO - Iter [6400/10000]	lr: 3.988e-02, eta: 0:53:16, time: 0.837, data_time: 0.223, memory: 18377, decode.loss_ce: 0.0655, decode.acc_seg: 96.5899, aux_0.loss_ce: 0.0675, aux_0.acc_seg: 96.5552, aux_1.loss_ce: 0.0849, aux_1.acc_seg: 95.7027, aux_2.loss_ce: 0.1173, aux_2.loss_dice: 0.2503, aux_2.acc_seg: 96.0882, aux_3.loss_ce: 0.3089, aux_3.acc_seg: 94.6173, loss: 0.8944
2023-05-04 01:20:45,856 - mmseg - INFO - Iter [6450/10000]	lr: 3.938e-02, eta: 0:52:32, time: 0.935, data_time: 0.308, memory: 18377, decode.loss_ce: 0.0671, decode.acc_seg: 96.4245, aux_0.loss_ce: 0.0691, aux_0.acc_seg: 96.3787, aux_1.loss_ce: 0.0865, aux_1.acc_seg: 95.5116, aux_2.loss_ce: 0.1184, aux_2.loss_dice: 0.2514, aux_2.acc_seg: 96.0663, aux_3.loss_ce: 0.3055, aux_3.acc_seg: 94.4528, loss: 0.8981
2023-05-04 01:21:27,949 - mmseg - INFO - Iter [6500/10000]	lr: 3.888e-02, eta: 0:51:47, time: 0.842, data_time: 0.222, memory: 18377, decode.loss_ce: 0.0653, decode.acc_seg: 96.6005, aux_0.loss_ce: 0.0672, aux_0.acc_seg: 96.5443, aux_1.loss_ce: 0.0845, aux_1.acc_seg: 95.7081, aux_2.loss_ce: 0.1183, aux_2.loss_dice: 0.2524, aux_2.acc_seg: 96.0801, aux_3.loss_ce: 0.3098, aux_3.acc_seg: 94.6628, loss: 0.8973
2023-05-04 01:22:10,089 - mmseg - INFO - Iter [6550/10000]	lr: 3.838e-02, eta: 0:51:01, time: 0.843, data_time: 0.224, memory: 18377, decode.loss_ce: 0.0663, decode.acc_seg: 96.5279, aux_0.loss_ce: 0.0679, aux_0.acc_seg: 96.5011, aux_1.loss_ce: 0.0858, aux_1.acc_seg: 95.6181, aux_2.loss_ce: 0.1180, aux_2.loss_dice: 0.2515, aux_2.acc_seg: 96.0393, aux_3.loss_ce: 0.3068, aux_3.acc_seg: 94.5495, loss: 0.8964
2023-05-04 01:22:51,764 - mmseg - INFO - Iter [6600/10000]	lr: 3.788e-02, eta: 0:50:15, time: 0.833, data_time: 0.216, memory: 18377, decode.loss_ce: 0.0662, decode.acc_seg: 96.5125, aux_0.loss_ce: 0.0677, aux_0.acc_seg: 96.4921, aux_1.loss_ce: 0.0845, aux_1.acc_seg: 95.6383, aux_2.loss_ce: 0.1177, aux_2.loss_dice: 0.2506, aux_2.acc_seg: 96.0904, aux_3.loss_ce: 0.3059, aux_3.acc_seg: 94.5467, loss: 0.8925
2023-05-04 01:23:37,329 - mmseg - INFO - Iter [6650/10000]	lr: 3.738e-02, eta: 0:49:32, time: 0.911, data_time: 0.291, memory: 18377, decode.loss_ce: 0.0657, decode.acc_seg: 96.5133, aux_0.loss_ce: 0.0677, aux_0.acc_seg: 96.4662, aux_1.loss_ce: 0.0853, aux_1.acc_seg: 95.5960, aux_2.loss_ce: 0.1179, aux_2.loss_dice: 0.2506, aux_2.acc_seg: 96.0529, aux_3.loss_ce: 0.3039, aux_3.acc_seg: 94.4983, loss: 0.8910
2023-05-04 01:24:19,362 - mmseg - INFO - Iter [6700/10000]	lr: 3.688e-02, eta: 0:48:46, time: 0.841, data_time: 0.223, memory: 18377, decode.loss_ce: 0.0648, decode.acc_seg: 96.5627, aux_0.loss_ce: 0.0668, aux_0.acc_seg: 96.5099, aux_1.loss_ce: 0.0844, aux_1.acc_seg: 95.6529, aux_2.loss_ce: 0.1163, aux_2.loss_dice: 0.2500, aux_2.acc_seg: 96.1144, aux_3.loss_ce: 0.3053, aux_3.acc_seg: 94.6190, loss: 0.8876
2023-05-04 01:25:01,261 - mmseg - INFO - Iter [6750/10000]	lr: 3.638e-02, eta: 0:48:01, time: 0.838, data_time: 0.216, memory: 18377, decode.loss_ce: 0.0701, decode.acc_seg: 96.3678, aux_0.loss_ce: 0.0712, aux_0.acc_seg: 96.3387, aux_1.loss_ce: 0.0889, aux_1.acc_seg: 95.4803, aux_2.loss_ce: 0.1188, aux_2.loss_dice: 0.2516, aux_2.acc_seg: 96.0452, aux_3.loss_ce: 0.3092, aux_3.acc_seg: 94.4624, loss: 0.9097
2023-05-04 01:25:47,467 - mmseg - INFO - Iter [6800/10000]	lr: 3.587e-02, eta: 0:47:17, time: 0.924, data_time: 0.298, memory: 18377, decode.loss_ce: 0.0728, decode.acc_seg: 96.2970, aux_0.loss_ce: 0.0739, aux_0.acc_seg: 96.2985, aux_1.loss_ce: 0.0915, aux_1.acc_seg: 95.4523, aux_2.loss_ce: 0.1184, aux_2.loss_dice: 0.2512, aux_2.acc_seg: 96.0279, aux_3.loss_ce: 0.3127, aux_3.acc_seg: 94.4745, loss: 0.9204
2023-05-04 01:26:29,455 - mmseg - INFO - Iter [6850/10000]	lr: 3.537e-02, eta: 0:46:32, time: 0.840, data_time: 0.221, memory: 18377, decode.loss_ce: 0.0680, decode.acc_seg: 96.5010, aux_0.loss_ce: 0.0698, aux_0.acc_seg: 96.4584, aux_1.loss_ce: 0.0867, aux_1.acc_seg: 95.6258, aux_2.loss_ce: 0.1188, aux_2.loss_dice: 0.2513, aux_2.acc_seg: 96.0149, aux_3.loss_ce: 0.3087, aux_3.acc_seg: 94.6094, loss: 0.9032
2023-05-04 01:27:11,304 - mmseg - INFO - Iter [6900/10000]	lr: 3.486e-02, eta: 0:45:46, time: 0.837, data_time: 0.217, memory: 18377, decode.loss_ce: 0.0647, decode.acc_seg: 96.6728, aux_0.loss_ce: 0.0671, aux_0.acc_seg: 96.5998, aux_1.loss_ce: 0.0842, aux_1.acc_seg: 95.7689, aux_2.loss_ce: 0.1183, aux_2.loss_dice: 0.2502, aux_2.acc_seg: 96.0268, aux_3.loss_ce: 0.3105, aux_3.acc_seg: 94.6698, loss: 0.8950
2023-05-04 01:27:52,767 - mmseg - INFO - Iter [6950/10000]	lr: 3.436e-02, eta: 0:45:01, time: 0.829, data_time: 0.214, memory: 18377, decode.loss_ce: 0.0646, decode.acc_seg: 96.6346, aux_0.loss_ce: 0.0669, aux_0.acc_seg: 96.5802, aux_1.loss_ce: 0.0845, aux_1.acc_seg: 95.7177, aux_2.loss_ce: 0.1194, aux_2.loss_dice: 0.2509, aux_2.acc_seg: 95.9560, aux_3.loss_ce: 0.3079, aux_3.acc_seg: 94.6642, loss: 0.8941
2023-05-04 01:28:38,987 - mmseg - INFO - Saving checkpoint at 7000 iterations
2023-05-04 01:28:39,318 - mmseg - INFO - Exp name: entextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 01:28:39,319 - mmseg - INFO - Iter [7000/10000]	lr: 3.385e-02, eta: 0:44:18, time: 0.933, data_time: 0.306, memory: 18377, decode.loss_ce: 0.0643, decode.acc_seg: 96.6191, aux_0.loss_ce: 0.0662, aux_0.acc_seg: 96.5683, aux_1.loss_ce: 0.0832, aux_1.acc_seg: 95.7378, aux_2.loss_ce: 0.1171, aux_2.loss_dice: 0.2500, aux_2.acc_seg: 96.0858, aux_3.loss_ce: 0.3057, aux_3.acc_seg: 94.6669, loss: 0.8865
2023-05-04 01:28:51,412 - mmseg - INFO - per class results:
2023-05-04 01:28:51,413 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 86.01 | 92.66 |
|   Building  | 93.03 | 94.74 |
|     Car     | 92.94 | 95.35 |
| Column_Pole | 26.78 | 32.97 |
|    Fence    | 83.46 | 95.24 |
|  Pedestrian | 68.51 | 82.19 |
|     Road    | 97.86 | 98.89 |
|   Sidewalk  | 92.84 | 96.78 |
|  SignSymbol |  6.4  |  6.41 |
|     Sky     | 93.87 | 98.12 |
|     Tree    | 92.28 | 97.62 |
+-------------+-------+-------+
2023-05-04 01:28:51,413 - mmseg - INFO - Summary:
2023-05-04 01:28:51,414 - mmseg - INFO - 
+-------+-------+------+
|  aAcc |  mIoU | mAcc |
+-------+-------+------+
| 96.41 | 75.82 | 81.0 |
+-------+-------+------+
2023-05-04 01:28:51,414 - mmseg - INFO - Exp name: entextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 01:28:51,414 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9641, mIoU: 0.7582, mAcc: 0.8100, IoU.Bicyclist: 0.8601, IoU.Building: 0.9303, IoU.Car: 0.9294, IoU.Column_Pole: 0.2678, IoU.Fence: 0.8346, IoU.Pedestrian: 0.6851, IoU.Road: 0.9786, IoU.Sidewalk: 0.9284, IoU.SignSymbol: 0.0640, IoU.Sky: 0.9387, IoU.Tree: 0.9228, Acc.Bicyclist: 0.9266, Acc.Building: 0.9474, Acc.Car: 0.9535, Acc.Column_Pole: 0.3297, Acc.Fence: 0.9524, Acc.Pedestrian: 0.8219, Acc.Road: 0.9889, Acc.Sidewalk: 0.9678, Acc.SignSymbol: 0.0641, Acc.Sky: 0.9812, Acc.Tree: 0.9762
2023-05-04 01:29:32,834 - mmseg - INFO - Iter [7050/10000]	lr: 3.334e-02, eta: 0:43:37, time: 1.068, data_time: 0.454, memory: 18377, decode.loss_ce: 0.0626, decode.acc_seg: 96.6806, aux_0.loss_ce: 0.0644, aux_0.acc_seg: 96.6387, aux_1.loss_ce: 0.0808, aux_1.acc_seg: 95.8131, aux_2.loss_ce: 0.1157, aux_2.loss_dice: 0.2484, aux_2.acc_seg: 96.1183, aux_3.loss_ce: 0.2953, aux_3.acc_seg: 94.7625, loss: 0.8670
2023-05-04 01:30:15,509 - mmseg - INFO - Iter [7100/10000]	lr: 3.283e-02, eta: 0:42:52, time: 0.854, data_time: 0.230, memory: 18377, decode.loss_ce: 0.0682, decode.acc_seg: 96.4730, aux_0.loss_ce: 0.0698, aux_0.acc_seg: 96.4363, aux_1.loss_ce: 0.0871, aux_1.acc_seg: 95.6044, aux_2.loss_ce: 0.1195, aux_2.loss_dice: 0.2520, aux_2.acc_seg: 96.0010, aux_3.loss_ce: 0.3103, aux_3.acc_seg: 94.5354, loss: 0.9068
2023-05-04 01:30:57,134 - mmseg - INFO - Iter [7150/10000]	lr: 3.232e-02, eta: 0:42:07, time: 0.832, data_time: 0.214, memory: 18377, decode.loss_ce: 0.0629, decode.acc_seg: 96.6746, aux_0.loss_ce: 0.0646, aux_0.acc_seg: 96.6373, aux_1.loss_ce: 0.0818, aux_1.acc_seg: 95.7754, aux_2.loss_ce: 0.1159, aux_2.loss_dice: 0.2491, aux_2.acc_seg: 96.1028, aux_3.loss_ce: 0.3009, aux_3.acc_seg: 94.7390, loss: 0.8752
2023-05-04 01:31:42,870 - mmseg - INFO - Iter [7200/10000]	lr: 3.181e-02, eta: 0:41:23, time: 0.915, data_time: 0.288, memory: 18377, decode.loss_ce: 0.0618, decode.acc_seg: 96.7252, aux_0.loss_ce: 0.0637, aux_0.acc_seg: 96.6867, aux_1.loss_ce: 0.0804, aux_1.acc_seg: 95.8547, aux_2.loss_ce: 0.1166, aux_2.loss_dice: 0.2491, aux_2.acc_seg: 96.0543, aux_3.loss_ce: 0.2992, aux_3.acc_seg: 94.7531, loss: 0.8708
2023-05-04 01:32:25,882 - mmseg - INFO - Iter [7250/10000]	lr: 3.130e-02, eta: 0:40:38, time: 0.860, data_time: 0.229, memory: 18377, decode.loss_ce: 0.0650, decode.acc_seg: 96.6011, aux_0.loss_ce: 0.0670, aux_0.acc_seg: 96.5541, aux_1.loss_ce: 0.0847, aux_1.acc_seg: 95.6975, aux_2.loss_ce: 0.1197, aux_2.loss_dice: 0.2524, aux_2.acc_seg: 96.0047, aux_3.loss_ce: 0.3066, aux_3.acc_seg: 94.6581, loss: 0.8954
2023-05-04 01:33:09,034 - mmseg - INFO - Iter [7300/10000]	lr: 3.079e-02, eta: 0:39:53, time: 0.863, data_time: 0.241, memory: 18377, decode.loss_ce: 0.0634, decode.acc_seg: 96.7076, aux_0.loss_ce: 0.0655, aux_0.acc_seg: 96.6543, aux_1.loss_ce: 0.0823, aux_1.acc_seg: 95.8280, aux_2.loss_ce: 0.1176, aux_2.loss_dice: 0.2508, aux_2.acc_seg: 96.0413, aux_3.loss_ce: 0.3066, aux_3.acc_seg: 94.7603, loss: 0.8861
2023-05-04 01:33:55,059 - mmseg - INFO - Iter [7350/10000]	lr: 3.027e-02, eta: 0:39:09, time: 0.920, data_time: 0.298, memory: 18377, decode.loss_ce: 0.0644, decode.acc_seg: 96.6054, aux_0.loss_ce: 0.0666, aux_0.acc_seg: 96.5305, aux_1.loss_ce: 0.0838, aux_1.acc_seg: 95.7034, aux_2.loss_ce: 0.1181, aux_2.loss_dice: 0.2508, aux_2.acc_seg: 96.0368, aux_3.loss_ce: 0.3033, aux_3.acc_seg: 94.6038, loss: 0.8871
2023-05-04 01:34:37,416 - mmseg - INFO - Iter [7400/10000]	lr: 2.976e-02, eta: 0:38:24, time: 0.847, data_time: 0.228, memory: 18377, decode.loss_ce: 0.0651, decode.acc_seg: 96.5044, aux_0.loss_ce: 0.0668, aux_0.acc_seg: 96.4676, aux_1.loss_ce: 0.0838, aux_1.acc_seg: 95.6003, aux_2.loss_ce: 0.1167, aux_2.loss_dice: 0.2493, aux_2.acc_seg: 96.0721, aux_3.loss_ce: 0.3005, aux_3.acc_seg: 94.4912, loss: 0.8823
2023-05-04 01:35:19,358 - mmseg - INFO - Iter [7450/10000]	lr: 2.924e-02, eta: 0:37:39, time: 0.839, data_time: 0.218, memory: 18377, decode.loss_ce: 0.0652, decode.acc_seg: 96.5831, aux_0.loss_ce: 0.0672, aux_0.acc_seg: 96.5389, aux_1.loss_ce: 0.0844, aux_1.acc_seg: 95.6942, aux_2.loss_ce: 0.1181, aux_2.loss_dice: 0.2513, aux_2.acc_seg: 96.0510, aux_3.loss_ce: 0.3094, aux_3.acc_seg: 94.5804, loss: 0.8957
2023-05-04 01:36:01,078 - mmseg - INFO - Iter [7500/10000]	lr: 2.873e-02, eta: 0:36:54, time: 0.834, data_time: 0.219, memory: 18377, decode.loss_ce: 0.0620, decode.acc_seg: 96.6801, aux_0.loss_ce: 0.0637, aux_0.acc_seg: 96.6346, aux_1.loss_ce: 0.0807, aux_1.acc_seg: 95.7955, aux_2.loss_ce: 0.1184, aux_2.loss_dice: 0.2505, aux_2.acc_seg: 96.0023, aux_3.loss_ce: 0.3008, aux_3.acc_seg: 94.6861, loss: 0.8761
2023-05-04 01:36:46,823 - mmseg - INFO - Iter [7550/10000]	lr: 2.821e-02, eta: 0:36:10, time: 0.915, data_time: 0.299, memory: 18377, decode.loss_ce: 0.0641, decode.acc_seg: 96.6581, aux_0.loss_ce: 0.0659, aux_0.acc_seg: 96.6142, aux_1.loss_ce: 0.0827, aux_1.acc_seg: 95.7878, aux_2.loss_ce: 0.1183, aux_2.loss_dice: 0.2517, aux_2.acc_seg: 96.0274, aux_3.loss_ce: 0.3064, aux_3.acc_seg: 94.6451, loss: 0.8890
2023-05-04 01:37:29,461 - mmseg - INFO - Iter [7600/10000]	lr: 2.769e-02, eta: 0:35:25, time: 0.853, data_time: 0.231, memory: 18377, decode.loss_ce: 0.0616, decode.acc_seg: 96.7000, aux_0.loss_ce: 0.0633, aux_0.acc_seg: 96.6601, aux_1.loss_ce: 0.0805, aux_1.acc_seg: 95.8042, aux_2.loss_ce: 0.1154, aux_2.loss_dice: 0.2486, aux_2.acc_seg: 96.1259, aux_3.loss_ce: 0.2972, aux_3.acc_seg: 94.7536, loss: 0.8666
2023-05-04 01:38:12,665 - mmseg - INFO - Iter [7650/10000]	lr: 2.717e-02, eta: 0:34:41, time: 0.864, data_time: 0.234, memory: 18377, decode.loss_ce: 0.0639, decode.acc_seg: 96.5719, aux_0.loss_ce: 0.0658, aux_0.acc_seg: 96.5219, aux_1.loss_ce: 0.0830, aux_1.acc_seg: 95.6555, aux_2.loss_ce: 0.1172, aux_2.loss_dice: 0.2489, aux_2.acc_seg: 96.0424, aux_3.loss_ce: 0.2984, aux_3.acc_seg: 94.5418, loss: 0.8772
2023-05-04 01:38:55,346 - mmseg - INFO - Iter [7700/10000]	lr: 2.665e-02, eta: 0:33:56, time: 0.854, data_time: 0.232, memory: 18377, decode.loss_ce: 0.0635, decode.acc_seg: 96.6390, aux_0.loss_ce: 0.0652, aux_0.acc_seg: 96.6221, aux_1.loss_ce: 0.0829, aux_1.acc_seg: 95.7305, aux_2.loss_ce: 0.1175, aux_2.loss_dice: 0.2501, aux_2.acc_seg: 96.0707, aux_3.loss_ce: 0.3044, aux_3.acc_seg: 94.6075, loss: 0.8836
2023-05-04 01:39:42,730 - mmseg - INFO - Iter [7750/10000]	lr: 2.613e-02, eta: 0:33:13, time: 0.948, data_time: 0.324, memory: 18377, decode.loss_ce: 0.0631, decode.acc_seg: 96.6568, aux_0.loss_ce: 0.0647, aux_0.acc_seg: 96.6237, aux_1.loss_ce: 0.0820, aux_1.acc_seg: 95.7746, aux_2.loss_ce: 0.1174, aux_2.loss_dice: 0.2491, aux_2.acc_seg: 96.0326, aux_3.loss_ce: 0.3020, aux_3.acc_seg: 94.6104, loss: 0.8783
2023-05-04 01:40:26,149 - mmseg - INFO - Iter [7800/10000]	lr: 2.561e-02, eta: 0:32:28, time: 0.868, data_time: 0.234, memory: 18377, decode.loss_ce: 0.0612, decode.acc_seg: 96.7496, aux_0.loss_ce: 0.0630, aux_0.acc_seg: 96.7057, aux_1.loss_ce: 0.0796, aux_1.acc_seg: 95.8715, aux_2.loss_ce: 0.1155, aux_2.loss_dice: 0.2482, aux_2.acc_seg: 96.1222, aux_3.loss_ce: 0.2991, aux_3.acc_seg: 94.7107, loss: 0.8666
2023-05-04 01:41:09,981 - mmseg - INFO - Iter [7850/10000]	lr: 2.508e-02, eta: 0:31:44, time: 0.877, data_time: 0.239, memory: 18377, decode.loss_ce: 0.0636, decode.acc_seg: 96.7027, aux_0.loss_ce: 0.0653, aux_0.acc_seg: 96.6672, aux_1.loss_ce: 0.0830, aux_1.acc_seg: 95.8018, aux_2.loss_ce: 0.1193, aux_2.loss_dice: 0.2518, aux_2.acc_seg: 96.0066, aux_3.loss_ce: 0.3077, aux_3.acc_seg: 94.6286, loss: 0.8907
2023-05-04 01:41:57,292 - mmseg - INFO - Iter [7900/10000]	lr: 2.456e-02, eta: 0:31:00, time: 0.946, data_time: 0.314, memory: 18377, decode.loss_ce: 0.0611, decode.acc_seg: 96.7210, aux_0.loss_ce: 0.0628, aux_0.acc_seg: 96.6813, aux_1.loss_ce: 0.0798, aux_1.acc_seg: 95.8266, aux_2.loss_ce: 0.1172, aux_2.loss_dice: 0.2491, aux_2.acc_seg: 96.0463, aux_3.loss_ce: 0.2974, aux_3.acc_seg: 94.6594, loss: 0.8673
2023-05-04 01:42:39,496 - mmseg - INFO - Iter [7950/10000]	lr: 2.403e-02, eta: 0:30:15, time: 0.844, data_time: 0.228, memory: 18377, decode.loss_ce: 0.0632, decode.acc_seg: 96.6292, aux_0.loss_ce: 0.0650, aux_0.acc_seg: 96.5860, aux_1.loss_ce: 0.0822, aux_1.acc_seg: 95.7213, aux_2.loss_ce: 0.1185, aux_2.loss_dice: 0.2486, aux_2.acc_seg: 95.9573, aux_3.loss_ce: 0.3008, aux_3.acc_seg: 94.5735, loss: 0.8782
2023-05-04 01:43:22,324 - mmseg - INFO - Saving checkpoint at 8000 iterations
2023-05-04 01:43:22,650 - mmseg - INFO - Exp name: entextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 01:43:22,650 - mmseg - INFO - Iter [8000/10000]	lr: 2.350e-02, eta: 0:29:31, time: 0.865, data_time: 0.240, memory: 18377, decode.loss_ce: 0.0620, decode.acc_seg: 96.7128, aux_0.loss_ce: 0.0638, aux_0.acc_seg: 96.6788, aux_1.loss_ce: 0.0811, aux_1.acc_seg: 95.8257, aux_2.loss_ce: 0.1162, aux_2.loss_dice: 0.2486, aux_2.acc_seg: 96.0714, aux_3.loss_ce: 0.3010, aux_3.acc_seg: 94.7088, loss: 0.8726
2023-05-04 01:43:31,737 - mmseg - INFO - per class results:
2023-05-04 01:43:31,739 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 86.02 | 91.03 |
|   Building  | 93.41 | 95.07 |
|     Car     | 92.76 | 95.09 |
| Column_Pole | 28.56 | 35.73 |
|    Fence    | 83.22 | 91.98 |
|  Pedestrian | 69.66 | 88.22 |
|     Road    | 97.86 | 98.94 |
|   Sidewalk  | 92.78 | 97.16 |
|  SignSymbol |  8.82 |  9.17 |
|     Sky     | 94.13 | 96.43 |
|     Tree    | 92.03 | 98.54 |
+-------------+-------+-------+
2023-05-04 01:43:31,740 - mmseg - INFO - Summary:
2023-05-04 01:43:31,740 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 96.45 | 76.29 | 81.58 |
+-------+-------+-------+
2023-05-04 01:43:31,740 - mmseg - INFO - Exp name: entextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 01:43:31,741 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9645, mIoU: 0.7629, mAcc: 0.8158, IoU.Bicyclist: 0.8602, IoU.Building: 0.9341, IoU.Car: 0.9276, IoU.Column_Pole: 0.2856, IoU.Fence: 0.8322, IoU.Pedestrian: 0.6966, IoU.Road: 0.9786, IoU.Sidewalk: 0.9278, IoU.SignSymbol: 0.0882, IoU.Sky: 0.9413, IoU.Tree: 0.9203, Acc.Bicyclist: 0.9103, Acc.Building: 0.9507, Acc.Car: 0.9509, Acc.Column_Pole: 0.3573, Acc.Fence: 0.9198, Acc.Pedestrian: 0.8822, Acc.Road: 0.9894, Acc.Sidewalk: 0.9716, Acc.SignSymbol: 0.0917, Acc.Sky: 0.9643, Acc.Tree: 0.9854
2023-05-04 01:44:13,495 - mmseg - INFO - Iter [8050/10000]	lr: 2.297e-02, eta: 0:28:48, time: 1.015, data_time: 0.400, memory: 18377, decode.loss_ce: 0.0645, decode.acc_seg: 96.6968, aux_0.loss_ce: 0.0657, aux_0.acc_seg: 96.6723, aux_1.loss_ce: 0.0832, aux_1.acc_seg: 95.8232, aux_2.loss_ce: 0.1192, aux_2.loss_dice: 0.2521, aux_2.acc_seg: 95.9984, aux_3.loss_ce: 0.3101, aux_3.acc_seg: 94.6707, loss: 0.8948
2023-05-04 01:44:57,849 - mmseg - INFO - Iter [8100/10000]	lr: 2.244e-02, eta: 0:28:04, time: 0.887, data_time: 0.269, memory: 18377, decode.loss_ce: 0.0617, decode.acc_seg: 96.7258, aux_0.loss_ce: 0.0635, aux_0.acc_seg: 96.6860, aux_1.loss_ce: 0.0806, aux_1.acc_seg: 95.8372, aux_2.loss_ce: 0.1178, aux_2.loss_dice: 0.2496, aux_2.acc_seg: 96.0318, aux_3.loss_ce: 0.3021, aux_3.acc_seg: 94.6267, loss: 0.8752
2023-05-04 01:45:39,817 - mmseg - INFO - Iter [8150/10000]	lr: 2.191e-02, eta: 0:27:19, time: 0.839, data_time: 0.220, memory: 18377, decode.loss_ce: 0.0625, decode.acc_seg: 96.7111, aux_0.loss_ce: 0.0645, aux_0.acc_seg: 96.6498, aux_1.loss_ce: 0.0814, aux_1.acc_seg: 95.8342, aux_2.loss_ce: 0.1187, aux_2.loss_dice: 0.2498, aux_2.acc_seg: 95.9760, aux_3.loss_ce: 0.3073, aux_3.acc_seg: 94.6292, loss: 0.8843
2023-05-04 01:46:21,709 - mmseg - INFO - Iter [8200/10000]	lr: 2.138e-02, eta: 0:26:34, time: 0.838, data_time: 0.215, memory: 18377, decode.loss_ce: 0.0613, decode.acc_seg: 96.7497, aux_0.loss_ce: 0.0634, aux_0.acc_seg: 96.7033, aux_1.loss_ce: 0.0802, aux_1.acc_seg: 95.8727, aux_2.loss_ce: 0.1175, aux_2.loss_dice: 0.2500, aux_2.acc_seg: 96.0541, aux_3.loss_ce: 0.3027, aux_3.acc_seg: 94.6969, loss: 0.8752
2023-05-04 01:47:03,851 - mmseg - INFO - Iter [8250/10000]	lr: 2.084e-02, eta: 0:25:49, time: 0.843, data_time: 0.226, memory: 18377, decode.loss_ce: 0.0661, decode.acc_seg: 96.6336, aux_0.loss_ce: 0.0659, aux_0.acc_seg: 96.6571, aux_1.loss_ce: 0.0829, aux_1.acc_seg: 95.8492, aux_2.loss_ce: 0.1177, aux_2.loss_dice: 0.2514, aux_2.acc_seg: 96.0822, aux_3.loss_ce: 0.3057, aux_3.acc_seg: 94.7351, loss: 0.8898
2023-05-04 01:47:49,616 - mmseg - INFO - Iter [8300/10000]	lr: 2.031e-02, eta: 0:25:05, time: 0.915, data_time: 0.294, memory: 18377, decode.loss_ce: 0.0628, decode.acc_seg: 96.6346, aux_0.loss_ce: 0.0639, aux_0.acc_seg: 96.6209, aux_1.loss_ce: 0.0809, aux_1.acc_seg: 95.7514, aux_2.loss_ce: 0.1154, aux_2.loss_dice: 0.2485, aux_2.acc_seg: 96.1420, aux_3.loss_ce: 0.2949, aux_3.acc_seg: 94.6787, loss: 0.8663
2023-05-04 01:48:32,558 - mmseg - INFO - Iter [8350/10000]	lr: 1.977e-02, eta: 0:24:21, time: 0.859, data_time: 0.242, memory: 18377, decode.loss_ce: 0.0625, decode.acc_seg: 96.7947, aux_0.loss_ce: 0.0639, aux_0.acc_seg: 96.7857, aux_1.loss_ce: 0.0815, aux_1.acc_seg: 95.9348, aux_2.loss_ce: 0.1189, aux_2.loss_dice: 0.2513, aux_2.acc_seg: 96.0418, aux_3.loss_ce: 0.3075, aux_3.acc_seg: 94.8329, loss: 0.8856
2023-05-04 01:49:15,022 - mmseg - INFO - Iter [8400/10000]	lr: 1.923e-02, eta: 0:23:36, time: 0.849, data_time: 0.229, memory: 18377, decode.loss_ce: 0.0638, decode.acc_seg: 96.6658, aux_0.loss_ce: 0.0656, aux_0.acc_seg: 96.6237, aux_1.loss_ce: 0.0831, aux_1.acc_seg: 95.7757, aux_2.loss_ce: 0.1214, aux_2.loss_dice: 0.2511, aux_2.acc_seg: 95.8517, aux_3.loss_ce: 0.3082, aux_3.acc_seg: 94.6172, loss: 0.8931
2023-05-04 01:50:01,043 - mmseg - INFO - Iter [8450/10000]	lr: 1.869e-02, eta: 0:22:52, time: 0.920, data_time: 0.304, memory: 18377, decode.loss_ce: 0.0604, decode.acc_seg: 96.7900, aux_0.loss_ce: 0.0621, aux_0.acc_seg: 96.7516, aux_1.loss_ce: 0.0795, aux_1.acc_seg: 95.9001, aux_2.loss_ce: 0.1189, aux_2.loss_dice: 0.2503, aux_2.acc_seg: 95.9647, aux_3.loss_ce: 0.3015, aux_3.acc_seg: 94.7627, loss: 0.8727
2023-05-04 01:50:42,464 - mmseg - INFO - Iter [8500/10000]	lr: 1.815e-02, eta: 0:22:07, time: 0.828, data_time: 0.210, memory: 18377, decode.loss_ce: 0.0600, decode.acc_seg: 96.8203, aux_0.loss_ce: 0.0616, aux_0.acc_seg: 96.7847, aux_1.loss_ce: 0.0786, aux_1.acc_seg: 95.9384, aux_2.loss_ce: 0.1170, aux_2.loss_dice: 0.2492, aux_2.acc_seg: 96.0555, aux_3.loss_ce: 0.2976, aux_3.acc_seg: 94.7809, loss: 0.8640
2023-05-04 01:51:24,181 - mmseg - INFO - Iter [8550/10000]	lr: 1.760e-02, eta: 0:21:23, time: 0.834, data_time: 0.217, memory: 18377, decode.loss_ce: 0.0624, decode.acc_seg: 96.7065, aux_0.loss_ce: 0.0640, aux_0.acc_seg: 96.6782, aux_1.loss_ce: 0.0812, aux_1.acc_seg: 95.8271, aux_2.loss_ce: 0.1179, aux_2.loss_dice: 0.2505, aux_2.acc_seg: 96.0279, aux_3.loss_ce: 0.3030, aux_3.acc_seg: 94.6628, loss: 0.8789
2023-05-04 01:52:05,931 - mmseg - INFO - Iter [8600/10000]	lr: 1.705e-02, eta: 0:20:38, time: 0.835, data_time: 0.216, memory: 18377, decode.loss_ce: 0.0592, decode.acc_seg: 96.7862, aux_0.loss_ce: 0.0608, aux_0.acc_seg: 96.7499, aux_1.loss_ce: 0.0775, aux_1.acc_seg: 95.9117, aux_2.loss_ce: 0.1160, aux_2.loss_dice: 0.2473, aux_2.acc_seg: 96.0546, aux_3.loss_ce: 0.2929, aux_3.acc_seg: 94.7626, loss: 0.8537
2023-05-04 01:52:52,494 - mmseg - INFO - Iter [8650/10000]	lr: 1.650e-02, eta: 0:19:54, time: 0.931, data_time: 0.309, memory: 18377, decode.loss_ce: 0.0580, decode.acc_seg: 96.8645, aux_0.loss_ce: 0.0597, aux_0.acc_seg: 96.8202, aux_1.loss_ce: 0.0764, aux_1.acc_seg: 95.9970, aux_2.loss_ce: 0.1140, aux_2.loss_dice: 0.2472, aux_2.acc_seg: 96.1433, aux_3.loss_ce: 0.2945, aux_3.acc_seg: 94.8320, loss: 0.8498
2023-05-04 01:53:34,497 - mmseg - INFO - Iter [8700/10000]	lr: 1.595e-02, eta: 0:19:10, time: 0.840, data_time: 0.219, memory: 18377, decode.loss_ce: 0.0608, decode.acc_seg: 96.7880, aux_0.loss_ce: 0.0625, aux_0.acc_seg: 96.7541, aux_1.loss_ce: 0.0795, aux_1.acc_seg: 95.8985, aux_2.loss_ce: 0.1183, aux_2.loss_dice: 0.2496, aux_2.acc_seg: 96.0152, aux_3.loss_ce: 0.3016, aux_3.acc_seg: 94.7063, loss: 0.8723
2023-05-04 01:54:17,040 - mmseg - INFO - Iter [8750/10000]	lr: 1.540e-02, eta: 0:18:25, time: 0.851, data_time: 0.230, memory: 18377, decode.loss_ce: 0.0600, decode.acc_seg: 96.8395, aux_0.loss_ce: 0.0618, aux_0.acc_seg: 96.7981, aux_1.loss_ce: 0.0787, aux_1.acc_seg: 95.9714, aux_2.loss_ce: 0.1159, aux_2.loss_dice: 0.2487, aux_2.acc_seg: 96.0957, aux_3.loss_ce: 0.3035, aux_3.acc_seg: 94.7499, loss: 0.8686
2023-05-04 01:54:59,146 - mmseg - INFO - Iter [8800/10000]	lr: 1.485e-02, eta: 0:17:41, time: 0.842, data_time: 0.222, memory: 18377, decode.loss_ce: 0.0624, decode.acc_seg: 96.7254, aux_0.loss_ce: 0.0641, aux_0.acc_seg: 96.6875, aux_1.loss_ce: 0.0813, aux_1.acc_seg: 95.8495, aux_2.loss_ce: 0.1175, aux_2.loss_dice: 0.2488, aux_2.acc_seg: 96.0096, aux_3.loss_ce: 0.3031, aux_3.acc_seg: 94.6408, loss: 0.8772
2023-05-04 01:55:44,704 - mmseg - INFO - Iter [8850/10000]	lr: 1.429e-02, eta: 0:16:57, time: 0.911, data_time: 0.284, memory: 18377, decode.loss_ce: 0.0609, decode.acc_seg: 96.6985, aux_0.loss_ce: 0.0625, aux_0.acc_seg: 96.6561, aux_1.loss_ce: 0.0795, aux_1.acc_seg: 95.8033, aux_2.loss_ce: 0.1157, aux_2.loss_dice: 0.2473, aux_2.acc_seg: 96.0909, aux_3.loss_ce: 0.2944, aux_3.acc_seg: 94.6566, loss: 0.8602
2023-05-04 01:56:26,456 - mmseg - INFO - Iter [8900/10000]	lr: 1.373e-02, eta: 0:16:12, time: 0.835, data_time: 0.219, memory: 18377, decode.loss_ce: 0.0597, decode.acc_seg: 96.8503, aux_0.loss_ce: 0.0616, aux_0.acc_seg: 96.8059, aux_1.loss_ce: 0.0795, aux_1.acc_seg: 95.9158, aux_2.loss_ce: 0.1211, aux_2.loss_dice: 0.2509, aux_2.acc_seg: 95.8489, aux_3.loss_ce: 0.3073, aux_3.acc_seg: 94.7666, loss: 0.8801
2023-05-04 01:57:08,091 - mmseg - INFO - Iter [8950/10000]	lr: 1.317e-02, eta: 0:15:28, time: 0.833, data_time: 0.214, memory: 18377, decode.loss_ce: 0.0580, decode.acc_seg: 96.8812, aux_0.loss_ce: 0.0599, aux_0.acc_seg: 96.8309, aux_1.loss_ce: 0.0763, aux_1.acc_seg: 96.0028, aux_2.loss_ce: 0.1159, aux_2.loss_dice: 0.2476, aux_2.acc_seg: 96.0925, aux_3.loss_ce: 0.2958, aux_3.acc_seg: 94.8214, loss: 0.8535
2023-05-04 01:57:53,293 - mmseg - INFO - Saving checkpoint at 9000 iterations
2023-05-04 01:57:53,672 - mmseg - INFO - Exp name: entextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 01:57:53,673 - mmseg - INFO - Iter [9000/10000]	lr: 1.260e-02, eta: 0:14:44, time: 0.914, data_time: 0.293, memory: 18377, decode.loss_ce: 0.0629, decode.acc_seg: 96.7409, aux_0.loss_ce: 0.0646, aux_0.acc_seg: 96.7062, aux_1.loss_ce: 0.0822, aux_1.acc_seg: 95.8558, aux_2.loss_ce: 0.1192, aux_2.loss_dice: 0.2512, aux_2.acc_seg: 95.9942, aux_3.loss_ce: 0.3100, aux_3.acc_seg: 94.5632, loss: 0.8902
2023-05-04 01:58:04,265 - mmseg - INFO - per class results:
2023-05-04 01:58:04,266 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 86.44 |  96.4 |
|   Building  |  94.6 | 96.75 |
|     Car     | 94.08 | 96.97 |
| Column_Pole | 27.38 | 32.03 |
|    Fence    | 84.01 | 94.15 |
|  Pedestrian | 70.82 | 81.32 |
|     Road    | 97.89 | 98.48 |
|   Sidewalk  | 93.04 |  97.0 |
|  SignSymbol |  6.31 |  6.32 |
|     Sky     | 94.37 | 97.05 |
|     Tree    | 93.62 |  97.9 |
+-------------+-------+-------+
2023-05-04 01:58:04,266 - mmseg - INFO - Summary:
2023-05-04 01:58:04,267 - mmseg - INFO - 
+-------+------+-------+
|  aAcc | mIoU |  mAcc |
+-------+------+-------+
| 96.85 | 76.6 | 81.31 |
+-------+------+-------+
2023-05-04 01:58:04,267 - mmseg - INFO - Exp name: entextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 01:58:04,267 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9685, mIoU: 0.7660, mAcc: 0.8131, IoU.Bicyclist: 0.8644, IoU.Building: 0.9460, IoU.Car: 0.9408, IoU.Column_Pole: 0.2738, IoU.Fence: 0.8401, IoU.Pedestrian: 0.7082, IoU.Road: 0.9789, IoU.Sidewalk: 0.9304, IoU.SignSymbol: 0.0631, IoU.Sky: 0.9437, IoU.Tree: 0.9362, Acc.Bicyclist: 0.9640, Acc.Building: 0.9675, Acc.Car: 0.9697, Acc.Column_Pole: 0.3203, Acc.Fence: 0.9415, Acc.Pedestrian: 0.8132, Acc.Road: 0.9848, Acc.Sidewalk: 0.9700, Acc.SignSymbol: 0.0632, Acc.Sky: 0.9705, Acc.Tree: 0.9790
2023-05-04 01:58:45,739 - mmseg - INFO - Iter [9050/10000]	lr: 1.203e-02, eta: 0:14:00, time: 1.039, data_time: 0.414, memory: 18377, decode.loss_ce: 0.0589, decode.acc_seg: 96.8533, aux_0.loss_ce: 0.0610, aux_0.acc_seg: 96.7977, aux_1.loss_ce: 0.0773, aux_1.acc_seg: 95.9768, aux_2.loss_ce: 0.1166, aux_2.loss_dice: 0.2488, aux_2.acc_seg: 96.0611, aux_3.loss_ce: 0.2971, aux_3.acc_seg: 94.7910, loss: 0.8596
2023-05-04 01:59:27,421 - mmseg - INFO - Iter [9100/10000]	lr: 1.146e-02, eta: 0:13:16, time: 0.834, data_time: 0.214, memory: 18377, decode.loss_ce: 0.0579, decode.acc_seg: 96.9463, aux_0.loss_ce: 0.0596, aux_0.acc_seg: 96.8953, aux_1.loss_ce: 0.0769, aux_1.acc_seg: 96.0581, aux_2.loss_ce: 0.1166, aux_2.loss_dice: 0.2475, aux_2.acc_seg: 96.0171, aux_3.loss_ce: 0.3009, aux_3.acc_seg: 94.8495, loss: 0.8593
2023-05-04 02:00:09,635 - mmseg - INFO - Iter [9150/10000]	lr: 1.089e-02, eta: 0:12:31, time: 0.844, data_time: 0.224, memory: 18377, decode.loss_ce: 0.0582, decode.acc_seg: 96.9171, aux_0.loss_ce: 0.0598, aux_0.acc_seg: 96.8777, aux_1.loss_ce: 0.0777, aux_1.acc_seg: 96.0082, aux_2.loss_ce: 0.1188, aux_2.loss_dice: 0.2497, aux_2.acc_seg: 95.9544, aux_3.loss_ce: 0.3016, aux_3.acc_seg: 94.7744, loss: 0.8659
2023-05-04 02:00:55,848 - mmseg - INFO - Iter [9200/10000]	lr: 1.031e-02, eta: 0:11:47, time: 0.924, data_time: 0.305, memory: 18377, decode.loss_ce: 0.0592, decode.acc_seg: 96.8424, aux_0.loss_ce: 0.0612, aux_0.acc_seg: 96.7969, aux_1.loss_ce: 0.0783, aux_1.acc_seg: 95.9468, aux_2.loss_ce: 0.1178, aux_2.loss_dice: 0.2497, aux_2.acc_seg: 96.0254, aux_3.loss_ce: 0.3010, aux_3.acc_seg: 94.6792, loss: 0.8672
2023-05-04 02:01:36,733 - mmseg - INFO - Iter [9250/10000]	lr: 9.730e-03, eta: 0:11:03, time: 0.818, data_time: 0.200, memory: 18377, decode.loss_ce: 0.0599, decode.acc_seg: 96.8573, aux_0.loss_ce: 0.0617, aux_0.acc_seg: 96.8139, aux_1.loss_ce: 0.0787, aux_1.acc_seg: 95.9734, aux_2.loss_ce: 0.1174, aux_2.loss_dice: 0.2491, aux_2.acc_seg: 96.0268, aux_3.loss_ce: 0.3047, aux_3.acc_seg: 94.7562, loss: 0.8717
2023-05-04 02:02:18,917 - mmseg - INFO - Iter [9300/10000]	lr: 9.145e-03, eta: 0:10:18, time: 0.844, data_time: 0.226, memory: 18377, decode.loss_ce: 0.0570, decode.acc_seg: 96.9242, aux_0.loss_ce: 0.0589, aux_0.acc_seg: 96.8802, aux_1.loss_ce: 0.0754, aux_1.acc_seg: 96.0431, aux_2.loss_ce: 0.1146, aux_2.loss_dice: 0.2459, aux_2.acc_seg: 96.1238, aux_3.loss_ce: 0.2937, aux_3.acc_seg: 94.8718, loss: 0.8456
2023-05-04 02:03:00,117 - mmseg - INFO - Iter [9350/10000]	lr: 8.556e-03, eta: 0:09:34, time: 0.824, data_time: 0.211, memory: 18377, decode.loss_ce: 0.0584, decode.acc_seg: 96.8501, aux_0.loss_ce: 0.0603, aux_0.acc_seg: 96.7984, aux_1.loss_ce: 0.0771, aux_1.acc_seg: 95.9538, aux_2.loss_ce: 0.1168, aux_2.loss_dice: 0.2476, aux_2.acc_seg: 96.0220, aux_3.loss_ce: 0.2950, aux_3.acc_seg: 94.7447, loss: 0.8552
2023-05-04 02:03:45,648 - mmseg - INFO - Iter [9400/10000]	lr: 7.962e-03, eta: 0:08:50, time: 0.911, data_time: 0.296, memory: 18377, decode.loss_ce: 0.0560, decode.acc_seg: 96.9383, aux_0.loss_ce: 0.0579, aux_0.acc_seg: 96.8877, aux_1.loss_ce: 0.0739, aux_1.acc_seg: 96.0840, aux_2.loss_ce: 0.1142, aux_2.loss_dice: 0.2461, aux_2.acc_seg: 96.1362, aux_3.loss_ce: 0.2895, aux_3.acc_seg: 94.9003, loss: 0.8376
2023-05-04 02:04:26,884 - mmseg - INFO - Iter [9450/10000]	lr: 7.364e-03, eta: 0:08:05, time: 0.825, data_time: 0.209, memory: 18377, decode.loss_ce: 0.0598, decode.acc_seg: 96.8726, aux_0.loss_ce: 0.0617, aux_0.acc_seg: 96.8222, aux_1.loss_ce: 0.0788, aux_1.acc_seg: 95.9827, aux_2.loss_ce: 0.1182, aux_2.loss_dice: 0.2500, aux_2.acc_seg: 95.9991, aux_3.loss_ce: 0.3044, aux_3.acc_seg: 94.7676, loss: 0.8728
2023-05-04 02:05:08,580 - mmseg - INFO - Iter [9500/10000]	lr: 6.759e-03, eta: 0:07:21, time: 0.834, data_time: 0.220, memory: 18377, decode.loss_ce: 0.0571, decode.acc_seg: 96.9629, aux_0.loss_ce: 0.0591, aux_0.acc_seg: 96.9098, aux_1.loss_ce: 0.0763, aux_1.acc_seg: 96.0667, aux_2.loss_ce: 0.1172, aux_2.loss_dice: 0.2483, aux_2.acc_seg: 96.0112, aux_3.loss_ce: 0.3004, aux_3.acc_seg: 94.8157, loss: 0.8584
2023-05-04 02:05:53,582 - mmseg - INFO - Iter [9550/10000]	lr: 6.149e-03, eta: 0:06:37, time: 0.900, data_time: 0.286, memory: 18377, decode.loss_ce: 0.0575, decode.acc_seg: 96.9359, aux_0.loss_ce: 0.0594, aux_0.acc_seg: 96.8741, aux_1.loss_ce: 0.0768, aux_1.acc_seg: 96.0074, aux_2.loss_ce: 0.1172, aux_2.loss_dice: 0.2476, aux_2.acc_seg: 95.9938, aux_3.loss_ce: 0.3003, aux_3.acc_seg: 94.7910, loss: 0.8588
2023-05-04 02:06:35,712 - mmseg - INFO - Iter [9600/10000]	lr: 5.532e-03, eta: 0:05:53, time: 0.842, data_time: 0.221, memory: 18377, decode.loss_ce: 0.0581, decode.acc_seg: 96.9134, aux_0.loss_ce: 0.0601, aux_0.acc_seg: 96.8609, aux_1.loss_ce: 0.0770, aux_1.acc_seg: 96.0081, aux_2.loss_ce: 0.1172, aux_2.loss_dice: 0.2482, aux_2.acc_seg: 96.0141, aux_3.loss_ce: 0.3002, aux_3.acc_seg: 94.7806, loss: 0.8610
2023-05-04 02:07:17,477 - mmseg - INFO - Iter [9650/10000]	lr: 4.908e-03, eta: 0:05:09, time: 0.835, data_time: 0.218, memory: 18377, decode.loss_ce: 0.0573, decode.acc_seg: 96.9700, aux_0.loss_ce: 0.0595, aux_0.acc_seg: 96.9053, aux_1.loss_ce: 0.0770, aux_1.acc_seg: 96.0546, aux_2.loss_ce: 0.1183, aux_2.loss_dice: 0.2489, aux_2.acc_seg: 95.9835, aux_3.loss_ce: 0.3037, aux_3.acc_seg: 94.8057, loss: 0.8648
2023-05-04 02:07:59,269 - mmseg - INFO - Iter [9700/10000]	lr: 4.274e-03, eta: 0:04:24, time: 0.836, data_time: 0.222, memory: 18377, decode.loss_ce: 0.0561, decode.acc_seg: 96.9822, aux_0.loss_ce: 0.0580, aux_0.acc_seg: 96.9370, aux_1.loss_ce: 0.0748, aux_1.acc_seg: 96.0900, aux_2.loss_ce: 0.1167, aux_2.loss_dice: 0.2481, aux_2.acc_seg: 96.0575, aux_3.loss_ce: 0.2961, aux_3.acc_seg: 94.8522, loss: 0.8498
2023-05-04 02:08:45,271 - mmseg - INFO - Iter [9750/10000]	lr: 3.629e-03, eta: 0:03:40, time: 0.920, data_time: 0.304, memory: 18377, decode.loss_ce: 0.0580, decode.acc_seg: 96.9255, aux_0.loss_ce: 0.0601, aux_0.acc_seg: 96.8586, aux_1.loss_ce: 0.0773, aux_1.acc_seg: 96.0003, aux_2.loss_ce: 0.1174, aux_2.loss_dice: 0.2494, aux_2.acc_seg: 96.0371, aux_3.loss_ce: 0.3022, aux_3.acc_seg: 94.7742, loss: 0.8643
2023-05-04 02:09:26,986 - mmseg - INFO - Iter [9800/10000]	lr: 2.972e-03, eta: 0:02:56, time: 0.834, data_time: 0.217, memory: 18377, decode.loss_ce: 0.0569, decode.acc_seg: 96.9507, aux_0.loss_ce: 0.0587, aux_0.acc_seg: 96.9126, aux_1.loss_ce: 0.0760, aux_1.acc_seg: 96.0562, aux_2.loss_ce: 0.1163, aux_2.loss_dice: 0.2494, aux_2.acc_seg: 96.0937, aux_3.loss_ce: 0.2973, aux_3.acc_seg: 94.7893, loss: 0.8547
2023-05-04 02:10:09,468 - mmseg - INFO - Iter [9850/10000]	lr: 2.298e-03, eta: 0:02:12, time: 0.850, data_time: 0.228, memory: 18377, decode.loss_ce: 0.0558, decode.acc_seg: 96.9801, aux_0.loss_ce: 0.0576, aux_0.acc_seg: 96.9288, aux_1.loss_ce: 0.0749, aux_1.acc_seg: 96.0546, aux_2.loss_ce: 0.1168, aux_2.loss_dice: 0.2480, aux_2.acc_seg: 96.0203, aux_3.loss_ce: 0.2933, aux_3.acc_seg: 94.8123, loss: 0.8465
2023-05-04 02:10:51,372 - mmseg - INFO - Iter [9900/10000]	lr: 1.600e-03, eta: 0:01:28, time: 0.838, data_time: 0.217, memory: 18377, decode.loss_ce: 0.0577, decode.acc_seg: 96.9456, aux_0.loss_ce: 0.0594, aux_0.acc_seg: 96.9035, aux_1.loss_ce: 0.0774, aux_1.acc_seg: 96.0325, aux_2.loss_ce: 0.1172, aux_2.loss_dice: 0.2486, aux_2.acc_seg: 96.0119, aux_3.loss_ce: 0.3043, aux_3.acc_seg: 94.7550, loss: 0.8646
2023-05-04 02:11:36,123 - mmseg - INFO - Iter [9950/10000]	lr: 8.656e-04, eta: 0:00:44, time: 0.895, data_time: 0.277, memory: 18377, decode.loss_ce: 0.0578, decode.acc_seg: 96.9613, aux_0.loss_ce: 0.0595, aux_0.acc_seg: 96.9190, aux_1.loss_ce: 0.0770, aux_1.acc_seg: 96.0632, aux_2.loss_ce: 0.1183, aux_2.loss_dice: 0.2485, aux_2.acc_seg: 95.9778, aux_3.loss_ce: 0.3047, aux_3.acc_seg: 94.8092, loss: 0.8658
2023-05-04 02:12:17,606 - mmseg - INFO - Saving checkpoint at 10000 iterations
2023-05-04 02:12:17,975 - mmseg - INFO - Exp name: entextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 02:12:17,975 - mmseg - INFO - Iter [10000/10000]	lr: 2.612e-05, eta: 0:00:00, time: 0.839, data_time: 0.210, memory: 18377, decode.loss_ce: 0.0585, decode.acc_seg: 96.8986, aux_0.loss_ce: 0.0606, aux_0.acc_seg: 96.8474, aux_1.loss_ce: 0.0777, aux_1.acc_seg: 95.9959, aux_2.loss_ce: 0.1168, aux_2.loss_dice: 0.2499, aux_2.acc_seg: 96.0743, aux_3.loss_ce: 0.3029, aux_3.acc_seg: 94.7481, loss: 0.8664
2023-05-04 02:12:24,708 - mmseg - INFO - per class results:
2023-05-04 02:12:24,709 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  |  86.9 | 93.41 |
|   Building  | 94.22 | 96.07 |
|     Car     | 93.37 | 95.78 |
| Column_Pole | 25.82 | 29.64 |
|    Fence    | 83.73 |  94.3 |
|  Pedestrian | 69.97 | 86.47 |
|     Road    | 97.93 | 98.83 |
|   Sidewalk  | 92.97 | 97.09 |
|  SignSymbol |  0.61 |  0.61 |
|     Sky     | 94.19 | 96.71 |
|     Tree    | 93.28 | 98.26 |
+-------------+-------+-------+
2023-05-04 02:12:24,709 - mmseg - INFO - Summary:
2023-05-04 02:12:24,709 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 96.74 | 75.73 | 80.65 |
+-------+-------+-------+
2023-05-04 02:12:24,710 - mmseg - INFO - Exp name: entextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 02:12:24,710 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9674, mIoU: 0.7573, mAcc: 0.8065, IoU.Bicyclist: 0.8690, IoU.Building: 0.9422, IoU.Car: 0.9337, IoU.Column_Pole: 0.2582, IoU.Fence: 0.8373, IoU.Pedestrian: 0.6997, IoU.Road: 0.9793, IoU.Sidewalk: 0.9297, IoU.SignSymbol: 0.0061, IoU.Sky: 0.9419, IoU.Tree: 0.9328, Acc.Bicyclist: 0.9341, Acc.Building: 0.9607, Acc.Car: 0.9578, Acc.Column_Pole: 0.2964, Acc.Fence: 0.9430, Acc.Pedestrian: 0.8647, Acc.Road: 0.9883, Acc.Sidewalk: 0.9709, Acc.SignSymbol: 0.0061, Acc.Sky: 0.9671, Acc.Tree: 0.9826
