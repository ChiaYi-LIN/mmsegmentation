2023-05-03 21:47:58,945 - mmseg - INFO - Multi-processing start method is `None`
2023-05-03 21:47:58,946 - mmseg - INFO - OpenCV num_threads is `96
2023-05-03 21:47:59,007 - mmseg - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.16 (default, Mar  2 2023, 03:21:46) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 3090
CUDA_HOME: None
GCC: gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
PyTorch: 1.12.1+cu113
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.13.1+cu113
OpenCV: 4.7.0
MMCV: 1.7.0
MMCV Compiler: GCC 9.3
MMCV CUDA Compiler: 11.3
MMSegmentation: 0.30.0+e7ed570
------------------------------------------------------------

2023-05-03 21:47:59,008 - mmseg - INFO - Distributed training: False
2023-05-03 21:47:59,980 - mmseg - INFO - Config:
norm_cfg = dict(type='BN', requires_grad=True)
model = dict(
    type='EncoderDecoder',
    pretrained=None,
    backbone=dict(
        type='STDCContextPathNet',
        backbone_cfg=dict(
            type='STDCNet',
            stdc_type='STDCNet1',
            in_channels=3,
            channels=(32, 64, 256, 512, 1024),
            bottleneck_type='cat',
            num_convs=4,
            norm_cfg=dict(type='BN', requires_grad=True),
            act_cfg=dict(type='ReLU'),
            with_final_conv=False,
            init_cfg=dict(
                type='Pretrained',
                checkpoint=
                'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth'
            )),
        last_in_channels=(1024, 512),
        out_channels=128,
        ffm_cfg=dict(in_channels=384, out_channels=256, scale_factor=4)),
    decode_head=dict(
        type='FCNHead',
        in_channels=256,
        channels=256,
        num_convs=1,
        num_classes=19,
        in_index=3,
        concat_input=False,
        dropout_ratio=0.1,
        norm_cfg=dict(type='BN', requires_grad=True),
        align_corners=True,
        sampler=dict(type='OHEMPixelSampler', thresh=0.7, min_kept=690000),
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
    auxiliary_head=[
        dict(
            type='FCNHead',
            in_channels=128,
            channels=64,
            num_convs=1,
            num_classes=11,
            in_index=2,
            norm_cfg=dict(type='BN', requires_grad=True),
            concat_input=False,
            align_corners=False,
            sampler=dict(type='OHEMPixelSampler', thresh=0.7, min_kept=690000),
            loss_decode=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
        dict(
            type='FCNHead',
            in_channels=128,
            channels=64,
            num_convs=1,
            num_classes=11,
            in_index=1,
            norm_cfg=dict(type='BN', requires_grad=True),
            concat_input=False,
            align_corners=False,
            sampler=dict(type='OHEMPixelSampler', thresh=0.7, min_kept=690000),
            loss_decode=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
        dict(
            type='STDCHead',
            in_channels=256,
            channels=64,
            num_convs=1,
            num_classes=2,
            boundary_threshold=0.1,
            in_index=0,
            norm_cfg=dict(type='BN', requires_grad=True),
            concat_input=False,
            align_corners=True,
            loss_decode=[
                dict(
                    type='CrossEntropyLoss',
                    loss_name='loss_ce',
                    use_sigmoid=True,
                    loss_weight=1.0),
                dict(type='DiceLoss', loss_name='loss_dice', loss_weight=1.0)
            ])
    ],
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
dataset_type = 'CamVidDataset'
data_root = 'data/CamVid/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
crop_size = (720, 960)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(
        type='Resize',
        img_scale=(960, 720),
        ratio_range=(0.5, 2.5),
        scale_step_size=0.25),
    dict(type='RandomCrop', crop_size=(720, 960), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size=(720, 960), pad_val=0, seg_pad_val=255),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_semantic_seg'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(960, 720),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=16,
    workers_per_gpu=4,
    train=dict(
        type='CamVidDataset',
        data_root='data/CamVid/',
        img_dir='train',
        ann_dir='train_labelIds',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations'),
            dict(
                type='Resize',
                img_scale=(960, 720),
                ratio_range=(0.5, 2.5),
                scale_step_size=0.25),
            dict(type='RandomCrop', crop_size=(720, 960), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size=(720, 960), pad_val=0, seg_pad_val=255),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_semantic_seg'])
        ]),
    val=dict(
        type='CamVidDataset',
        data_root='data/CamVid/',
        img_dir='val',
        ann_dir='val_labelIds',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(960, 720),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CamVidDataset',
        data_root='data/CamVid/',
        img_dir='val',
        ann_dir='val_labelIds',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(960, 720),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
log_config = dict(
    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
cudnn_benchmark = True
optimizer = dict(
    type='SGD',
    lr=0.1,
    momentum=0.9,
    weight_decay=0.0005,
    paramwise_cfg=dict(
        custom_keys=dict({
            'backbone.backbone': dict(lr_mult=0.1),
            '.bn.': dict(decay_mult=0.0)
        })))
optimizer_config = dict()
lr_config = dict(
    policy='poly',
    power=0.9,
    min_lr=1e-06,
    by_epoch=False,
    warmup='linear',
    warmup_iters=200,
    warmup_ratio=1e-05)
runner = dict(type='IterBasedRunner', max_iters=10000)
checkpoint_config = dict(by_epoch=False, interval=1000)
evaluation = dict(interval=1000, metric='mIoU', pre_eval=True)
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth'
work_dir = './work_dirs/stdc1_1x16_720x960_10k_camvid'
gpu_ids = [0]
auto_resume = False

2023-05-03 21:47:59,981 - mmseg - INFO - Set random seed to 1456132590, deterministic: False
2023-05-03 21:47:59,986 - mmseg - INFO - Loaded 367 images
2023-05-03 21:48:01,127 - mmseg - INFO - initialize STDCNet with init_cfg {'type': 'Pretrained', 'checkpoint': 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth'}
2023-05-03 21:48:01,298 - mmseg - INFO - initialize FCNHead with init_cfg {'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
Name of parameter - Initialization information

backbone.backbone.stages.0.conv.weight - torch.Size([32, 3, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.0.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.0.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.1.conv.weight - torch.Size([64, 32, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.1.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.0.conv.weight - torch.Size([128, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.0.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.0.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.1.conv.weight - torch.Size([64, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.1.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.2.conv.weight - torch.Size([32, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.2.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.2.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.3.conv.weight - torch.Size([32, 32, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.3.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.3.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.downsample.conv.weight - torch.Size([128, 1, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.downsample.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.downsample.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.0.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.0.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.0.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.1.conv.weight - torch.Size([64, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.1.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.2.conv.weight - torch.Size([32, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.2.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.2.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.3.conv.weight - torch.Size([32, 32, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.3.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.3.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.0.conv.weight - torch.Size([256, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.0.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.0.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.1.conv.weight - torch.Size([128, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.1.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.1.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.2.conv.weight - torch.Size([64, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.2.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.2.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.3.conv.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.3.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.3.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.downsample.conv.weight - torch.Size([256, 1, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.downsample.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.downsample.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.0.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.0.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.0.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.1.conv.weight - torch.Size([128, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.1.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.1.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.2.conv.weight - torch.Size([64, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.2.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.2.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.3.conv.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.3.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.3.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.0.conv.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.0.bn.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.0.bn.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.1.conv.weight - torch.Size([256, 512, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.1.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.1.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.2.conv.weight - torch.Size([128, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.2.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.2.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.3.conv.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.3.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.3.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.downsample.conv.weight - torch.Size([512, 1, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.downsample.bn.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.downsample.bn.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.0.conv.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.0.bn.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.0.bn.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.1.conv.weight - torch.Size([256, 512, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.1.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.1.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.2.conv.weight - torch.Size([128, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.2.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.2.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.3.conv.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.3.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.3.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.arms.0.conv_layer.conv.weight - torch.Size([128, 1024, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.arms.0.conv_layer.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.0.conv_layer.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.0.atten_conv_layer.1.conv.weight - torch.Size([128, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.0.atten_conv_layer.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.0.atten_conv_layer.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.conv_layer.conv.weight - torch.Size([128, 512, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.arms.1.conv_layer.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.conv_layer.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.atten_conv_layer.1.conv.weight - torch.Size([128, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.atten_conv_layer.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.atten_conv_layer.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.convs.0.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.convs.0.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.convs.0.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.convs.1.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.convs.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.convs.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.conv_avg.conv.weight - torch.Size([128, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.conv_avg.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.conv_avg.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.ffm.conv0.conv.weight - torch.Size([256, 384, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.ffm.conv0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.ffm.conv0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.ffm.attention.1.conv.weight - torch.Size([64, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.ffm.attention.2.conv.weight - torch.Size([256, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.conv_seg.weight - torch.Size([19, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.conv_seg.bias - torch.Size([19]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.conv_seg.weight - torch.Size([11, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.conv_seg.bias - torch.Size([11]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.convs.0.conv.weight - torch.Size([64, 128, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.convs.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.convs.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.conv_seg.weight - torch.Size([11, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.conv_seg.bias - torch.Size([11]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.convs.0.conv.weight - torch.Size([64, 128, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.convs.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.convs.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.fusion_kernel - torch.Size([1, 3, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.conv_seg.weight - torch.Size([2, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.conv_seg.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.convs.0.conv.weight - torch.Size([64, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.convs.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.convs.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
2023-05-03 21:48:01,302 - mmseg - INFO - EncoderDecoder(
  (backbone): STDCContextPathNet(
    (backbone): STDCNet(
      (stages): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (1): ConvModule(
          (conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (2): Sequential(
          (0): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
            (downsample): ConvModule(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
              (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (skip): AvgPool2d(kernel_size=3, stride=2, padding=1)
          )
          (1): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
          )
        )
        (3): Sequential(
          (0): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
            (downsample): ConvModule(
              (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=256, bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (skip): AvgPool2d(kernel_size=3, stride=2, padding=1)
          )
          (1): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
          )
        )
        (4): Sequential(
          (0): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
            (downsample): ConvModule(
              (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=512, bias=False)
              (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (skip): AvgPool2d(kernel_size=3, stride=2, padding=1)
          )
          (1): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
          )
        )
      )
    )
    init_cfg={'type': 'Pretrained', 'checkpoint': 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth'}
    (arms): ModuleList(
      (0): AttentionRefinementModule(
        (conv_layer): ConvModule(
          (conv): Conv2d(1024, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (atten_conv_layer): Sequential(
          (0): AdaptiveAvgPool2d(output_size=(1, 1))
          (1): ConvModule(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): Sigmoid()
        )
      )
      (1): AttentionRefinementModule(
        (conv_layer): ConvModule(
          (conv): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (atten_conv_layer): Sequential(
          (0): AdaptiveAvgPool2d(output_size=(1, 1))
          (1): ConvModule(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): Sigmoid()
        )
      )
    )
    (convs): ModuleList(
      (0): ConvModule(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
      (1): ConvModule(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
    (conv_avg): ConvModule(
      (conv): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activate): ReLU(inplace=True)
    )
    (ffm): FeatureFusionModule(
      (conv0): ConvModule(
        (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
      (attention): Sequential(
        (0): AdaptiveAvgPool2d(output_size=(1, 1))
        (1): ConvModule(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (activate): ReLU(inplace=True)
        )
        (2): ConvModule(
          (conv): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (3): Sigmoid()
      )
    )
  )
  (decode_head): FCNHead(
    input_transform=None, ignore_index=255, align_corners=True
    (loss_decode): CrossEntropyLoss(avg_non_ignore=False)
    (conv_seg): Conv2d(256, 19, kernel_size=(1, 1), stride=(1, 1))
    (dropout): Dropout2d(p=0.1, inplace=False)
    (convs): Sequential(
      (0): ConvModule(
        (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
  )
  init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
  (auxiliary_head): ModuleList(
    (0): FCNHead(
      input_transform=None, ignore_index=255, align_corners=False
      (loss_decode): CrossEntropyLoss(avg_non_ignore=False)
      (conv_seg): Conv2d(64, 11, kernel_size=(1, 1), stride=(1, 1))
      (dropout): Dropout2d(p=0.1, inplace=False)
      (convs): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
    init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
    (1): FCNHead(
      input_transform=None, ignore_index=255, align_corners=False
      (loss_decode): CrossEntropyLoss(avg_non_ignore=False)
      (conv_seg): Conv2d(64, 11, kernel_size=(1, 1), stride=(1, 1))
      (dropout): Dropout2d(p=0.1, inplace=False)
      (convs): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
    init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
    (2): STDCHead(
      input_transform=None, ignore_index=255, align_corners=True
      (loss_decode): ModuleList(
        (0): CrossEntropyLoss(avg_non_ignore=False)
        (1): DiceLoss()
      )
      (conv_seg): Conv2d(64, 2, kernel_size=(1, 1), stride=(1, 1))
      (dropout): Dropout2d(p=0.1, inplace=False)
      (convs): Sequential(
        (0): ConvModule(
          (conv): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
    init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
  )
)
2023-05-03 21:48:03,412 - mmseg - INFO - Loaded 101 images
2023-05-03 21:48:03,414 - mmseg - INFO - Start running, host: linchiayi@cml9, work_dir: /tmp2/linchiayi/mmsegmentation/work_dirs/stdc1_1x16_720x960_10k_camvid
2023-05-03 21:48:03,414 - mmseg - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-05-03 21:48:03,414 - mmseg - INFO - workflow: [('train', 1)], max: 10000 iters
2023-05-03 21:48:03,414 - mmseg - INFO - Checkpoints will be saved to /tmp2/linchiayi/mmsegmentation/work_dirs/stdc1_1x16_720x960_10k_camvid by HardDiskBackend.
2023-05-03 21:48:46,204 - mmseg - INFO - Iter [50/10000]	lr: 2.439e-03, eta: 2:20:09, time: 0.845, data_time: 0.273, memory: 18289, decode.loss_ce: 1.3202, decode.acc_seg: 47.6964, aux_0.loss_ce: 1.2686, aux_0.acc_seg: 44.9251, aux_1.loss_ce: 1.2727, aux_1.acc_seg: 46.1335, aux_2.loss_ce: 0.3216, aux_2.loss_dice: 0.4905, aux_2.acc_seg: 92.5811, loss: 4.6737
2023-05-03 21:49:19,069 - mmseg - INFO - Iter [100/10000]	lr: 4.906e-03, eta: 2:03:56, time: 0.657, data_time: 0.224, memory: 18289, decode.loss_ce: 0.4992, decode.acc_seg: 80.0360, aux_0.loss_ce: 0.5201, aux_0.acc_seg: 79.7894, aux_1.loss_ce: 0.5663, aux_1.acc_seg: 78.1911, aux_2.loss_ce: 0.1632, aux_2.loss_dice: 0.4252, aux_2.acc_seg: 95.8655, loss: 2.1739
2023-05-03 21:49:52,228 - mmseg - INFO - Iter [150/10000]	lr: 7.350e-03, eta: 1:58:30, time: 0.663, data_time: 0.228, memory: 18289, decode.loss_ce: 0.3432, decode.acc_seg: 85.9039, aux_0.loss_ce: 0.3543, aux_0.acc_seg: 85.7691, aux_1.loss_ce: 0.3805, aux_1.acc_seg: 84.9486, aux_2.loss_ce: 0.1444, aux_2.loss_dice: 0.3256, aux_2.acc_seg: 95.9759, loss: 1.5480
2023-05-03 21:50:29,140 - mmseg - INFO - Iter [200/10000]	lr: 9.772e-03, eta: 1:58:34, time: 0.738, data_time: 0.303, memory: 18289, decode.loss_ce: 0.2992, decode.acc_seg: 87.7989, aux_0.loss_ce: 0.2974, aux_0.acc_seg: 87.9069, aux_1.loss_ce: 0.3216, aux_1.acc_seg: 87.0629, aux_2.loss_ce: 0.1413, aux_2.loss_dice: 0.3106, aux_2.acc_seg: 95.8905, loss: 1.3702
2023-05-03 21:51:03,458 - mmseg - INFO - Iter [250/10000]	lr: 9.776e-03, eta: 1:56:40, time: 0.686, data_time: 0.239, memory: 18289, decode.loss_ce: 0.2546, decode.acc_seg: 89.2625, aux_0.loss_ce: 0.2589, aux_0.acc_seg: 89.1690, aux_1.loss_ce: 0.2809, aux_1.acc_seg: 88.3639, aux_2.loss_ce: 0.1380, aux_2.loss_dice: 0.2990, aux_2.acc_seg: 95.9539, loss: 1.2314
2023-05-03 21:51:36,660 - mmseg - INFO - Iter [300/10000]	lr: 9.731e-03, eta: 1:54:37, time: 0.664, data_time: 0.228, memory: 18289, decode.loss_ce: 0.2028, decode.acc_seg: 91.2889, aux_0.loss_ce: 0.2161, aux_0.acc_seg: 90.8260, aux_1.loss_ce: 0.2377, aux_1.acc_seg: 90.1400, aux_2.loss_ce: 0.1373, aux_2.loss_dice: 0.2956, aux_2.acc_seg: 95.9170, loss: 1.0895
2023-05-03 21:52:10,564 - mmseg - INFO - Iter [350/10000]	lr: 9.685e-03, eta: 1:53:19, time: 0.678, data_time: 0.241, memory: 18289, decode.loss_ce: 0.1903, decode.acc_seg: 91.6904, aux_0.loss_ce: 0.1976, aux_0.acc_seg: 91.4160, aux_1.loss_ce: 0.2204, aux_1.acc_seg: 90.6386, aux_2.loss_ce: 0.1354, aux_2.loss_dice: 0.2895, aux_2.acc_seg: 95.9374, loss: 1.0331
2023-05-03 21:52:47,912 - mmseg - INFO - Iter [400/10000]	lr: 9.640e-03, eta: 1:53:35, time: 0.747, data_time: 0.312, memory: 18289, decode.loss_ce: 0.1652, decode.acc_seg: 92.5333, aux_0.loss_ce: 0.1733, aux_0.acc_seg: 92.2040, aux_1.loss_ce: 0.1974, aux_1.acc_seg: 91.3843, aux_2.loss_ce: 0.1329, aux_2.loss_dice: 0.2841, aux_2.acc_seg: 95.9983, loss: 0.9528
2023-05-03 21:53:21,688 - mmseg - INFO - Iter [450/10000]	lr: 9.595e-03, eta: 1:52:23, time: 0.676, data_time: 0.238, memory: 18289, decode.loss_ce: 0.1741, decode.acc_seg: 92.3088, aux_0.loss_ce: 0.1812, aux_0.acc_seg: 91.9725, aux_1.loss_ce: 0.2049, aux_1.acc_seg: 91.1510, aux_2.loss_ce: 0.1328, aux_2.loss_dice: 0.2839, aux_2.acc_seg: 95.9782, loss: 0.9770
2023-05-03 21:53:56,557 - mmseg - INFO - Iter [500/10000]	lr: 9.550e-03, eta: 1:51:39, time: 0.697, data_time: 0.257, memory: 18289, decode.loss_ce: 0.1826, decode.acc_seg: 91.9568, aux_0.loss_ce: 0.1849, aux_0.acc_seg: 91.8025, aux_1.loss_ce: 0.2087, aux_1.acc_seg: 90.9765, aux_2.loss_ce: 0.1332, aux_2.loss_dice: 0.2825, aux_2.acc_seg: 95.9786, loss: 0.9917
2023-05-03 21:54:31,690 - mmseg - INFO - Iter [550/10000]	lr: 9.505e-03, eta: 1:51:02, time: 0.703, data_time: 0.255, memory: 18289, decode.loss_ce: 0.1653, decode.acc_seg: 92.7167, aux_0.loss_ce: 0.1700, aux_0.acc_seg: 92.5062, aux_1.loss_ce: 0.1930, aux_1.acc_seg: 91.6835, aux_2.loss_ce: 0.1328, aux_2.loss_dice: 0.2830, aux_2.acc_seg: 96.0425, loss: 0.9442
2023-05-03 21:55:08,927 - mmseg - INFO - Iter [600/10000]	lr: 9.459e-03, eta: 1:50:57, time: 0.745, data_time: 0.313, memory: 18289, decode.loss_ce: 0.1435, decode.acc_seg: 93.5038, aux_0.loss_ce: 0.1493, aux_0.acc_seg: 93.2362, aux_1.loss_ce: 0.1702, aux_1.acc_seg: 92.4373, aux_2.loss_ce: 0.1309, aux_2.loss_dice: 0.2796, aux_2.acc_seg: 96.0437, loss: 0.8734
2023-05-03 21:55:42,163 - mmseg - INFO - Iter [650/10000]	lr: 9.414e-03, eta: 1:49:51, time: 0.665, data_time: 0.231, memory: 18289, decode.loss_ce: 0.1375, decode.acc_seg: 93.8154, aux_0.loss_ce: 0.1442, aux_0.acc_seg: 93.5177, aux_1.loss_ce: 0.1648, aux_1.acc_seg: 92.6699, aux_2.loss_ce: 0.1293, aux_2.loss_dice: 0.2789, aux_2.acc_seg: 96.1396, loss: 0.8546
2023-05-03 21:56:14,686 - mmseg - INFO - Iter [700/10000]	lr: 9.369e-03, eta: 1:48:39, time: 0.650, data_time: 0.223, memory: 18289, decode.loss_ce: 0.1289, decode.acc_seg: 93.9759, aux_0.loss_ce: 0.1349, aux_0.acc_seg: 93.7114, aux_1.loss_ce: 0.1533, aux_1.acc_seg: 92.8935, aux_2.loss_ce: 0.1290, aux_2.loss_dice: 0.2751, aux_2.acc_seg: 96.0179, loss: 0.8211
2023-05-03 21:56:51,548 - mmseg - INFO - Iter [750/10000]	lr: 9.323e-03, eta: 1:48:26, time: 0.737, data_time: 0.304, memory: 18289, decode.loss_ce: 0.1219, decode.acc_seg: 94.1985, aux_0.loss_ce: 0.1278, aux_0.acc_seg: 93.9428, aux_1.loss_ce: 0.1470, aux_1.acc_seg: 93.1098, aux_2.loss_ce: 0.1259, aux_2.loss_dice: 0.2706, aux_2.acc_seg: 96.1403, loss: 0.7934
2023-05-03 21:57:25,077 - mmseg - INFO - Iter [800/10000]	lr: 9.278e-03, eta: 1:47:32, time: 0.671, data_time: 0.235, memory: 18289, decode.loss_ce: 0.1308, decode.acc_seg: 93.9498, aux_0.loss_ce: 0.1353, aux_0.acc_seg: 93.7524, aux_1.loss_ce: 0.1531, aux_1.acc_seg: 92.9859, aux_2.loss_ce: 0.1284, aux_2.loss_dice: 0.2753, aux_2.acc_seg: 96.0546, loss: 0.8228
2023-05-03 21:57:58,234 - mmseg - INFO - Iter [850/10000]	lr: 9.233e-03, eta: 1:46:37, time: 0.663, data_time: 0.229, memory: 18289, decode.loss_ce: 0.1268, decode.acc_seg: 94.1603, aux_0.loss_ce: 0.1316, aux_0.acc_seg: 93.9430, aux_1.loss_ce: 0.1509, aux_1.acc_seg: 93.1347, aux_2.loss_ce: 0.1299, aux_2.loss_dice: 0.2740, aux_2.acc_seg: 95.9942, loss: 0.8131
2023-05-03 21:58:32,301 - mmseg - INFO - Iter [900/10000]	lr: 9.187e-03, eta: 1:45:53, time: 0.681, data_time: 0.241, memory: 18289, decode.loss_ce: 0.1145, decode.acc_seg: 94.5952, aux_0.loss_ce: 0.1194, aux_0.acc_seg: 94.3777, aux_1.loss_ce: 0.1378, aux_1.acc_seg: 93.6074, aux_2.loss_ce: 0.1268, aux_2.loss_dice: 0.2713, aux_2.acc_seg: 96.1019, loss: 0.7697
2023-05-03 21:59:10,671 - mmseg - INFO - Iter [950/10000]	lr: 9.142e-03, eta: 1:45:51, time: 0.767, data_time: 0.333, memory: 18289, decode.loss_ce: 0.1176, decode.acc_seg: 94.4057, aux_0.loss_ce: 0.1231, aux_0.acc_seg: 94.1718, aux_1.loss_ce: 0.1397, aux_1.acc_seg: 93.4060, aux_2.loss_ce: 0.1279, aux_2.loss_dice: 0.2713, aux_2.acc_seg: 96.0172, loss: 0.7796
2023-05-03 21:59:43,703 - mmseg - INFO - Saving checkpoint at 1000 iterations
2023-05-03 21:59:44,071 - mmseg - INFO - Exp name: stdc1_1x16_720x960_10k_camvid.py
2023-05-03 21:59:44,072 - mmseg - INFO - Iter [1000/10000]	lr: 9.096e-03, eta: 1:45:02, time: 0.671, data_time: 0.223, memory: 18289, decode.loss_ce: 0.1088, decode.acc_seg: 94.7351, aux_0.loss_ce: 0.1141, aux_0.acc_seg: 94.4803, aux_1.loss_ce: 0.1315, aux_1.acc_seg: 93.6862, aux_2.loss_ce: 0.1261, aux_2.loss_dice: 0.2693, aux_2.acc_seg: 96.0585, loss: 0.7500
2023-05-03 21:59:58,532 - mmseg - INFO - per class results:
2023-05-03 21:59:58,534 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  |  80.8 | 91.47 |
|   Building  | 91.31 | 92.89 |
|     Car     | 89.32 | 95.52 |
| Column_Pole |  9.38 | 10.59 |
|    Fence    |  76.8 | 96.28 |
|  Pedestrian | 50.48 | 81.88 |
|     Road    | 96.98 | 98.16 |
|   Sidewalk  |  90.0 | 95.68 |
|  SignSymbol |  0.0  |  0.0  |
|     Sky     | 94.12 | 97.19 |
|     Tree    | 91.95 | 97.82 |
+-------------+-------+-------+
2023-05-03 21:59:58,534 - mmseg - INFO - Summary:
2023-05-03 21:59:58,535 - mmseg - INFO - 
+-------+------+-------+
|  aAcc | mIoU |  mAcc |
+-------+------+-------+
| 95.43 | 70.1 | 77.95 |
+-------+------+-------+
2023-05-03 21:59:58,535 - mmseg - INFO - Exp name: stdc1_1x16_720x960_10k_camvid.py
2023-05-03 21:59:58,535 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9543, mIoU: 0.7010, mAcc: 0.7795, IoU.Bicyclist: 0.8080, IoU.Building: 0.9131, IoU.Car: 0.8932, IoU.Column_Pole: 0.0938, IoU.Fence: 0.7680, IoU.Pedestrian: 0.5048, IoU.Road: 0.9698, IoU.Sidewalk: 0.9000, IoU.SignSymbol: 0.0000, IoU.Sky: 0.9412, IoU.Tree: 0.9195, Acc.Bicyclist: 0.9147, Acc.Building: 0.9289, Acc.Car: 0.9552, Acc.Column_Pole: 0.1059, Acc.Fence: 0.9628, Acc.Pedestrian: 0.8188, Acc.Road: 0.9816, Acc.Sidewalk: 0.9568, Acc.SignSymbol: 0.0000, Acc.Sky: 0.9719, Acc.Tree: 0.9782
2023-05-03 22:00:31,235 - mmseg - INFO - Iter [1050/10000]	lr: 9.051e-03, eta: 1:46:09, time: 0.941, data_time: 0.511, memory: 18289, decode.loss_ce: 0.1147, decode.acc_seg: 94.6372, aux_0.loss_ce: 0.1193, aux_0.acc_seg: 94.4259, aux_1.loss_ce: 0.1361, aux_1.acc_seg: 93.6583, aux_2.loss_ce: 0.1281, aux_2.loss_dice: 0.2712, aux_2.acc_seg: 96.0571, loss: 0.7694
2023-05-03 22:01:03,658 - mmseg - INFO - Iter [1100/10000]	lr: 9.005e-03, eta: 1:45:08, time: 0.648, data_time: 0.230, memory: 18289, decode.loss_ce: 0.1236, decode.acc_seg: 94.3422, aux_0.loss_ce: 0.1284, aux_0.acc_seg: 94.1627, aux_1.loss_ce: 0.1449, aux_1.acc_seg: 93.3782, aux_2.loss_ce: 0.1274, aux_2.loss_dice: 0.2721, aux_2.acc_seg: 96.0594, loss: 0.7964
2023-05-03 22:01:42,874 - mmseg - INFO - Iter [1150/10000]	lr: 8.960e-03, eta: 1:45:02, time: 0.784, data_time: 0.349, memory: 18289, decode.loss_ce: 0.1177, decode.acc_seg: 94.4453, aux_0.loss_ce: 0.1223, aux_0.acc_seg: 94.2304, aux_1.loss_ce: 0.1395, aux_1.acc_seg: 93.4142, aux_2.loss_ce: 0.1274, aux_2.loss_dice: 0.2693, aux_2.acc_seg: 96.0333, loss: 0.7761
2023-05-03 22:02:16,971 - mmseg - INFO - Iter [1200/10000]	lr: 8.914e-03, eta: 1:44:15, time: 0.682, data_time: 0.251, memory: 18289, decode.loss_ce: 0.1070, decode.acc_seg: 94.7472, aux_0.loss_ce: 0.1113, aux_0.acc_seg: 94.5476, aux_1.loss_ce: 0.1285, aux_1.acc_seg: 93.7228, aux_2.loss_ce: 0.1235, aux_2.loss_dice: 0.2641, aux_2.acc_seg: 96.1095, loss: 0.7345
2023-05-03 22:02:52,052 - mmseg - INFO - Iter [1250/10000]	lr: 8.869e-03, eta: 1:43:36, time: 0.702, data_time: 0.256, memory: 18289, decode.loss_ce: 0.1111, decode.acc_seg: 94.7749, aux_0.loss_ce: 0.1162, aux_0.acc_seg: 94.5399, aux_1.loss_ce: 0.1364, aux_1.acc_seg: 93.6430, aux_2.loss_ce: 0.1282, aux_2.loss_dice: 0.2707, aux_2.acc_seg: 96.0229, loss: 0.7625
2023-05-03 22:03:31,856 - mmseg - INFO - Iter [1300/10000]	lr: 8.823e-03, eta: 1:43:29, time: 0.796, data_time: 0.371, memory: 18289, decode.loss_ce: 0.1051, decode.acc_seg: 95.0632, aux_0.loss_ce: 0.1103, aux_0.acc_seg: 94.8464, aux_1.loss_ce: 0.1281, aux_1.acc_seg: 94.0265, aux_2.loss_ce: 0.1254, aux_2.loss_dice: 0.2675, aux_2.acc_seg: 96.0780, loss: 0.7364
2023-05-03 22:04:07,456 - mmseg - INFO - Iter [1350/10000]	lr: 8.777e-03, eta: 1:42:53, time: 0.712, data_time: 0.268, memory: 18289, decode.loss_ce: 0.1000, decode.acc_seg: 95.2683, aux_0.loss_ce: 0.1051, aux_0.acc_seg: 95.0598, aux_1.loss_ce: 0.1221, aux_1.acc_seg: 94.2483, aux_2.loss_ce: 0.1242, aux_2.loss_dice: 0.2652, aux_2.acc_seg: 96.1154, loss: 0.7166
2023-05-03 22:04:44,974 - mmseg - INFO - Iter [1400/10000]	lr: 8.732e-03, eta: 1:42:29, time: 0.750, data_time: 0.295, memory: 18289, decode.loss_ce: 0.1025, decode.acc_seg: 95.0785, aux_0.loss_ce: 0.1063, aux_0.acc_seg: 94.9192, aux_1.loss_ce: 0.1227, aux_1.acc_seg: 94.1458, aux_2.loss_ce: 0.1244, aux_2.loss_dice: 0.2657, aux_2.acc_seg: 96.0851, loss: 0.7215
2023-05-03 22:05:21,583 - mmseg - INFO - Iter [1450/10000]	lr: 8.686e-03, eta: 1:41:58, time: 0.732, data_time: 0.282, memory: 18289, decode.loss_ce: 0.0965, decode.acc_seg: 95.2380, aux_0.loss_ce: 0.1006, aux_0.acc_seg: 95.0633, aux_1.loss_ce: 0.1185, aux_1.acc_seg: 94.1955, aux_2.loss_ce: 0.1237, aux_2.loss_dice: 0.2644, aux_2.acc_seg: 96.0876, loss: 0.7037
2023-05-03 22:06:01,319 - mmseg - INFO - Iter [1500/10000]	lr: 8.640e-03, eta: 1:41:45, time: 0.795, data_time: 0.352, memory: 18289, decode.loss_ce: 0.0936, decode.acc_seg: 95.4119, aux_0.loss_ce: 0.0976, aux_0.acc_seg: 95.2485, aux_1.loss_ce: 0.1144, aux_1.acc_seg: 94.4313, aux_2.loss_ce: 0.1246, aux_2.loss_dice: 0.2626, aux_2.acc_seg: 96.0035, loss: 0.6928
2023-05-03 22:06:36,325 - mmseg - INFO - Iter [1550/10000]	lr: 8.595e-03, eta: 1:41:04, time: 0.700, data_time: 0.267, memory: 18289, decode.loss_ce: 0.0893, decode.acc_seg: 95.5540, aux_0.loss_ce: 0.0940, aux_0.acc_seg: 95.3603, aux_1.loss_ce: 0.1097, aux_1.acc_seg: 94.5728, aux_2.loss_ce: 0.1231, aux_2.loss_dice: 0.2614, aux_2.acc_seg: 96.0417, loss: 0.6776
2023-05-03 22:07:09,928 - mmseg - INFO - Iter [1600/10000]	lr: 8.549e-03, eta: 1:40:16, time: 0.672, data_time: 0.242, memory: 18289, decode.loss_ce: 0.0964, decode.acc_seg: 95.3950, aux_0.loss_ce: 0.1000, aux_0.acc_seg: 95.2460, aux_1.loss_ce: 0.1158, aux_1.acc_seg: 94.4812, aux_2.loss_ce: 0.1255, aux_2.loss_dice: 0.2661, aux_2.acc_seg: 96.0509, loss: 0.7037
2023-05-03 22:07:42,829 - mmseg - INFO - Iter [1650/10000]	lr: 8.503e-03, eta: 1:39:25, time: 0.658, data_time: 0.235, memory: 18289, decode.loss_ce: 0.1219, decode.acc_seg: 94.2715, aux_0.loss_ce: 0.1257, aux_0.acc_seg: 94.0803, aux_1.loss_ce: 0.1401, aux_1.acc_seg: 93.3621, aux_2.loss_ce: 0.1248, aux_2.loss_dice: 0.2678, aux_2.acc_seg: 96.1178, loss: 0.7803
2023-05-03 22:08:19,305 - mmseg - INFO - Iter [1700/10000]	lr: 8.457e-03, eta: 1:38:54, time: 0.731, data_time: 0.300, memory: 18289, decode.loss_ce: 0.1209, decode.acc_seg: 94.3269, aux_0.loss_ce: 0.1257, aux_0.acc_seg: 94.1550, aux_1.loss_ce: 0.1407, aux_1.acc_seg: 93.3852, aux_2.loss_ce: 0.1250, aux_2.loss_dice: 0.2663, aux_2.acc_seg: 96.1118, loss: 0.7785
2023-05-03 22:08:51,636 - mmseg - INFO - Iter [1750/10000]	lr: 8.411e-03, eta: 1:38:01, time: 0.645, data_time: 0.218, memory: 18289, decode.loss_ce: 0.1043, decode.acc_seg: 94.9721, aux_0.loss_ce: 0.1078, aux_0.acc_seg: 94.8132, aux_1.loss_ce: 0.1243, aux_1.acc_seg: 94.0076, aux_2.loss_ce: 0.1232, aux_2.loss_dice: 0.2639, aux_2.acc_seg: 96.0971, loss: 0.7235
2023-05-03 22:09:24,503 - mmseg - INFO - Iter [1800/10000]	lr: 8.365e-03, eta: 1:37:13, time: 0.657, data_time: 0.231, memory: 18289, decode.loss_ce: 0.0901, decode.acc_seg: 95.5284, aux_0.loss_ce: 0.0937, aux_0.acc_seg: 95.3742, aux_1.loss_ce: 0.1108, aux_1.acc_seg: 94.5350, aux_2.loss_ce: 0.1220, aux_2.loss_dice: 0.2619, aux_2.acc_seg: 96.1113, loss: 0.6784
2023-05-03 22:10:00,407 - mmseg - INFO - Iter [1850/10000]	lr: 8.320e-03, eta: 1:36:39, time: 0.718, data_time: 0.284, memory: 18289, decode.loss_ce: 0.0959, decode.acc_seg: 95.2724, aux_0.loss_ce: 0.1001, aux_0.acc_seg: 95.0769, aux_1.loss_ce: 0.1166, aux_1.acc_seg: 94.2550, aux_2.loss_ce: 0.1237, aux_2.loss_dice: 0.2629, aux_2.acc_seg: 96.0557, loss: 0.6992
2023-05-03 22:10:34,899 - mmseg - INFO - Iter [1900/10000]	lr: 8.274e-03, eta: 1:35:59, time: 0.690, data_time: 0.255, memory: 18289, decode.loss_ce: 0.1016, decode.acc_seg: 95.1713, aux_0.loss_ce: 0.1047, aux_0.acc_seg: 95.0547, aux_1.loss_ce: 0.1186, aux_1.acc_seg: 94.2977, aux_2.loss_ce: 0.1229, aux_2.loss_dice: 0.2631, aux_2.acc_seg: 96.1184, loss: 0.7110
2023-05-03 22:11:06,815 - mmseg - INFO - Iter [1950/10000]	lr: 8.228e-03, eta: 1:35:08, time: 0.638, data_time: 0.213, memory: 18289, decode.loss_ce: 0.1065, decode.acc_seg: 94.9707, aux_0.loss_ce: 0.1096, aux_0.acc_seg: 94.8229, aux_1.loss_ce: 0.1249, aux_1.acc_seg: 94.0769, aux_2.loss_ce: 0.1241, aux_2.loss_dice: 0.2634, aux_2.acc_seg: 96.0674, loss: 0.7284
2023-05-03 22:11:40,049 - mmseg - INFO - Saving checkpoint at 2000 iterations
2023-05-03 22:11:40,438 - mmseg - INFO - Exp name: stdc1_1x16_720x960_10k_camvid.py
2023-05-03 22:11:40,438 - mmseg - INFO - Iter [2000/10000]	lr: 8.182e-03, eta: 1:34:26, time: 0.675, data_time: 0.231, memory: 18289, decode.loss_ce: 0.0898, decode.acc_seg: 95.5995, aux_0.loss_ce: 0.0940, aux_0.acc_seg: 95.4278, aux_1.loss_ce: 0.1104, aux_1.acc_seg: 94.6421, aux_2.loss_ce: 0.1245, aux_2.loss_dice: 0.2632, aux_2.acc_seg: 95.9959, loss: 0.6819
2023-05-03 22:11:50,155 - mmseg - INFO - per class results:
2023-05-03 22:11:50,156 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 83.15 | 90.66 |
|   Building  | 92.82 | 94.61 |
|     Car     | 92.87 | 96.78 |
| Column_Pole |  10.0 | 10.53 |
|    Fence    | 78.86 | 95.49 |
|  Pedestrian | 59.14 | 80.08 |
|     Road    | 96.84 | 97.25 |
|   Sidewalk  | 89.66 | 98.31 |
|  SignSymbol |  0.13 |  0.13 |
|     Sky     | 94.29 | 97.83 |
|     Tree    | 91.94 | 97.47 |
+-------------+-------+-------+
2023-05-03 22:11:50,157 - mmseg - INFO - Summary:
2023-05-03 22:11:50,157 - mmseg - INFO - 
+-------+-------+------+
|  aAcc |  mIoU | mAcc |
+-------+-------+------+
| 95.82 | 71.79 | 78.1 |
+-------+-------+------+
2023-05-03 22:11:50,157 - mmseg - INFO - Exp name: stdc1_1x16_720x960_10k_camvid.py
2023-05-03 22:11:50,158 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9582, mIoU: 0.7179, mAcc: 0.7810, IoU.Bicyclist: 0.8315, IoU.Building: 0.9282, IoU.Car: 0.9287, IoU.Column_Pole: 0.1000, IoU.Fence: 0.7886, IoU.Pedestrian: 0.5914, IoU.Road: 0.9684, IoU.Sidewalk: 0.8966, IoU.SignSymbol: 0.0013, IoU.Sky: 0.9429, IoU.Tree: 0.9194, Acc.Bicyclist: 0.9066, Acc.Building: 0.9461, Acc.Car: 0.9678, Acc.Column_Pole: 0.1053, Acc.Fence: 0.9549, Acc.Pedestrian: 0.8008, Acc.Road: 0.9725, Acc.Sidewalk: 0.9831, Acc.SignSymbol: 0.0013, Acc.Sky: 0.9783, Acc.Tree: 0.9747
2023-05-03 22:12:27,603 - mmseg - INFO - Iter [2050/10000]	lr: 8.136e-03, eta: 1:34:36, time: 0.941, data_time: 0.500, memory: 18289, decode.loss_ce: 0.0923, decode.acc_seg: 95.4796, aux_0.loss_ce: 0.0959, aux_0.acc_seg: 95.3533, aux_1.loss_ce: 0.1119, aux_1.acc_seg: 94.5516, aux_2.loss_ce: 0.1234, aux_2.loss_dice: 0.2626, aux_2.acc_seg: 96.0660, loss: 0.6861
2023-05-03 22:13:00,566 - mmseg - INFO - Iter [2100/10000]	lr: 8.090e-03, eta: 1:33:50, time: 0.659, data_time: 0.230, memory: 18289, decode.loss_ce: 0.0930, decode.acc_seg: 95.4228, aux_0.loss_ce: 0.0957, aux_0.acc_seg: 95.3221, aux_1.loss_ce: 0.1122, aux_1.acc_seg: 94.5019, aux_2.loss_ce: 0.1232, aux_2.loss_dice: 0.2615, aux_2.acc_seg: 96.0754, loss: 0.6856
2023-05-03 22:13:34,340 - mmseg - INFO - Iter [2150/10000]	lr: 8.043e-03, eta: 1:33:07, time: 0.675, data_time: 0.246, memory: 18289, decode.loss_ce: 0.0961, decode.acc_seg: 95.3375, aux_0.loss_ce: 0.0993, aux_0.acc_seg: 95.2117, aux_1.loss_ce: 0.1144, aux_1.acc_seg: 94.4555, aux_2.loss_ce: 0.1254, aux_2.loss_dice: 0.2638, aux_2.acc_seg: 96.0033, loss: 0.6989
2023-05-03 22:14:06,610 - mmseg - INFO - Iter [2200/10000]	lr: 7.997e-03, eta: 1:32:20, time: 0.645, data_time: 0.223, memory: 18289, decode.loss_ce: 0.0926, decode.acc_seg: 95.4121, aux_0.loss_ce: 0.0956, aux_0.acc_seg: 95.3186, aux_1.loss_ce: 0.1106, aux_1.acc_seg: 94.5213, aux_2.loss_ce: 0.1218, aux_2.loss_dice: 0.2606, aux_2.acc_seg: 96.0831, loss: 0.6811
2023-05-03 22:14:44,397 - mmseg - INFO - Iter [2250/10000]	lr: 7.951e-03, eta: 1:31:52, time: 0.756, data_time: 0.326, memory: 18289, decode.loss_ce: 0.0845, decode.acc_seg: 95.7433, aux_0.loss_ce: 0.0878, aux_0.acc_seg: 95.6103, aux_1.loss_ce: 0.1022, aux_1.acc_seg: 94.8765, aux_2.loss_ce: 0.1204, aux_2.loss_dice: 0.2582, aux_2.acc_seg: 96.1429, loss: 0.6530
2023-05-03 22:15:16,133 - mmseg - INFO - Iter [2300/10000]	lr: 7.905e-03, eta: 1:31:04, time: 0.635, data_time: 0.215, memory: 18289, decode.loss_ce: 0.0837, decode.acc_seg: 95.7536, aux_0.loss_ce: 0.0876, aux_0.acc_seg: 95.5941, aux_1.loss_ce: 0.1026, aux_1.acc_seg: 94.8244, aux_2.loss_ce: 0.1223, aux_2.loss_dice: 0.2601, aux_2.acc_seg: 96.0325, loss: 0.6562
2023-05-03 22:15:48,935 - mmseg - INFO - Iter [2350/10000]	lr: 7.859e-03, eta: 1:30:19, time: 0.656, data_time: 0.227, memory: 18289, decode.loss_ce: 0.0857, decode.acc_seg: 95.7932, aux_0.loss_ce: 0.0892, aux_0.acc_seg: 95.6582, aux_1.loss_ce: 0.1045, aux_1.acc_seg: 94.8795, aux_2.loss_ce: 0.1257, aux_2.loss_dice: 0.2623, aux_2.acc_seg: 95.9366, loss: 0.6674
2023-05-03 22:16:26,305 - mmseg - INFO - Iter [2400/10000]	lr: 7.813e-03, eta: 1:29:50, time: 0.747, data_time: 0.314, memory: 18289, decode.loss_ce: 0.0821, decode.acc_seg: 95.8842, aux_0.loss_ce: 0.0850, aux_0.acc_seg: 95.7750, aux_1.loss_ce: 0.1012, aux_1.acc_seg: 94.9762, aux_2.loss_ce: 0.1223, aux_2.loss_dice: 0.2598, aux_2.acc_seg: 96.0563, loss: 0.6504
2023-05-03 22:16:59,383 - mmseg - INFO - Iter [2450/10000]	lr: 7.766e-03, eta: 1:29:07, time: 0.661, data_time: 0.235, memory: 18289, decode.loss_ce: 0.0856, decode.acc_seg: 95.8129, aux_0.loss_ce: 0.0896, aux_0.acc_seg: 95.6649, aux_1.loss_ce: 0.1042, aux_1.acc_seg: 94.9359, aux_2.loss_ce: 0.1229, aux_2.loss_dice: 0.2616, aux_2.acc_seg: 96.0478, loss: 0.6639
2023-05-03 22:17:34,433 - mmseg - INFO - Iter [2500/10000]	lr: 7.720e-03, eta: 1:28:31, time: 0.701, data_time: 0.270, memory: 18289, decode.loss_ce: 0.0824, decode.acc_seg: 95.8775, aux_0.loss_ce: 0.0853, aux_0.acc_seg: 95.7709, aux_1.loss_ce: 0.0998, aux_1.acc_seg: 95.0282, aux_2.loss_ce: 0.1222, aux_2.loss_dice: 0.2594, aux_2.acc_seg: 96.0486, loss: 0.6491
2023-05-03 22:18:07,892 - mmseg - INFO - Iter [2550/10000]	lr: 7.674e-03, eta: 1:27:50, time: 0.669, data_time: 0.237, memory: 18289, decode.loss_ce: 0.0838, decode.acc_seg: 95.8531, aux_0.loss_ce: 0.0868, aux_0.acc_seg: 95.7330, aux_1.loss_ce: 0.1014, aux_1.acc_seg: 94.9567, aux_2.loss_ce: 0.1238, aux_2.loss_dice: 0.2604, aux_2.acc_seg: 95.9938, loss: 0.6563
2023-05-03 22:18:46,869 - mmseg - INFO - Iter [2600/10000]	lr: 7.627e-03, eta: 1:27:25, time: 0.779, data_time: 0.347, memory: 18289, decode.loss_ce: 0.0839, decode.acc_seg: 95.8593, aux_0.loss_ce: 0.0876, aux_0.acc_seg: 95.7331, aux_1.loss_ce: 0.1023, aux_1.acc_seg: 94.9747, aux_2.loss_ce: 0.1238, aux_2.loss_dice: 0.2604, aux_2.acc_seg: 95.9707, loss: 0.6580
2023-05-03 22:19:20,220 - mmseg - INFO - Iter [2650/10000]	lr: 7.581e-03, eta: 1:26:43, time: 0.667, data_time: 0.242, memory: 18289, decode.loss_ce: 0.0812, decode.acc_seg: 95.9561, aux_0.loss_ce: 0.0838, aux_0.acc_seg: 95.8586, aux_1.loss_ce: 0.0982, aux_1.acc_seg: 95.1311, aux_2.loss_ce: 0.1206, aux_2.loss_dice: 0.2592, aux_2.acc_seg: 96.1117, loss: 0.6429
2023-05-03 22:19:53,340 - mmseg - INFO - Iter [2700/10000]	lr: 7.535e-03, eta: 1:26:02, time: 0.663, data_time: 0.247, memory: 18289, decode.loss_ce: 0.0864, decode.acc_seg: 95.8452, aux_0.loss_ce: 0.0892, aux_0.acc_seg: 95.7551, aux_1.loss_ce: 0.1040, aux_1.acc_seg: 94.9912, aux_2.loss_ce: 0.1249, aux_2.loss_dice: 0.2626, aux_2.acc_seg: 96.0201, loss: 0.6670
2023-05-03 22:20:25,688 - mmseg - INFO - Iter [2750/10000]	lr: 7.488e-03, eta: 1:25:19, time: 0.647, data_time: 0.226, memory: 18289, decode.loss_ce: 0.0835, decode.acc_seg: 95.8471, aux_0.loss_ce: 0.0867, aux_0.acc_seg: 95.7363, aux_1.loss_ce: 0.1018, aux_1.acc_seg: 94.9658, aux_2.loss_ce: 0.1250, aux_2.loss_dice: 0.2606, aux_2.acc_seg: 95.9100, loss: 0.6575
2023-05-03 22:21:02,051 - mmseg - INFO - Iter [2800/10000]	lr: 7.442e-03, eta: 1:24:46, time: 0.727, data_time: 0.312, memory: 18289, decode.loss_ce: 0.0803, decode.acc_seg: 95.9216, aux_0.loss_ce: 0.0832, aux_0.acc_seg: 95.8222, aux_1.loss_ce: 0.0974, aux_1.acc_seg: 95.0806, aux_2.loss_ce: 0.1239, aux_2.loss_dice: 0.2603, aux_2.acc_seg: 95.9820, loss: 0.6451
2023-05-03 22:21:34,107 - mmseg - INFO - Iter [2850/10000]	lr: 7.395e-03, eta: 1:24:02, time: 0.641, data_time: 0.221, memory: 18289, decode.loss_ce: 0.0778, decode.acc_seg: 96.0581, aux_0.loss_ce: 0.0809, aux_0.acc_seg: 95.9526, aux_1.loss_ce: 0.0954, aux_1.acc_seg: 95.1896, aux_2.loss_ce: 0.1219, aux_2.loss_dice: 0.2594, aux_2.acc_seg: 96.0466, loss: 0.6353
2023-05-03 22:22:05,314 - mmseg - INFO - Iter [2900/10000]	lr: 7.349e-03, eta: 1:23:17, time: 0.624, data_time: 0.208, memory: 18289, decode.loss_ce: 0.0761, decode.acc_seg: 96.1596, aux_0.loss_ce: 0.0789, aux_0.acc_seg: 96.0567, aux_1.loss_ce: 0.0938, aux_1.acc_seg: 95.2758, aux_2.loss_ce: 0.1212, aux_2.loss_dice: 0.2565, aux_2.acc_seg: 96.0271, loss: 0.6264
2023-05-03 22:22:41,728 - mmseg - INFO - Iter [2950/10000]	lr: 7.302e-03, eta: 1:22:45, time: 0.728, data_time: 0.304, memory: 18289, decode.loss_ce: 0.0738, decode.acc_seg: 96.2048, aux_0.loss_ce: 0.0767, aux_0.acc_seg: 96.1013, aux_1.loss_ce: 0.0914, aux_1.acc_seg: 95.3255, aux_2.loss_ce: 0.1194, aux_2.loss_dice: 0.2570, aux_2.acc_seg: 96.1203, loss: 0.6184
2023-05-03 22:23:14,192 - mmseg - INFO - Saving checkpoint at 3000 iterations
2023-05-03 22:23:14,570 - mmseg - INFO - Exp name: stdc1_1x16_720x960_10k_camvid.py
2023-05-03 22:23:14,570 - mmseg - INFO - Iter [3000/10000]	lr: 7.255e-03, eta: 1:22:05, time: 0.660, data_time: 0.220, memory: 18289, decode.loss_ce: 0.0814, decode.acc_seg: 95.8151, aux_0.loss_ce: 0.0838, aux_0.acc_seg: 95.7508, aux_1.loss_ce: 0.0965, aux_1.acc_seg: 95.0792, aux_2.loss_ce: 0.1207, aux_2.loss_dice: 0.2568, aux_2.acc_seg: 96.0716, loss: 0.6392
2023-05-03 22:23:28,418 - mmseg - INFO - per class results:
2023-05-03 22:23:28,508 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 85.02 | 90.53 |
|   Building  | 93.26 | 95.32 |
|     Car     | 93.24 | 95.25 |
| Column_Pole |  13.6 | 14.85 |
|    Fence    | 78.69 | 95.64 |
|  Pedestrian | 63.74 | 80.43 |
|     Road    |  97.5 | 98.38 |
|   Sidewalk  |  91.6 | 97.58 |
|  SignSymbol |  0.0  |  0.0  |
|     Sky     | 94.34 | 98.13 |
|     Tree    | 92.59 | 96.98 |
+-------------+-------+-------+
2023-05-03 22:23:28,512 - mmseg - INFO - Summary:
2023-05-03 22:23:28,512 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 96.21 | 73.05 | 78.46 |
+-------+-------+-------+
2023-05-03 22:23:28,513 - mmseg - INFO - Exp name: stdc1_1x16_720x960_10k_camvid.py
2023-05-03 22:23:28,513 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9621, mIoU: 0.7305, mAcc: 0.7846, IoU.Bicyclist: 0.8502, IoU.Building: 0.9326, IoU.Car: 0.9324, IoU.Column_Pole: 0.1360, IoU.Fence: 0.7869, IoU.Pedestrian: 0.6374, IoU.Road: 0.9750, IoU.Sidewalk: 0.9160, IoU.SignSymbol: 0.0000, IoU.Sky: 0.9434, IoU.Tree: 0.9259, Acc.Bicyclist: 0.9053, Acc.Building: 0.9532, Acc.Car: 0.9525, Acc.Column_Pole: 0.1485, Acc.Fence: 0.9564, Acc.Pedestrian: 0.8043, Acc.Road: 0.9838, Acc.Sidewalk: 0.9758, Acc.SignSymbol: 0.0000, Acc.Sky: 0.9813, Acc.Tree: 0.9698
2023-05-03 22:24:01,320 - mmseg - INFO - Iter [3050/10000]	lr: 7.209e-03, eta: 1:21:55, time: 0.932, data_time: 0.512, memory: 18289, decode.loss_ce: 0.0795, decode.acc_seg: 95.9249, aux_0.loss_ce: 0.0821, aux_0.acc_seg: 95.8235, aux_1.loss_ce: 0.0967, aux_1.acc_seg: 95.0584, aux_2.loss_ce: 0.1223, aux_2.loss_dice: 0.2577, aux_2.acc_seg: 96.0262, loss: 0.6383
2023-05-03 22:24:33,913 - mmseg - INFO - Iter [3100/10000]	lr: 7.162e-03, eta: 1:21:14, time: 0.652, data_time: 0.227, memory: 18289, decode.loss_ce: 0.0743, decode.acc_seg: 96.2032, aux_0.loss_ce: 0.0770, aux_0.acc_seg: 96.1169, aux_1.loss_ce: 0.0906, aux_1.acc_seg: 95.3902, aux_2.loss_ce: 0.1202, aux_2.loss_dice: 0.2559, aux_2.acc_seg: 96.0797, loss: 0.6180
2023-05-03 22:25:11,237 - mmseg - INFO - Iter [3150/10000]	lr: 7.115e-03, eta: 1:20:43, time: 0.746, data_time: 0.323, memory: 18289, decode.loss_ce: 0.0771, decode.acc_seg: 96.1202, aux_0.loss_ce: 0.0795, aux_0.acc_seg: 96.0378, aux_1.loss_ce: 0.0939, aux_1.acc_seg: 95.3152, aux_2.loss_ce: 0.1214, aux_2.loss_dice: 0.2583, aux_2.acc_seg: 96.0345, loss: 0.6302
2023-05-03 22:25:44,217 - mmseg - INFO - Iter [3200/10000]	lr: 7.069e-03, eta: 1:20:02, time: 0.660, data_time: 0.230, memory: 18289, decode.loss_ce: 0.0787, decode.acc_seg: 95.9949, aux_0.loss_ce: 0.0812, aux_0.acc_seg: 95.9130, aux_1.loss_ce: 0.0949, aux_1.acc_seg: 95.1952, aux_2.loss_ce: 0.1221, aux_2.loss_dice: 0.2568, aux_2.acc_seg: 96.0143, loss: 0.6337
2023-05-03 22:26:18,994 - mmseg - INFO - Iter [3250/10000]	lr: 7.022e-03, eta: 1:19:26, time: 0.694, data_time: 0.252, memory: 18289, decode.loss_ce: 0.0753, decode.acc_seg: 96.1868, aux_0.loss_ce: 0.0781, aux_0.acc_seg: 96.0955, aux_1.loss_ce: 0.0924, aux_1.acc_seg: 95.3564, aux_2.loss_ce: 0.1221, aux_2.loss_dice: 0.2586, aux_2.acc_seg: 96.0374, loss: 0.6265
2023-05-03 22:26:52,729 - mmseg - INFO - Iter [3300/10000]	lr: 6.975e-03, eta: 1:18:48, time: 0.676, data_time: 0.245, memory: 18289, decode.loss_ce: 0.0743, decode.acc_seg: 96.2212, aux_0.loss_ce: 0.0766, aux_0.acc_seg: 96.1467, aux_1.loss_ce: 0.0904, aux_1.acc_seg: 95.4220, aux_2.loss_ce: 0.1199, aux_2.loss_dice: 0.2552, aux_2.acc_seg: 96.0468, loss: 0.6165
2023-05-03 22:27:31,800 - mmseg - INFO - Iter [3350/10000]	lr: 6.928e-03, eta: 1:18:20, time: 0.781, data_time: 0.358, memory: 18289, decode.loss_ce: 0.0761, decode.acc_seg: 96.1386, aux_0.loss_ce: 0.0787, aux_0.acc_seg: 96.0603, aux_1.loss_ce: 0.0921, aux_1.acc_seg: 95.3507, aux_2.loss_ce: 0.1195, aux_2.loss_dice: 0.2559, aux_2.acc_seg: 96.1051, loss: 0.6223
2023-05-03 22:28:03,413 - mmseg - INFO - Iter [3400/10000]	lr: 6.881e-03, eta: 1:17:37, time: 0.632, data_time: 0.215, memory: 18289, decode.loss_ce: 0.0777, decode.acc_seg: 95.9762, aux_0.loss_ce: 0.0798, aux_0.acc_seg: 95.9011, aux_1.loss_ce: 0.0927, aux_1.acc_seg: 95.1925, aux_2.loss_ce: 0.1212, aux_2.loss_dice: 0.2566, aux_2.acc_seg: 96.0458, loss: 0.6280
2023-05-03 22:28:35,638 - mmseg - INFO - Iter [3450/10000]	lr: 6.834e-03, eta: 1:16:56, time: 0.644, data_time: 0.232, memory: 18289, decode.loss_ce: 0.0723, decode.acc_seg: 96.2209, aux_0.loss_ce: 0.0748, aux_0.acc_seg: 96.1393, aux_1.loss_ce: 0.0885, aux_1.acc_seg: 95.4060, aux_2.loss_ce: 0.1200, aux_2.loss_dice: 0.2540, aux_2.acc_seg: 96.0405, loss: 0.6095
2023-05-03 22:29:12,257 - mmseg - INFO - Iter [3500/10000]	lr: 6.787e-03, eta: 1:16:23, time: 0.732, data_time: 0.308, memory: 18289, decode.loss_ce: 0.0737, decode.acc_seg: 96.2536, aux_0.loss_ce: 0.0762, aux_0.acc_seg: 96.1802, aux_1.loss_ce: 0.0899, aux_1.acc_seg: 95.4530, aux_2.loss_ce: 0.1212, aux_2.loss_dice: 0.2564, aux_2.acc_seg: 96.0378, loss: 0.6174
2023-05-03 22:29:44,654 - mmseg - INFO - Iter [3550/10000]	lr: 6.740e-03, eta: 1:15:43, time: 0.648, data_time: 0.225, memory: 18289, decode.loss_ce: 0.0779, decode.acc_seg: 96.0720, aux_0.loss_ce: 0.0803, aux_0.acc_seg: 95.9929, aux_1.loss_ce: 0.0929, aux_1.acc_seg: 95.3064, aux_2.loss_ce: 0.1206, aux_2.loss_dice: 0.2562, aux_2.acc_seg: 96.0613, loss: 0.6278
2023-05-03 22:30:17,490 - mmseg - INFO - Iter [3600/10000]	lr: 6.693e-03, eta: 1:15:03, time: 0.657, data_time: 0.242, memory: 18289, decode.loss_ce: 0.0763, decode.acc_seg: 96.1246, aux_0.loss_ce: 0.0788, aux_0.acc_seg: 96.0514, aux_1.loss_ce: 0.0927, aux_1.acc_seg: 95.3133, aux_2.loss_ce: 0.1220, aux_2.loss_dice: 0.2569, aux_2.acc_seg: 96.0023, loss: 0.6266
2023-05-03 22:30:49,865 - mmseg - INFO - Iter [3650/10000]	lr: 6.646e-03, eta: 1:14:23, time: 0.647, data_time: 0.223, memory: 18289, decode.loss_ce: 0.0740, decode.acc_seg: 96.1844, aux_0.loss_ce: 0.0765, aux_0.acc_seg: 96.1068, aux_1.loss_ce: 0.0893, aux_1.acc_seg: 95.4153, aux_2.loss_ce: 0.1197, aux_2.loss_dice: 0.2556, aux_2.acc_seg: 96.0997, loss: 0.6150
2023-05-03 22:31:25,986 - mmseg - INFO - Iter [3700/10000]	lr: 6.599e-03, eta: 1:13:50, time: 0.722, data_time: 0.299, memory: 18289, decode.loss_ce: 0.0735, decode.acc_seg: 96.2061, aux_0.loss_ce: 0.0759, aux_0.acc_seg: 96.1324, aux_1.loss_ce: 0.0887, aux_1.acc_seg: 95.4477, aux_2.loss_ce: 0.1195, aux_2.loss_dice: 0.2547, aux_2.acc_seg: 96.0843, loss: 0.6123
2023-05-03 22:31:58,104 - mmseg - INFO - Iter [3750/10000]	lr: 6.552e-03, eta: 1:13:10, time: 0.642, data_time: 0.224, memory: 18289, decode.loss_ce: 0.0814, decode.acc_seg: 95.9005, aux_0.loss_ce: 0.0828, aux_0.acc_seg: 95.8610, aux_1.loss_ce: 0.0952, aux_1.acc_seg: 95.1743, aux_2.loss_ce: 0.1210, aux_2.loss_dice: 0.2562, aux_2.acc_seg: 96.0563, loss: 0.6367
2023-05-03 22:32:30,395 - mmseg - INFO - Iter [3800/10000]	lr: 6.505e-03, eta: 1:12:30, time: 0.646, data_time: 0.226, memory: 18289, decode.loss_ce: 0.0812, decode.acc_seg: 95.9192, aux_0.loss_ce: 0.0839, aux_0.acc_seg: 95.8338, aux_1.loss_ce: 0.0964, aux_1.acc_seg: 95.1562, aux_2.loss_ce: 0.1208, aux_2.loss_dice: 0.2571, aux_2.acc_seg: 96.0875, loss: 0.6393
2023-05-03 22:33:01,783 - mmseg - INFO - Iter [3850/10000]	lr: 6.458e-03, eta: 1:11:49, time: 0.628, data_time: 0.218, memory: 18289, decode.loss_ce: 0.0734, decode.acc_seg: 96.1619, aux_0.loss_ce: 0.0758, aux_0.acc_seg: 96.0693, aux_1.loss_ce: 0.0892, aux_1.acc_seg: 95.3402, aux_2.loss_ce: 0.1200, aux_2.loss_dice: 0.2541, aux_2.acc_seg: 96.0374, loss: 0.6125
2023-05-03 22:33:39,148 - mmseg - INFO - Iter [3900/10000]	lr: 6.410e-03, eta: 1:11:18, time: 0.747, data_time: 0.323, memory: 18289, decode.loss_ce: 0.0751, decode.acc_seg: 96.1537, aux_0.loss_ce: 0.0772, aux_0.acc_seg: 96.1016, aux_1.loss_ce: 0.0902, aux_1.acc_seg: 95.3839, aux_2.loss_ce: 0.1206, aux_2.loss_dice: 0.2556, aux_2.acc_seg: 96.0564, loss: 0.6187
2023-05-03 22:34:11,898 - mmseg - INFO - Iter [3950/10000]	lr: 6.363e-03, eta: 1:10:39, time: 0.655, data_time: 0.231, memory: 18289, decode.loss_ce: 0.0730, decode.acc_seg: 96.2270, aux_0.loss_ce: 0.0751, aux_0.acc_seg: 96.1614, aux_1.loss_ce: 0.0886, aux_1.acc_seg: 95.4298, aux_2.loss_ce: 0.1200, aux_2.loss_dice: 0.2537, aux_2.acc_seg: 96.0406, loss: 0.6104
2023-05-03 22:34:43,734 - mmseg - INFO - Saving checkpoint at 4000 iterations
2023-05-03 22:34:44,040 - mmseg - INFO - Exp name: stdc1_1x16_720x960_10k_camvid.py
2023-05-03 22:34:44,041 - mmseg - INFO - Iter [4000/10000]	lr: 6.316e-03, eta: 1:10:00, time: 0.646, data_time: 0.223, memory: 18289, decode.loss_ce: 0.0728, decode.acc_seg: 96.2739, aux_0.loss_ce: 0.0752, aux_0.acc_seg: 96.2011, aux_1.loss_ce: 0.0883, aux_1.acc_seg: 95.4902, aux_2.loss_ce: 0.1203, aux_2.loss_dice: 0.2549, aux_2.acc_seg: 96.0197, loss: 0.6115
2023-05-03 22:34:54,372 - mmseg - INFO - per class results:
2023-05-03 22:34:54,373 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 85.08 | 92.77 |
|   Building  | 92.64 | 94.54 |
|     Car     | 92.64 | 94.04 |
| Column_Pole |  14.7 | 15.85 |
|    Fence    | 77.99 | 98.19 |
|  Pedestrian | 62.31 | 87.28 |
|     Road    | 97.67 | 98.52 |
|   Sidewalk  | 92.48 | 97.12 |
|  SignSymbol |  0.0  |  0.0  |
|     Sky     | 93.88 | 95.61 |
|     Tree    | 91.85 | 97.68 |
+-------------+-------+-------+
2023-05-03 22:34:54,373 - mmseg - INFO - Summary:
2023-05-03 22:34:54,373 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 96.06 | 72.84 | 79.24 |
+-------+-------+-------+
2023-05-03 22:34:54,373 - mmseg - INFO - Exp name: stdc1_1x16_720x960_10k_camvid.py
2023-05-03 22:34:54,373 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9606, mIoU: 0.7284, mAcc: 0.7924, IoU.Bicyclist: 0.8508, IoU.Building: 0.9264, IoU.Car: 0.9264, IoU.Column_Pole: 0.1470, IoU.Fence: 0.7799, IoU.Pedestrian: 0.6231, IoU.Road: 0.9767, IoU.Sidewalk: 0.9248, IoU.SignSymbol: 0.0000, IoU.Sky: 0.9388, IoU.Tree: 0.9185, Acc.Bicyclist: 0.9277, Acc.Building: 0.9454, Acc.Car: 0.9404, Acc.Column_Pole: 0.1585, Acc.Fence: 0.9819, Acc.Pedestrian: 0.8728, Acc.Road: 0.9852, Acc.Sidewalk: 0.9712, Acc.SignSymbol: 0.0000, Acc.Sky: 0.9561, Acc.Tree: 0.9768
2023-05-03 22:35:31,094 - mmseg - INFO - Iter [4050/10000]	lr: 6.268e-03, eta: 1:09:42, time: 0.938, data_time: 0.521, memory: 18289, decode.loss_ce: 0.0721, decode.acc_seg: 96.2781, aux_0.loss_ce: 0.0741, aux_0.acc_seg: 96.2140, aux_1.loss_ce: 0.0876, aux_1.acc_seg: 95.5010, aux_2.loss_ce: 0.1191, aux_2.loss_dice: 0.2537, aux_2.acc_seg: 96.0788, loss: 0.6068
2023-05-03 22:36:03,562 - mmseg - INFO - Iter [4100/10000]	lr: 6.221e-03, eta: 1:09:03, time: 0.649, data_time: 0.227, memory: 18289, decode.loss_ce: 0.0747, decode.acc_seg: 96.1796, aux_0.loss_ce: 0.0765, aux_0.acc_seg: 96.1377, aux_1.loss_ce: 0.0895, aux_1.acc_seg: 95.4588, aux_2.loss_ce: 0.1216, aux_2.loss_dice: 0.2563, aux_2.acc_seg: 95.9999, loss: 0.6186
2023-05-03 22:36:36,151 - mmseg - INFO - Iter [4150/10000]	lr: 6.174e-03, eta: 1:08:25, time: 0.652, data_time: 0.229, memory: 18289, decode.loss_ce: 0.0721, decode.acc_seg: 96.2363, aux_0.loss_ce: 0.0740, aux_0.acc_seg: 96.1819, aux_1.loss_ce: 0.0871, aux_1.acc_seg: 95.4759, aux_2.loss_ce: 0.1214, aux_2.loss_dice: 0.2553, aux_2.acc_seg: 95.9885, loss: 0.6100
2023-05-03 22:37:08,836 - mmseg - INFO - Iter [4200/10000]	lr: 6.126e-03, eta: 1:07:46, time: 0.654, data_time: 0.238, memory: 18289, decode.loss_ce: 0.0692, decode.acc_seg: 96.3614, aux_0.loss_ce: 0.0714, aux_0.acc_seg: 96.2974, aux_1.loss_ce: 0.0840, aux_1.acc_seg: 95.5961, aux_2.loss_ce: 0.1187, aux_2.loss_dice: 0.2524, aux_2.acc_seg: 96.0746, loss: 0.5957
2023-05-03 22:37:45,407 - mmseg - INFO - Iter [4250/10000]	lr: 6.079e-03, eta: 1:07:13, time: 0.731, data_time: 0.310, memory: 18289, decode.loss_ce: 0.0719, decode.acc_seg: 96.3303, aux_0.loss_ce: 0.0741, aux_0.acc_seg: 96.2638, aux_1.loss_ce: 0.0867, aux_1.acc_seg: 95.5966, aux_2.loss_ce: 0.1214, aux_2.loss_dice: 0.2548, aux_2.acc_seg: 95.9694, loss: 0.6089
2023-05-03 22:38:18,145 - mmseg - INFO - Iter [4300/10000]	lr: 6.031e-03, eta: 1:06:35, time: 0.655, data_time: 0.239, memory: 18289, decode.loss_ce: 0.0689, decode.acc_seg: 96.4227, aux_0.loss_ce: 0.0707, aux_0.acc_seg: 96.3943, aux_1.loss_ce: 0.0840, aux_1.acc_seg: 95.6747, aux_2.loss_ce: 0.1188, aux_2.loss_dice: 0.2538, aux_2.acc_seg: 96.1159, loss: 0.5963
2023-05-03 22:38:50,330 - mmseg - INFO - Iter [4350/10000]	lr: 5.983e-03, eta: 1:05:56, time: 0.644, data_time: 0.220, memory: 18289, decode.loss_ce: 0.0683, decode.acc_seg: 96.4621, aux_0.loss_ce: 0.0704, aux_0.acc_seg: 96.3983, aux_1.loss_ce: 0.0838, aux_1.acc_seg: 95.6965, aux_2.loss_ce: 0.1189, aux_2.loss_dice: 0.2526, aux_2.acc_seg: 96.0702, loss: 0.5940
2023-05-03 22:39:22,398 - mmseg - INFO - Iter [4400/10000]	lr: 5.936e-03, eta: 1:05:17, time: 0.641, data_time: 0.218, memory: 18289, decode.loss_ce: 0.0699, decode.acc_seg: 96.3968, aux_0.loss_ce: 0.0715, aux_0.acc_seg: 96.3614, aux_1.loss_ce: 0.0844, aux_1.acc_seg: 95.6783, aux_2.loss_ce: 0.1194, aux_2.loss_dice: 0.2545, aux_2.acc_seg: 96.0732, loss: 0.5998
2023-05-03 22:39:59,343 - mmseg - INFO - Iter [4450/10000]	lr: 5.888e-03, eta: 1:04:45, time: 0.739, data_time: 0.317, memory: 18289, decode.loss_ce: 0.0701, decode.acc_seg: 96.3690, aux_0.loss_ce: 0.0719, aux_0.acc_seg: 96.3276, aux_1.loss_ce: 0.0850, aux_1.acc_seg: 95.6078, aux_2.loss_ce: 0.1204, aux_2.loss_dice: 0.2540, aux_2.acc_seg: 96.0032, loss: 0.6014
2023-05-03 22:40:31,347 - mmseg - INFO - Iter [4500/10000]	lr: 5.840e-03, eta: 1:04:06, time: 0.640, data_time: 0.223, memory: 18289, decode.loss_ce: 0.0694, decode.acc_seg: 96.4312, aux_0.loss_ce: 0.0711, aux_0.acc_seg: 96.3829, aux_1.loss_ce: 0.0843, aux_1.acc_seg: 95.6742, aux_2.loss_ce: 0.1196, aux_2.loss_dice: 0.2530, aux_2.acc_seg: 96.0228, loss: 0.5974
2023-05-03 22:41:04,445 - mmseg - INFO - Iter [4550/10000]	lr: 5.792e-03, eta: 1:03:29, time: 0.662, data_time: 0.242, memory: 18289, decode.loss_ce: 0.0678, decode.acc_seg: 96.5118, aux_0.loss_ce: 0.0695, aux_0.acc_seg: 96.4640, aux_1.loss_ce: 0.0822, aux_1.acc_seg: 95.7840, aux_2.loss_ce: 0.1188, aux_2.loss_dice: 0.2533, aux_2.acc_seg: 96.0790, loss: 0.5916
2023-05-03 22:41:39,572 - mmseg - INFO - Iter [4600/10000]	lr: 5.745e-03, eta: 1:02:54, time: 0.702, data_time: 0.294, memory: 18289, decode.loss_ce: 0.0674, decode.acc_seg: 96.4911, aux_0.loss_ce: 0.0695, aux_0.acc_seg: 96.4415, aux_1.loss_ce: 0.0820, aux_1.acc_seg: 95.7358, aux_2.loss_ce: 0.1177, aux_2.loss_dice: 0.2527, aux_2.acc_seg: 96.1186, loss: 0.5892
2023-05-03 22:42:10,863 - mmseg - INFO - Iter [4650/10000]	lr: 5.697e-03, eta: 1:02:15, time: 0.626, data_time: 0.210, memory: 18289, decode.loss_ce: 0.0672, decode.acc_seg: 96.5137, aux_0.loss_ce: 0.0689, aux_0.acc_seg: 96.4646, aux_1.loss_ce: 0.0818, aux_1.acc_seg: 95.7833, aux_2.loss_ce: 0.1198, aux_2.loss_dice: 0.2541, aux_2.acc_seg: 96.0583, loss: 0.5917
2023-05-03 22:42:42,142 - mmseg - INFO - Iter [4700/10000]	lr: 5.649e-03, eta: 1:01:36, time: 0.626, data_time: 0.210, memory: 18289, decode.loss_ce: 0.0779, decode.acc_seg: 96.1197, aux_0.loss_ce: 0.0799, aux_0.acc_seg: 96.0848, aux_1.loss_ce: 0.0914, aux_1.acc_seg: 95.4664, aux_2.loss_ce: 0.1217, aux_2.loss_dice: 0.2554, aux_2.acc_seg: 95.9913, loss: 0.6263
2023-05-03 22:43:13,689 - mmseg - INFO - Iter [4750/10000]	lr: 5.601e-03, eta: 1:00:58, time: 0.631, data_time: 0.212, memory: 18289, decode.loss_ce: 0.0740, decode.acc_seg: 96.2006, aux_0.loss_ce: 0.0757, aux_0.acc_seg: 96.1523, aux_1.loss_ce: 0.0881, aux_1.acc_seg: 95.4639, aux_2.loss_ce: 0.1189, aux_2.loss_dice: 0.2531, aux_2.acc_seg: 96.0682, loss: 0.6097
2023-05-03 22:43:48,253 - mmseg - INFO - Iter [4800/10000]	lr: 5.553e-03, eta: 1:00:22, time: 0.691, data_time: 0.278, memory: 18289, decode.loss_ce: 0.0678, decode.acc_seg: 96.4356, aux_0.loss_ce: 0.0697, aux_0.acc_seg: 96.4034, aux_1.loss_ce: 0.0825, aux_1.acc_seg: 95.7135, aux_2.loss_ce: 0.1189, aux_2.loss_dice: 0.2524, aux_2.acc_seg: 96.0597, loss: 0.5913
2023-05-03 22:44:19,562 - mmseg - INFO - Iter [4850/10000]	lr: 5.505e-03, eta: 0:59:44, time: 0.626, data_time: 0.210, memory: 18289, decode.loss_ce: 0.0673, decode.acc_seg: 96.4121, aux_0.loss_ce: 0.0692, aux_0.acc_seg: 96.3654, aux_1.loss_ce: 0.0819, aux_1.acc_seg: 95.6796, aux_2.loss_ce: 0.1175, aux_2.loss_dice: 0.2507, aux_2.acc_seg: 96.0882, loss: 0.5867
2023-05-03 22:44:51,166 - mmseg - INFO - Iter [4900/10000]	lr: 5.457e-03, eta: 0:59:06, time: 0.632, data_time: 0.217, memory: 18289, decode.loss_ce: 0.0670, decode.acc_seg: 96.4823, aux_0.loss_ce: 0.0687, aux_0.acc_seg: 96.4405, aux_1.loss_ce: 0.0815, aux_1.acc_seg: 95.7601, aux_2.loss_ce: 0.1196, aux_2.loss_dice: 0.2530, aux_2.acc_seg: 96.0380, loss: 0.5899
2023-05-03 22:45:22,383 - mmseg - INFO - Iter [4950/10000]	lr: 5.408e-03, eta: 0:58:27, time: 0.624, data_time: 0.210, memory: 18289, decode.loss_ce: 0.0661, decode.acc_seg: 96.5452, aux_0.loss_ce: 0.0679, aux_0.acc_seg: 96.4998, aux_1.loss_ce: 0.0804, aux_1.acc_seg: 95.8391, aux_2.loss_ce: 0.1180, aux_2.loss_dice: 0.2515, aux_2.acc_seg: 96.0699, loss: 0.5839
2023-05-03 22:45:56,473 - mmseg - INFO - Saving checkpoint at 5000 iterations
2023-05-03 22:45:56,861 - mmseg - INFO - Exp name: stdc1_1x16_720x960_10k_camvid.py
2023-05-03 22:45:56,861 - mmseg - INFO - Iter [5000/10000]	lr: 5.360e-03, eta: 0:57:52, time: 0.692, data_time: 0.265, memory: 18289, decode.loss_ce: 0.0659, decode.acc_seg: 96.5187, aux_0.loss_ce: 0.0679, aux_0.acc_seg: 96.4721, aux_1.loss_ce: 0.0806, aux_1.acc_seg: 95.7807, aux_2.loss_ce: 0.1191, aux_2.loss_dice: 0.2517, aux_2.acc_seg: 96.0096, loss: 0.5853
2023-05-03 22:46:07,631 - mmseg - INFO - per class results:
2023-05-03 22:46:07,633 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 85.36 | 95.01 |
|   Building  | 93.18 | 95.09 |
|     Car     | 93.26 | 94.65 |
| Column_Pole | 30.83 | 39.86 |
|    Fence    | 78.68 |  85.5 |
|  Pedestrian | 64.36 | 84.11 |
|     Road    | 97.46 | 98.06 |
|   Sidewalk  | 91.46 | 97.85 |
|  SignSymbol |  0.6  |  0.61 |
|     Sky     | 94.13 | 98.02 |
|     Tree    | 91.66 | 97.67 |
+-------------+-------+-------+
2023-05-03 22:46:07,633 - mmseg - INFO - Summary:
2023-05-03 22:46:07,633 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 96.13 | 74.64 | 80.58 |
+-------+-------+-------+
2023-05-03 22:46:07,633 - mmseg - INFO - Exp name: stdc1_1x16_720x960_10k_camvid.py
2023-05-03 22:46:07,634 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9613, mIoU: 0.7464, mAcc: 0.8058, IoU.Bicyclist: 0.8536, IoU.Building: 0.9318, IoU.Car: 0.9326, IoU.Column_Pole: 0.3083, IoU.Fence: 0.7868, IoU.Pedestrian: 0.6436, IoU.Road: 0.9746, IoU.Sidewalk: 0.9146, IoU.SignSymbol: 0.0060, IoU.Sky: 0.9413, IoU.Tree: 0.9166, Acc.Bicyclist: 0.9501, Acc.Building: 0.9509, Acc.Car: 0.9465, Acc.Column_Pole: 0.3986, Acc.Fence: 0.8550, Acc.Pedestrian: 0.8411, Acc.Road: 0.9806, Acc.Sidewalk: 0.9785, Acc.SignSymbol: 0.0061, Acc.Sky: 0.9802, Acc.Tree: 0.9767
2023-05-03 22:46:38,705 - mmseg - INFO - Iter [5050/10000]	lr: 5.312e-03, eta: 0:57:25, time: 0.834, data_time: 0.426, memory: 18289, decode.loss_ce: 0.0689, decode.acc_seg: 96.4211, aux_0.loss_ce: 0.0707, aux_0.acc_seg: 96.3801, aux_1.loss_ce: 0.0836, aux_1.acc_seg: 95.7000, aux_2.loss_ce: 0.1202, aux_2.loss_dice: 0.2545, aux_2.acc_seg: 96.0221, loss: 0.5979
2023-05-03 22:47:09,593 - mmseg - INFO - Iter [5100/10000]	lr: 5.264e-03, eta: 0:56:46, time: 0.618, data_time: 0.207, memory: 18289, decode.loss_ce: 0.0667, decode.acc_seg: 96.4905, aux_0.loss_ce: 0.0683, aux_0.acc_seg: 96.4651, aux_1.loss_ce: 0.0806, aux_1.acc_seg: 95.8027, aux_2.loss_ce: 0.1173, aux_2.loss_dice: 0.2516, aux_2.acc_seg: 96.0915, loss: 0.5846
2023-05-03 22:47:44,965 - mmseg - INFO - Iter [5150/10000]	lr: 5.215e-03, eta: 0:56:12, time: 0.707, data_time: 0.306, memory: 18289, decode.loss_ce: 0.0652, decode.acc_seg: 96.5657, aux_0.loss_ce: 0.0668, aux_0.acc_seg: 96.5293, aux_1.loss_ce: 0.0788, aux_1.acc_seg: 95.8838, aux_2.loss_ce: 0.1163, aux_2.loss_dice: 0.2504, aux_2.acc_seg: 96.1440, loss: 0.5775
2023-05-03 22:48:15,932 - mmseg - INFO - Iter [5200/10000]	lr: 5.167e-03, eta: 0:55:34, time: 0.619, data_time: 0.206, memory: 18289, decode.loss_ce: 0.0654, decode.acc_seg: 96.5593, aux_0.loss_ce: 0.0671, aux_0.acc_seg: 96.5172, aux_1.loss_ce: 0.0795, aux_1.acc_seg: 95.8393, aux_2.loss_ce: 0.1190, aux_2.loss_dice: 0.2520, aux_2.acc_seg: 95.9993, loss: 0.5830
2023-05-03 22:48:46,768 - mmseg - INFO - Iter [5250/10000]	lr: 5.119e-03, eta: 0:54:55, time: 0.617, data_time: 0.203, memory: 18289, decode.loss_ce: 0.0655, decode.acc_seg: 96.5402, aux_0.loss_ce: 0.0672, aux_0.acc_seg: 96.5026, aux_1.loss_ce: 0.0794, aux_1.acc_seg: 95.8367, aux_2.loss_ce: 0.1183, aux_2.loss_dice: 0.2511, aux_2.acc_seg: 96.0385, loss: 0.5814
2023-05-03 22:49:17,673 - mmseg - INFO - Iter [5300/10000]	lr: 5.070e-03, eta: 0:54:17, time: 0.618, data_time: 0.201, memory: 18289, decode.loss_ce: 0.0765, decode.acc_seg: 95.9944, aux_0.loss_ce: 0.0791, aux_0.acc_seg: 95.9321, aux_1.loss_ce: 0.0889, aux_1.acc_seg: 95.3455, aux_2.loss_ce: 0.1179, aux_2.loss_dice: 0.2510, aux_2.acc_seg: 96.0812, loss: 0.6134
2023-05-03 22:49:53,569 - mmseg - INFO - Iter [5350/10000]	lr: 5.022e-03, eta: 0:53:44, time: 0.718, data_time: 0.305, memory: 18289, decode.loss_ce: 0.0787, decode.acc_seg: 96.0716, aux_0.loss_ce: 0.0807, aux_0.acc_seg: 96.0006, aux_1.loss_ce: 0.0921, aux_1.acc_seg: 95.3731, aux_2.loss_ce: 0.1189, aux_2.loss_dice: 0.2533, aux_2.acc_seg: 96.0728, loss: 0.6237
2023-05-03 22:50:25,041 - mmseg - INFO - Iter [5400/10000]	lr: 4.973e-03, eta: 0:53:06, time: 0.629, data_time: 0.218, memory: 18289, decode.loss_ce: 0.0744, decode.acc_seg: 96.2151, aux_0.loss_ce: 0.0754, aux_0.acc_seg: 96.2107, aux_1.loss_ce: 0.0869, aux_1.acc_seg: 95.5591, aux_2.loss_ce: 0.1191, aux_2.loss_dice: 0.2541, aux_2.acc_seg: 96.0957, loss: 0.6099
2023-05-03 22:50:56,874 - mmseg - INFO - Iter [5450/10000]	lr: 4.924e-03, eta: 0:52:29, time: 0.637, data_time: 0.219, memory: 18289, decode.loss_ce: 0.0702, decode.acc_seg: 96.2969, aux_0.loss_ce: 0.0717, aux_0.acc_seg: 96.2530, aux_1.loss_ce: 0.0839, aux_1.acc_seg: 95.5836, aux_2.loss_ce: 0.1193, aux_2.loss_dice: 0.2521, aux_2.acc_seg: 96.0406, loss: 0.5972
2023-05-03 22:51:28,120 - mmseg - INFO - Iter [5500/10000]	lr: 4.876e-03, eta: 0:51:52, time: 0.625, data_time: 0.210, memory: 18289, decode.loss_ce: 0.0685, decode.acc_seg: 96.4472, aux_0.loss_ce: 0.0697, aux_0.acc_seg: 96.4383, aux_1.loss_ce: 0.0824, aux_1.acc_seg: 95.7617, aux_2.loss_ce: 0.1183, aux_2.loss_dice: 0.2519, aux_2.acc_seg: 96.0761, loss: 0.5908
2023-05-03 22:52:04,498 - mmseg - INFO - Iter [5550/10000]	lr: 4.827e-03, eta: 0:51:19, time: 0.727, data_time: 0.315, memory: 18289, decode.loss_ce: 0.0656, decode.acc_seg: 96.5680, aux_0.loss_ce: 0.0672, aux_0.acc_seg: 96.5388, aux_1.loss_ce: 0.0796, aux_1.acc_seg: 95.8617, aux_2.loss_ce: 0.1178, aux_2.loss_dice: 0.2512, aux_2.acc_seg: 96.0536, loss: 0.5813
2023-05-03 22:52:35,816 - mmseg - INFO - Iter [5600/10000]	lr: 4.778e-03, eta: 0:50:42, time: 0.626, data_time: 0.216, memory: 18289, decode.loss_ce: 0.0631, decode.acc_seg: 96.6166, aux_0.loss_ce: 0.0647, aux_0.acc_seg: 96.5881, aux_1.loss_ce: 0.0769, aux_1.acc_seg: 95.9278, aux_2.loss_ce: 0.1182, aux_2.loss_dice: 0.2503, aux_2.acc_seg: 96.0264, loss: 0.5733
2023-05-03 22:53:07,459 - mmseg - INFO - Iter [5650/10000]	lr: 4.729e-03, eta: 0:50:05, time: 0.633, data_time: 0.216, memory: 18289, decode.loss_ce: 0.0676, decode.acc_seg: 96.4508, aux_0.loss_ce: 0.0689, aux_0.acc_seg: 96.4320, aux_1.loss_ce: 0.0807, aux_1.acc_seg: 95.7872, aux_2.loss_ce: 0.1184, aux_2.loss_dice: 0.2529, aux_2.acc_seg: 96.0901, loss: 0.5884
2023-05-03 22:53:44,122 - mmseg - INFO - Iter [5700/10000]	lr: 4.680e-03, eta: 0:49:32, time: 0.733, data_time: 0.317, memory: 18289, decode.loss_ce: 0.0684, decode.acc_seg: 96.4505, aux_0.loss_ce: 0.0693, aux_0.acc_seg: 96.4355, aux_1.loss_ce: 0.0806, aux_1.acc_seg: 95.8235, aux_2.loss_ce: 0.1196, aux_2.loss_dice: 0.2529, aux_2.acc_seg: 96.0173, loss: 0.5908
2023-05-03 22:54:15,501 - mmseg - INFO - Iter [5750/10000]	lr: 4.631e-03, eta: 0:48:55, time: 0.628, data_time: 0.206, memory: 18289, decode.loss_ce: 0.0694, decode.acc_seg: 96.3367, aux_0.loss_ce: 0.0706, aux_0.acc_seg: 96.3208, aux_1.loss_ce: 0.0815, aux_1.acc_seg: 95.6976, aux_2.loss_ce: 0.1173, aux_2.loss_dice: 0.2518, aux_2.acc_seg: 96.1115, loss: 0.5907
2023-05-03 22:54:47,570 - mmseg - INFO - Iter [5800/10000]	lr: 4.582e-03, eta: 0:48:19, time: 0.641, data_time: 0.230, memory: 18289, decode.loss_ce: 0.0674, decode.acc_seg: 96.4758, aux_0.loss_ce: 0.0687, aux_0.acc_seg: 96.4667, aux_1.loss_ce: 0.0815, aux_1.acc_seg: 95.7923, aux_2.loss_ce: 0.1205, aux_2.loss_dice: 0.2532, aux_2.acc_seg: 95.9661, loss: 0.5912
2023-05-03 22:55:18,684 - mmseg - INFO - Iter [5850/10000]	lr: 4.533e-03, eta: 0:47:42, time: 0.622, data_time: 0.211, memory: 18289, decode.loss_ce: 0.0669, decode.acc_seg: 96.5510, aux_0.loss_ce: 0.0678, aux_0.acc_seg: 96.5513, aux_1.loss_ce: 0.0802, aux_1.acc_seg: 95.8921, aux_2.loss_ce: 0.1203, aux_2.loss_dice: 0.2539, aux_2.acc_seg: 96.0356, loss: 0.5891
2023-05-03 22:55:54,113 - mmseg - INFO - Iter [5900/10000]	lr: 4.484e-03, eta: 0:47:08, time: 0.709, data_time: 0.288, memory: 18289, decode.loss_ce: 0.0629, decode.acc_seg: 96.7132, aux_0.loss_ce: 0.0646, aux_0.acc_seg: 96.6868, aux_1.loss_ce: 0.0770, aux_1.acc_seg: 96.0245, aux_2.loss_ce: 0.1185, aux_2.loss_dice: 0.2519, aux_2.acc_seg: 96.0173, loss: 0.5749
2023-05-03 22:56:26,583 - mmseg - INFO - Iter [5950/10000]	lr: 4.435e-03, eta: 0:46:32, time: 0.649, data_time: 0.229, memory: 18289, decode.loss_ce: 0.0641, decode.acc_seg: 96.6701, aux_0.loss_ce: 0.0656, aux_0.acc_seg: 96.6479, aux_1.loss_ce: 0.0784, aux_1.acc_seg: 95.9694, aux_2.loss_ce: 0.1207, aux_2.loss_dice: 0.2536, aux_2.acc_seg: 95.9728, loss: 0.5824
2023-05-03 22:56:59,608 - mmseg - INFO - Saving checkpoint at 6000 iterations
2023-05-03 22:56:59,979 - mmseg - INFO - Exp name: stdc1_1x16_720x960_10k_camvid.py
2023-05-03 22:56:59,980 - mmseg - INFO - Iter [6000/10000]	lr: 4.385e-03, eta: 0:45:57, time: 0.671, data_time: 0.257, memory: 18289, decode.loss_ce: 0.0654, decode.acc_seg: 96.6381, aux_0.loss_ce: 0.0670, aux_0.acc_seg: 96.5976, aux_1.loss_ce: 0.0789, aux_1.acc_seg: 95.9401, aux_2.loss_ce: 0.1204, aux_2.loss_dice: 0.2532, aux_2.acc_seg: 95.9862, loss: 0.5850
2023-05-03 22:57:13,819 - mmseg - INFO - per class results:
2023-05-03 22:57:13,820 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 86.09 | 94.91 |
|   Building  | 91.83 | 93.64 |
|     Car     | 92.85 | 96.73 |
| Column_Pole | 17.44 | 19.68 |
|    Fence    | 78.82 | 95.64 |
|  Pedestrian | 65.59 | 83.24 |
|     Road    | 97.75 | 98.72 |
|   Sidewalk  | 92.29 | 96.42 |
|  SignSymbol |  0.36 |  0.36 |
|     Sky     | 93.69 |  95.5 |
|     Tree    |  90.8 | 98.24 |
+-------------+-------+-------+
2023-05-03 22:57:13,821 - mmseg - INFO - Summary:
2023-05-03 22:57:13,821 - mmseg - INFO - 
+------+-------+-------+
| aAcc |  mIoU |  mAcc |
+------+-------+-------+
| 95.9 | 73.41 | 79.37 |
+------+-------+-------+
2023-05-03 22:57:13,821 - mmseg - INFO - Exp name: stdc1_1x16_720x960_10k_camvid.py
2023-05-03 22:57:13,821 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9590, mIoU: 0.7341, mAcc: 0.7937, IoU.Bicyclist: 0.8609, IoU.Building: 0.9183, IoU.Car: 0.9285, IoU.Column_Pole: 0.1744, IoU.Fence: 0.7882, IoU.Pedestrian: 0.6559, IoU.Road: 0.9775, IoU.Sidewalk: 0.9229, IoU.SignSymbol: 0.0036, IoU.Sky: 0.9369, IoU.Tree: 0.9080, Acc.Bicyclist: 0.9491, Acc.Building: 0.9364, Acc.Car: 0.9673, Acc.Column_Pole: 0.1968, Acc.Fence: 0.9564, Acc.Pedestrian: 0.8324, Acc.Road: 0.9872, Acc.Sidewalk: 0.9642, Acc.SignSymbol: 0.0036, Acc.Sky: 0.9550, Acc.Tree: 0.9824
2023-05-03 22:57:46,973 - mmseg - INFO - Iter [6050/10000]	lr: 4.336e-03, eta: 0:45:31, time: 0.937, data_time: 0.527, memory: 18289, decode.loss_ce: 0.0656, decode.acc_seg: 96.5782, aux_0.loss_ce: 0.0670, aux_0.acc_seg: 96.5568, aux_1.loss_ce: 0.0790, aux_1.acc_seg: 95.9050, aux_2.loss_ce: 0.1200, aux_2.loss_dice: 0.2532, aux_2.acc_seg: 96.0155, loss: 0.5848
2023-05-03 22:58:24,578 - mmseg - INFO - Iter [6100/10000]	lr: 4.287e-03, eta: 0:44:58, time: 0.752, data_time: 0.329, memory: 18289, decode.loss_ce: 0.0638, decode.acc_seg: 96.6972, aux_0.loss_ce: 0.0651, aux_0.acc_seg: 96.6706, aux_1.loss_ce: 0.0770, aux_1.acc_seg: 96.0377, aux_2.loss_ce: 0.1180, aux_2.loss_dice: 0.2516, aux_2.acc_seg: 96.0737, loss: 0.5756
2023-05-03 22:58:58,255 - mmseg - INFO - Iter [6150/10000]	lr: 4.237e-03, eta: 0:44:23, time: 0.674, data_time: 0.255, memory: 18289, decode.loss_ce: 0.0660, decode.acc_seg: 96.5740, aux_0.loss_ce: 0.0676, aux_0.acc_seg: 96.5444, aux_1.loss_ce: 0.0799, aux_1.acc_seg: 95.8795, aux_2.loss_ce: 0.1199, aux_2.loss_dice: 0.2529, aux_2.acc_seg: 96.0073, loss: 0.5862
2023-05-03 22:59:30,998 - mmseg - INFO - Iter [6200/10000]	lr: 4.188e-03, eta: 0:43:47, time: 0.655, data_time: 0.241, memory: 18289, decode.loss_ce: 0.0633, decode.acc_seg: 96.6457, aux_0.loss_ce: 0.0646, aux_0.acc_seg: 96.6342, aux_1.loss_ce: 0.0772, aux_1.acc_seg: 95.9609, aux_2.loss_ce: 0.1202, aux_2.loss_dice: 0.2528, aux_2.acc_seg: 95.9752, loss: 0.5781
2023-05-03 23:00:06,101 - mmseg - INFO - Iter [6250/10000]	lr: 4.138e-03, eta: 0:43:13, time: 0.702, data_time: 0.289, memory: 18289, decode.loss_ce: 0.0629, decode.acc_seg: 96.6677, aux_0.loss_ce: 0.0646, aux_0.acc_seg: 96.6291, aux_1.loss_ce: 0.0763, aux_1.acc_seg: 95.9765, aux_2.loss_ce: 0.1184, aux_2.loss_dice: 0.2514, aux_2.acc_seg: 96.0733, loss: 0.5735
2023-05-03 23:00:38,295 - mmseg - INFO - Iter [6300/10000]	lr: 4.088e-03, eta: 0:42:37, time: 0.644, data_time: 0.223, memory: 18289, decode.loss_ce: 0.0612, decode.acc_seg: 96.7442, aux_0.loss_ce: 0.0626, aux_0.acc_seg: 96.7238, aux_1.loss_ce: 0.0748, aux_1.acc_seg: 96.0476, aux_2.loss_ce: 0.1173, aux_2.loss_dice: 0.2501, aux_2.acc_seg: 96.0509, loss: 0.5660
2023-05-03 23:01:10,343 - mmseg - INFO - Iter [6350/10000]	lr: 4.039e-03, eta: 0:42:01, time: 0.641, data_time: 0.229, memory: 18289, decode.loss_ce: 0.0638, decode.acc_seg: 96.6715, aux_0.loss_ce: 0.0652, aux_0.acc_seg: 96.6608, aux_1.loss_ce: 0.0770, aux_1.acc_seg: 95.9966, aux_2.loss_ce: 0.1194, aux_2.loss_dice: 0.2520, aux_2.acc_seg: 96.0093, loss: 0.5774
2023-05-03 23:01:41,782 - mmseg - INFO - Iter [6400/10000]	lr: 3.989e-03, eta: 0:41:24, time: 0.629, data_time: 0.222, memory: 18289, decode.loss_ce: 0.0604, decode.acc_seg: 96.7801, aux_0.loss_ce: 0.0617, aux_0.acc_seg: 96.7601, aux_1.loss_ce: 0.0737, aux_1.acc_seg: 96.0883, aux_2.loss_ce: 0.1153, aux_2.loss_dice: 0.2506, aux_2.acc_seg: 96.1824, loss: 0.5616
2023-05-03 23:02:16,659 - mmseg - INFO - Iter [6450/10000]	lr: 3.939e-03, eta: 0:40:50, time: 0.698, data_time: 0.282, memory: 18289, decode.loss_ce: 0.0648, decode.acc_seg: 96.5926, aux_0.loss_ce: 0.0658, aux_0.acc_seg: 96.5889, aux_1.loss_ce: 0.0782, aux_1.acc_seg: 95.9040, aux_2.loss_ce: 0.1184, aux_2.loss_dice: 0.2513, aux_2.acc_seg: 96.0234, loss: 0.5784
2023-05-03 23:02:49,292 - mmseg - INFO - Iter [6500/10000]	lr: 3.889e-03, eta: 0:40:15, time: 0.653, data_time: 0.235, memory: 18289, decode.loss_ce: 0.0622, decode.acc_seg: 96.7215, aux_0.loss_ce: 0.0636, aux_0.acc_seg: 96.7108, aux_1.loss_ce: 0.0759, aux_1.acc_seg: 96.0531, aux_2.loss_ce: 0.1185, aux_2.loss_dice: 0.2512, aux_2.acc_seg: 96.0348, loss: 0.5714
2023-05-03 23:03:20,456 - mmseg - INFO - Iter [6550/10000]	lr: 3.839e-03, eta: 0:39:38, time: 0.623, data_time: 0.216, memory: 18289, decode.loss_ce: 0.0635, decode.acc_seg: 96.6327, aux_0.loss_ce: 0.0648, aux_0.acc_seg: 96.6063, aux_1.loss_ce: 0.0768, aux_1.acc_seg: 95.9457, aux_2.loss_ce: 0.1179, aux_2.loss_dice: 0.2516, aux_2.acc_seg: 96.0634, loss: 0.5746
2023-05-03 23:03:53,046 - mmseg - INFO - Iter [6600/10000]	lr: 3.789e-03, eta: 0:39:03, time: 0.652, data_time: 0.243, memory: 18289, decode.loss_ce: 0.0625, decode.acc_seg: 96.7004, aux_0.loss_ce: 0.0635, aux_0.acc_seg: 96.6942, aux_1.loss_ce: 0.0755, aux_1.acc_seg: 96.0249, aux_2.loss_ce: 0.1181, aux_2.loss_dice: 0.2509, aux_2.acc_seg: 96.0821, loss: 0.5706
2023-05-03 23:04:28,681 - mmseg - INFO - Iter [6650/10000]	lr: 3.739e-03, eta: 0:38:29, time: 0.713, data_time: 0.296, memory: 18289, decode.loss_ce: 0.0603, decode.acc_seg: 96.8108, aux_0.loss_ce: 0.0619, aux_0.acc_seg: 96.7715, aux_1.loss_ce: 0.0739, aux_1.acc_seg: 96.1239, aux_2.loss_ce: 0.1181, aux_2.loss_dice: 0.2509, aux_2.acc_seg: 96.0225, loss: 0.5651
2023-05-03 23:05:00,016 - mmseg - INFO - Iter [6700/10000]	lr: 3.689e-03, eta: 0:37:53, time: 0.627, data_time: 0.210, memory: 18289, decode.loss_ce: 0.0605, decode.acc_seg: 96.7372, aux_0.loss_ce: 0.0619, aux_0.acc_seg: 96.7137, aux_1.loss_ce: 0.0738, aux_1.acc_seg: 96.0530, aux_2.loss_ce: 0.1166, aux_2.loss_dice: 0.2500, aux_2.acc_seg: 96.1204, loss: 0.5629
2023-05-03 23:05:30,755 - mmseg - INFO - Iter [6750/10000]	lr: 3.638e-03, eta: 0:37:17, time: 0.615, data_time: 0.214, memory: 18289, decode.loss_ce: 0.0611, decode.acc_seg: 96.8097, aux_0.loss_ce: 0.0623, aux_0.acc_seg: 96.7986, aux_1.loss_ce: 0.0744, aux_1.acc_seg: 96.1469, aux_2.loss_ce: 0.1188, aux_2.loss_dice: 0.2512, aux_2.acc_seg: 96.0215, loss: 0.5678
2023-05-03 23:06:05,527 - mmseg - INFO - Iter [6800/10000]	lr: 3.588e-03, eta: 0:36:43, time: 0.695, data_time: 0.268, memory: 18289, decode.loss_ce: 0.0593, decode.acc_seg: 96.8240, aux_0.loss_ce: 0.0609, aux_0.acc_seg: 96.7844, aux_1.loss_ce: 0.0732, aux_1.acc_seg: 96.1094, aux_2.loss_ce: 0.1173, aux_2.loss_dice: 0.2489, aux_2.acc_seg: 96.0309, loss: 0.5596
2023-05-03 23:06:37,181 - mmseg - INFO - Iter [6850/10000]	lr: 3.537e-03, eta: 0:36:07, time: 0.633, data_time: 0.219, memory: 18289, decode.loss_ce: 0.0612, decode.acc_seg: 96.7970, aux_0.loss_ce: 0.0626, aux_0.acc_seg: 96.7727, aux_1.loss_ce: 0.0753, aux_1.acc_seg: 96.0827, aux_2.loss_ce: 0.1198, aux_2.loss_dice: 0.2521, aux_2.acc_seg: 95.9798, loss: 0.5709
2023-05-03 23:07:09,493 - mmseg - INFO - Iter [6900/10000]	lr: 3.487e-03, eta: 0:35:32, time: 0.646, data_time: 0.242, memory: 18289, decode.loss_ce: 0.0578, decode.acc_seg: 96.8800, aux_0.loss_ce: 0.0592, aux_0.acc_seg: 96.8524, aux_1.loss_ce: 0.0712, aux_1.acc_seg: 96.1922, aux_2.loss_ce: 0.1156, aux_2.loss_dice: 0.2478, aux_2.acc_seg: 96.0860, loss: 0.5517
2023-05-03 23:07:40,771 - mmseg - INFO - Iter [6950/10000]	lr: 3.436e-03, eta: 0:34:56, time: 0.626, data_time: 0.209, memory: 18289, decode.loss_ce: 0.0591, decode.acc_seg: 96.8215, aux_0.loss_ce: 0.0610, aux_0.acc_seg: 96.7706, aux_1.loss_ce: 0.0727, aux_1.acc_seg: 96.1255, aux_2.loss_ce: 0.1180, aux_2.loss_dice: 0.2498, aux_2.acc_seg: 96.0394, loss: 0.5606
2023-05-03 23:08:16,187 - mmseg - INFO - Saving checkpoint at 7000 iterations
2023-05-03 23:08:16,621 - mmseg - INFO - Exp name: stdc1_1x16_720x960_10k_camvid.py
2023-05-03 23:08:16,622 - mmseg - INFO - Iter [7000/10000]	lr: 3.386e-03, eta: 0:34:22, time: 0.720, data_time: 0.301, memory: 18289, decode.loss_ce: 0.0622, decode.acc_seg: 96.7245, aux_0.loss_ce: 0.0631, aux_0.acc_seg: 96.7286, aux_1.loss_ce: 0.0751, aux_1.acc_seg: 96.0706, aux_2.loss_ce: 0.1190, aux_2.loss_dice: 0.2506, aux_2.acc_seg: 95.9918, loss: 0.5700
2023-05-03 23:08:25,783 - mmseg - INFO - per class results:
2023-05-03 23:08:25,784 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 86.46 | 94.28 |
|   Building  | 92.34 | 94.03 |
|     Car     | 92.95 | 94.63 |
| Column_Pole |  17.9 | 20.82 |
|    Fence    | 75.88 | 97.53 |
|  Pedestrian | 67.41 | 78.07 |
|     Road    | 97.72 | 98.58 |
|   Sidewalk  | 92.39 | 97.08 |
|  SignSymbol |  0.77 |  0.77 |
|     Sky     | 93.95 | 96.92 |
|     Tree    | 92.32 | 97.79 |
+-------------+-------+-------+
2023-05-03 23:08:25,784 - mmseg - INFO - Summary:
2023-05-03 23:08:25,785 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 96.07 | 73.64 | 79.14 |
+-------+-------+-------+
2023-05-03 23:08:25,785 - mmseg - INFO - Exp name: stdc1_1x16_720x960_10k_camvid.py
2023-05-03 23:08:25,785 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9607, mIoU: 0.7364, mAcc: 0.7914, IoU.Bicyclist: 0.8646, IoU.Building: 0.9234, IoU.Car: 0.9295, IoU.Column_Pole: 0.1790, IoU.Fence: 0.7588, IoU.Pedestrian: 0.6741, IoU.Road: 0.9772, IoU.Sidewalk: 0.9239, IoU.SignSymbol: 0.0077, IoU.Sky: 0.9395, IoU.Tree: 0.9232, Acc.Bicyclist: 0.9428, Acc.Building: 0.9403, Acc.Car: 0.9463, Acc.Column_Pole: 0.2082, Acc.Fence: 0.9753, Acc.Pedestrian: 0.7807, Acc.Road: 0.9858, Acc.Sidewalk: 0.9708, Acc.SignSymbol: 0.0077, Acc.Sky: 0.9692, Acc.Tree: 0.9779
2023-05-03 23:08:56,732 - mmseg - INFO - Iter [7050/10000]	lr: 3.335e-03, eta: 0:33:50, time: 0.799, data_time: 0.386, memory: 18289, decode.loss_ce: 0.0615, decode.acc_seg: 96.7285, aux_0.loss_ce: 0.0629, aux_0.acc_seg: 96.7002, aux_1.loss_ce: 0.0757, aux_1.acc_seg: 96.0018, aux_2.loss_ce: 0.1192, aux_2.loss_dice: 0.2508, aux_2.acc_seg: 95.9729, loss: 0.5703
2023-05-03 23:09:28,358 - mmseg - INFO - Iter [7100/10000]	lr: 3.284e-03, eta: 0:33:15, time: 0.632, data_time: 0.231, memory: 18289, decode.loss_ce: 0.0586, decode.acc_seg: 96.8253, aux_0.loss_ce: 0.0600, aux_0.acc_seg: 96.8064, aux_1.loss_ce: 0.0715, aux_1.acc_seg: 96.1649, aux_2.loss_ce: 0.1163, aux_2.loss_dice: 0.2483, aux_2.acc_seg: 96.0976, loss: 0.5546
2023-05-03 23:09:58,769 - mmseg - INFO - Iter [7150/10000]	lr: 3.233e-03, eta: 0:32:39, time: 0.608, data_time: 0.202, memory: 18289, decode.loss_ce: 0.0586, decode.acc_seg: 96.8930, aux_0.loss_ce: 0.0599, aux_0.acc_seg: 96.8768, aux_1.loss_ce: 0.0720, aux_1.acc_seg: 96.2154, aux_2.loss_ce: 0.1179, aux_2.loss_dice: 0.2507, aux_2.acc_seg: 96.0372, loss: 0.5591
2023-05-03 23:10:33,872 - mmseg - INFO - Iter [7200/10000]	lr: 3.182e-03, eta: 0:32:04, time: 0.702, data_time: 0.300, memory: 18289, decode.loss_ce: 0.0576, decode.acc_seg: 96.9317, aux_0.loss_ce: 0.0589, aux_0.acc_seg: 96.9097, aux_1.loss_ce: 0.0708, aux_1.acc_seg: 96.2713, aux_2.loss_ce: 0.1175, aux_2.loss_dice: 0.2504, aux_2.acc_seg: 96.0565, loss: 0.5553
2023-05-03 23:11:05,957 - mmseg - INFO - Iter [7250/10000]	lr: 3.131e-03, eta: 0:31:29, time: 0.642, data_time: 0.235, memory: 18289, decode.loss_ce: 0.0600, decode.acc_seg: 96.8383, aux_0.loss_ce: 0.0612, aux_0.acc_seg: 96.8273, aux_1.loss_ce: 0.0735, aux_1.acc_seg: 96.1707, aux_2.loss_ce: 0.1193, aux_2.loss_dice: 0.2511, aux_2.acc_seg: 95.9727, loss: 0.5651
2023-05-03 23:11:38,577 - mmseg - INFO - Iter [7300/10000]	lr: 3.079e-03, eta: 0:30:54, time: 0.652, data_time: 0.232, memory: 18289, decode.loss_ce: 0.0586, decode.acc_seg: 96.8636, aux_0.loss_ce: 0.0600, aux_0.acc_seg: 96.8436, aux_1.loss_ce: 0.0720, aux_1.acc_seg: 96.1850, aux_2.loss_ce: 0.1168, aux_2.loss_dice: 0.2494, aux_2.acc_seg: 96.0638, loss: 0.5569
2023-05-03 23:12:15,093 - mmseg - INFO - Iter [7350/10000]	lr: 3.028e-03, eta: 0:30:21, time: 0.730, data_time: 0.321, memory: 18289, decode.loss_ce: 0.0596, decode.acc_seg: 96.7974, aux_0.loss_ce: 0.0603, aux_0.acc_seg: 96.7953, aux_1.loss_ce: 0.0724, aux_1.acc_seg: 96.1412, aux_2.loss_ce: 0.1180, aux_2.loss_dice: 0.2494, aux_2.acc_seg: 96.0157, loss: 0.5597
2023-05-03 23:12:47,117 - mmseg - INFO - Iter [7400/10000]	lr: 2.977e-03, eta: 0:29:45, time: 0.640, data_time: 0.227, memory: 18289, decode.loss_ce: 0.0594, decode.acc_seg: 96.8696, aux_0.loss_ce: 0.0606, aux_0.acc_seg: 96.8583, aux_1.loss_ce: 0.0725, aux_1.acc_seg: 96.2127, aux_2.loss_ce: 0.1176, aux_2.loss_dice: 0.2497, aux_2.acc_seg: 96.0481, loss: 0.5598
2023-05-03 23:13:20,570 - mmseg - INFO - Iter [7450/10000]	lr: 2.925e-03, eta: 0:29:11, time: 0.669, data_time: 0.258, memory: 18289, decode.loss_ce: 0.0589, decode.acc_seg: 96.8181, aux_0.loss_ce: 0.0602, aux_0.acc_seg: 96.7991, aux_1.loss_ce: 0.0723, aux_1.acc_seg: 96.1307, aux_2.loss_ce: 0.1174, aux_2.loss_dice: 0.2490, aux_2.acc_seg: 96.0268, loss: 0.5577
2023-05-03 23:13:52,237 - mmseg - INFO - Iter [7500/10000]	lr: 2.873e-03, eta: 0:28:36, time: 0.633, data_time: 0.229, memory: 18289, decode.loss_ce: 0.0575, decode.acc_seg: 96.8961, aux_0.loss_ce: 0.0586, aux_0.acc_seg: 96.8823, aux_1.loss_ce: 0.0709, aux_1.acc_seg: 96.2127, aux_2.loss_ce: 0.1162, aux_2.loss_dice: 0.2491, aux_2.acc_seg: 96.1055, loss: 0.5523
2023-05-03 23:14:27,462 - mmseg - INFO - Iter [7550/10000]	lr: 2.822e-03, eta: 0:28:02, time: 0.704, data_time: 0.303, memory: 18289, decode.loss_ce: 0.0588, decode.acc_seg: 96.8864, aux_0.loss_ce: 0.0598, aux_0.acc_seg: 96.8801, aux_1.loss_ce: 0.0714, aux_1.acc_seg: 96.2446, aux_2.loss_ce: 0.1176, aux_2.loss_dice: 0.2498, aux_2.acc_seg: 96.0460, loss: 0.5573
2023-05-03 23:14:59,532 - mmseg - INFO - Iter [7600/10000]	lr: 2.770e-03, eta: 0:27:26, time: 0.641, data_time: 0.236, memory: 18289, decode.loss_ce: 0.0573, decode.acc_seg: 96.9284, aux_0.loss_ce: 0.0588, aux_0.acc_seg: 96.9021, aux_1.loss_ce: 0.0707, aux_1.acc_seg: 96.2416, aux_2.loss_ce: 0.1182, aux_2.loss_dice: 0.2492, aux_2.acc_seg: 96.0080, loss: 0.5542
2023-05-03 23:15:31,543 - mmseg - INFO - Iter [7650/10000]	lr: 2.718e-03, eta: 0:26:51, time: 0.640, data_time: 0.237, memory: 18289, decode.loss_ce: 0.0574, decode.acc_seg: 97.0056, aux_0.loss_ce: 0.0585, aux_0.acc_seg: 97.0006, aux_1.loss_ce: 0.0705, aux_1.acc_seg: 96.3556, aux_2.loss_ce: 0.1176, aux_2.loss_dice: 0.2512, aux_2.acc_seg: 96.0856, loss: 0.5552
2023-05-03 23:16:02,636 - mmseg - INFO - Iter [7700/10000]	lr: 2.666e-03, eta: 0:26:16, time: 0.622, data_time: 0.218, memory: 18289, decode.loss_ce: 0.0601, decode.acc_seg: 96.8309, aux_0.loss_ce: 0.0610, aux_0.acc_seg: 96.8329, aux_1.loss_ce: 0.0730, aux_1.acc_seg: 96.1808, aux_2.loss_ce: 0.1201, aux_2.loss_dice: 0.2525, aux_2.acc_seg: 95.9602, loss: 0.5666
2023-05-03 23:16:36,626 - mmseg - INFO - Iter [7750/10000]	lr: 2.614e-03, eta: 0:25:42, time: 0.680, data_time: 0.275, memory: 18289, decode.loss_ce: 0.0582, decode.acc_seg: 96.9514, aux_0.loss_ce: 0.0592, aux_0.acc_seg: 96.9511, aux_1.loss_ce: 0.0711, aux_1.acc_seg: 96.3117, aux_2.loss_ce: 0.1191, aux_2.loss_dice: 0.2515, aux_2.acc_seg: 96.0098, loss: 0.5591
2023-05-03 23:17:07,602 - mmseg - INFO - Iter [7800/10000]	lr: 2.561e-03, eta: 0:25:07, time: 0.620, data_time: 0.214, memory: 18289, decode.loss_ce: 0.0582, decode.acc_seg: 96.8295, aux_0.loss_ce: 0.0593, aux_0.acc_seg: 96.8241, aux_1.loss_ce: 0.0709, aux_1.acc_seg: 96.1684, aux_2.loss_ce: 0.1159, aux_2.loss_dice: 0.2485, aux_2.acc_seg: 96.1055, loss: 0.5528
2023-05-03 23:17:38,909 - mmseg - INFO - Iter [7850/10000]	lr: 2.509e-03, eta: 0:24:32, time: 0.626, data_time: 0.214, memory: 18289, decode.loss_ce: 0.0608, decode.acc_seg: 96.8154, aux_0.loss_ce: 0.0616, aux_0.acc_seg: 96.7966, aux_1.loss_ce: 0.0727, aux_1.acc_seg: 96.1642, aux_2.loss_ce: 0.1173, aux_2.loss_dice: 0.2494, aux_2.acc_seg: 96.0784, loss: 0.5618
2023-05-03 23:18:13,950 - mmseg - INFO - Iter [7900/10000]	lr: 2.457e-03, eta: 0:23:58, time: 0.701, data_time: 0.294, memory: 18289, decode.loss_ce: 0.0576, decode.acc_seg: 96.9462, aux_0.loss_ce: 0.0590, aux_0.acc_seg: 96.9247, aux_1.loss_ce: 0.0703, aux_1.acc_seg: 96.2928, aux_2.loss_ce: 0.1179, aux_2.loss_dice: 0.2501, aux_2.acc_seg: 96.0272, loss: 0.5549
2023-05-03 23:18:44,586 - mmseg - INFO - Iter [7950/10000]	lr: 2.404e-03, eta: 0:23:22, time: 0.613, data_time: 0.206, memory: 18289, decode.loss_ce: 0.0580, decode.acc_seg: 96.9108, aux_0.loss_ce: 0.0591, aux_0.acc_seg: 96.8991, aux_1.loss_ce: 0.0710, aux_1.acc_seg: 96.2478, aux_2.loss_ce: 0.1177, aux_2.loss_dice: 0.2505, aux_2.acc_seg: 96.0598, loss: 0.5562
2023-05-03 23:19:16,319 - mmseg - INFO - Saving checkpoint at 8000 iterations
2023-05-03 23:19:16,790 - mmseg - INFO - Exp name: stdc1_1x16_720x960_10k_camvid.py
2023-05-03 23:19:16,790 - mmseg - INFO - Iter [8000/10000]	lr: 2.351e-03, eta: 0:22:48, time: 0.647, data_time: 0.232, memory: 18289, decode.loss_ce: 0.0572, decode.acc_seg: 96.9620, aux_0.loss_ce: 0.0583, aux_0.acc_seg: 96.9498, aux_1.loss_ce: 0.0697, aux_1.acc_seg: 96.3245, aux_2.loss_ce: 0.1183, aux_2.loss_dice: 0.2507, aux_2.acc_seg: 96.0230, loss: 0.5543
2023-05-03 23:19:24,404 - mmseg - INFO - per class results:
2023-05-03 23:19:24,405 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  |  86.6 | 93.75 |
|   Building  | 92.47 | 94.32 |
|     Car     | 93.56 | 95.62 |
| Column_Pole | 32.51 | 43.41 |
|    Fence    | 80.25 | 93.41 |
|  Pedestrian | 66.22 | 87.38 |
|     Road    |  97.8 | 98.79 |
|   Sidewalk  | 92.68 | 96.34 |
|  SignSymbol |  0.16 |  0.16 |
|     Sky     | 94.02 | 96.71 |
|     Tree    | 91.79 | 97.88 |
+-------------+-------+-------+
2023-05-03 23:19:24,406 - mmseg - INFO - Summary:
2023-05-03 23:19:24,406 - mmseg - INFO - 
+------+-------+-------+
| aAcc |  mIoU |  mAcc |
+------+-------+-------+
| 96.2 | 75.28 | 81.61 |
+------+-------+-------+
2023-05-03 23:19:24,407 - mmseg - INFO - Exp name: stdc1_1x16_720x960_10k_camvid.py
2023-05-03 23:19:24,407 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9620, mIoU: 0.7528, mAcc: 0.8161, IoU.Bicyclist: 0.8660, IoU.Building: 0.9247, IoU.Car: 0.9356, IoU.Column_Pole: 0.3251, IoU.Fence: 0.8025, IoU.Pedestrian: 0.6622, IoU.Road: 0.9780, IoU.Sidewalk: 0.9268, IoU.SignSymbol: 0.0016, IoU.Sky: 0.9402, IoU.Tree: 0.9179, Acc.Bicyclist: 0.9375, Acc.Building: 0.9432, Acc.Car: 0.9562, Acc.Column_Pole: 0.4341, Acc.Fence: 0.9341, Acc.Pedestrian: 0.8738, Acc.Road: 0.9879, Acc.Sidewalk: 0.9634, Acc.SignSymbol: 0.0016, Acc.Sky: 0.9671, Acc.Tree: 0.9788
2023-05-03 23:19:55,563 - mmseg - INFO - Iter [8050/10000]	lr: 2.298e-03, eta: 0:22:15, time: 0.773, data_time: 0.364, memory: 18289, decode.loss_ce: 0.0573, decode.acc_seg: 96.9374, aux_0.loss_ce: 0.0584, aux_0.acc_seg: 96.9183, aux_1.loss_ce: 0.0700, aux_1.acc_seg: 96.2823, aux_2.loss_ce: 0.1172, aux_2.loss_dice: 0.2496, aux_2.acc_seg: 96.0747, loss: 0.5524
2023-05-03 23:20:32,325 - mmseg - INFO - Iter [8100/10000]	lr: 2.245e-03, eta: 0:21:41, time: 0.735, data_time: 0.327, memory: 18289, decode.loss_ce: 0.0582, decode.acc_seg: 96.9119, aux_0.loss_ce: 0.0598, aux_0.acc_seg: 96.8737, aux_1.loss_ce: 0.0713, aux_1.acc_seg: 96.2468, aux_2.loss_ce: 0.1188, aux_2.loss_dice: 0.2514, aux_2.acc_seg: 96.0123, loss: 0.5595
2023-05-03 23:21:03,360 - mmseg - INFO - Iter [8150/10000]	lr: 2.192e-03, eta: 0:21:06, time: 0.621, data_time: 0.207, memory: 18289, decode.loss_ce: 0.0562, decode.acc_seg: 96.9689, aux_0.loss_ce: 0.0577, aux_0.acc_seg: 96.9413, aux_1.loss_ce: 0.0694, aux_1.acc_seg: 96.2903, aux_2.loss_ce: 0.1178, aux_2.loss_dice: 0.2481, aux_2.acc_seg: 95.9823, loss: 0.5492
2023-05-03 23:21:35,508 - mmseg - INFO - Iter [8200/10000]	lr: 2.139e-03, eta: 0:20:31, time: 0.643, data_time: 0.234, memory: 18289, decode.loss_ce: 0.0561, decode.acc_seg: 96.9639, aux_0.loss_ce: 0.0570, aux_0.acc_seg: 96.9633, aux_1.loss_ce: 0.0688, aux_1.acc_seg: 96.3213, aux_2.loss_ce: 0.1152, aux_2.loss_dice: 0.2477, aux_2.acc_seg: 96.1239, loss: 0.5448
2023-05-03 23:22:07,224 - mmseg - INFO - Iter [8250/10000]	lr: 2.085e-03, eta: 0:19:57, time: 0.634, data_time: 0.230, memory: 18289, decode.loss_ce: 0.0573, decode.acc_seg: 96.9173, aux_0.loss_ce: 0.0587, aux_0.acc_seg: 96.8864, aux_1.loss_ce: 0.0707, aux_1.acc_seg: 96.2337, aux_2.loss_ce: 0.1188, aux_2.loss_dice: 0.2493, aux_2.acc_seg: 95.9873, loss: 0.5548
2023-05-03 23:22:42,867 - mmseg - INFO - Iter [8300/10000]	lr: 2.031e-03, eta: 0:19:23, time: 0.713, data_time: 0.310, memory: 18289, decode.loss_ce: 0.0564, decode.acc_seg: 96.9517, aux_0.loss_ce: 0.0576, aux_0.acc_seg: 96.9340, aux_1.loss_ce: 0.0699, aux_1.acc_seg: 96.2567, aux_2.loss_ce: 0.1179, aux_2.loss_dice: 0.2503, aux_2.acc_seg: 96.0148, loss: 0.5520
2023-05-03 23:23:13,567 - mmseg - INFO - Iter [8350/10000]	lr: 1.978e-03, eta: 0:18:48, time: 0.614, data_time: 0.216, memory: 18289, decode.loss_ce: 0.0560, decode.acc_seg: 96.9056, aux_0.loss_ce: 0.0572, aux_0.acc_seg: 96.8888, aux_1.loss_ce: 0.0688, aux_1.acc_seg: 96.2410, aux_2.loss_ce: 0.1150, aux_2.loss_dice: 0.2478, aux_2.acc_seg: 96.1364, loss: 0.5448
2023-05-03 23:23:44,119 - mmseg - INFO - Iter [8400/10000]	lr: 1.924e-03, eta: 0:18:13, time: 0.611, data_time: 0.205, memory: 18289, decode.loss_ce: 0.0573, decode.acc_seg: 96.9425, aux_0.loss_ce: 0.0583, aux_0.acc_seg: 96.9338, aux_1.loss_ce: 0.0700, aux_1.acc_seg: 96.2869, aux_2.loss_ce: 0.1168, aux_2.loss_dice: 0.2497, aux_2.acc_seg: 96.0913, loss: 0.5521
2023-05-03 23:24:19,064 - mmseg - INFO - Iter [8450/10000]	lr: 1.870e-03, eta: 0:17:39, time: 0.699, data_time: 0.291, memory: 18289, decode.loss_ce: 0.0555, decode.acc_seg: 97.0648, aux_0.loss_ce: 0.0569, aux_0.acc_seg: 97.0524, aux_1.loss_ce: 0.0685, aux_1.acc_seg: 96.3943, aux_2.loss_ce: 0.1164, aux_2.loss_dice: 0.2486, aux_2.acc_seg: 96.1033, loss: 0.5459
2023-05-03 23:24:50,942 - mmseg - INFO - Iter [8500/10000]	lr: 1.815e-03, eta: 0:17:04, time: 0.638, data_time: 0.231, memory: 18289, decode.loss_ce: 0.0561, decode.acc_seg: 97.0039, aux_0.loss_ce: 0.0574, aux_0.acc_seg: 96.9904, aux_1.loss_ce: 0.0690, aux_1.acc_seg: 96.3564, aux_2.loss_ce: 0.1183, aux_2.loss_dice: 0.2496, aux_2.acc_seg: 96.0138, loss: 0.5504
2023-05-03 23:25:21,656 - mmseg - INFO - Iter [8550/10000]	lr: 1.761e-03, eta: 0:16:30, time: 0.614, data_time: 0.207, memory: 18289, decode.loss_ce: 0.0556, decode.acc_seg: 97.0598, aux_0.loss_ce: 0.0568, aux_0.acc_seg: 97.0356, aux_1.loss_ce: 0.0684, aux_1.acc_seg: 96.3985, aux_2.loss_ce: 0.1148, aux_2.loss_dice: 0.2475, aux_2.acc_seg: 96.1267, loss: 0.5430
2023-05-03 23:25:52,333 - mmseg - INFO - Iter [8600/10000]	lr: 1.706e-03, eta: 0:15:55, time: 0.614, data_time: 0.211, memory: 18289, decode.loss_ce: 0.0557, decode.acc_seg: 96.9862, aux_0.loss_ce: 0.0568, aux_0.acc_seg: 96.9768, aux_1.loss_ce: 0.0686, aux_1.acc_seg: 96.3198, aux_2.loss_ce: 0.1169, aux_2.loss_dice: 0.2485, aux_2.acc_seg: 96.0416, loss: 0.5465
2023-05-03 23:26:26,888 - mmseg - INFO - Iter [8650/10000]	lr: 1.651e-03, eta: 0:15:21, time: 0.691, data_time: 0.287, memory: 18289, decode.loss_ce: 0.0545, decode.acc_seg: 97.0174, aux_0.loss_ce: 0.0557, aux_0.acc_seg: 97.0027, aux_1.loss_ce: 0.0676, aux_1.acc_seg: 96.3398, aux_2.loss_ce: 0.1158, aux_2.loss_dice: 0.2469, aux_2.acc_seg: 96.0638, loss: 0.5405
2023-05-03 23:26:58,671 - mmseg - INFO - Iter [8700/10000]	lr: 1.596e-03, eta: 0:14:46, time: 0.636, data_time: 0.224, memory: 18289, decode.loss_ce: 0.0536, decode.acc_seg: 97.0674, aux_0.loss_ce: 0.0548, aux_0.acc_seg: 97.0444, aux_1.loss_ce: 0.0665, aux_1.acc_seg: 96.3934, aux_2.loss_ce: 0.1156, aux_2.loss_dice: 0.2475, aux_2.acc_seg: 96.0725, loss: 0.5378
2023-05-03 23:27:29,797 - mmseg - INFO - Iter [8750/10000]	lr: 1.541e-03, eta: 0:14:12, time: 0.623, data_time: 0.205, memory: 18289, decode.loss_ce: 0.0545, decode.acc_seg: 97.0550, aux_0.loss_ce: 0.0557, aux_0.acc_seg: 97.0478, aux_1.loss_ce: 0.0678, aux_1.acc_seg: 96.3872, aux_2.loss_ce: 0.1161, aux_2.loss_dice: 0.2481, aux_2.acc_seg: 96.1019, loss: 0.5421
2023-05-03 23:28:00,683 - mmseg - INFO - Iter [8800/10000]	lr: 1.485e-03, eta: 0:13:37, time: 0.618, data_time: 0.218, memory: 18289, decode.loss_ce: 0.0533, decode.acc_seg: 97.1365, aux_0.loss_ce: 0.0547, aux_0.acc_seg: 97.1086, aux_1.loss_ce: 0.0665, aux_1.acc_seg: 96.4581, aux_2.loss_ce: 0.1159, aux_2.loss_dice: 0.2479, aux_2.acc_seg: 96.0729, loss: 0.5385
2023-05-03 23:28:35,668 - mmseg - INFO - Iter [8850/10000]	lr: 1.430e-03, eta: 0:13:03, time: 0.700, data_time: 0.295, memory: 18289, decode.loss_ce: 0.0553, decode.acc_seg: 96.9976, aux_0.loss_ce: 0.0564, aux_0.acc_seg: 96.9859, aux_1.loss_ce: 0.0683, aux_1.acc_seg: 96.3284, aux_2.loss_ce: 0.1166, aux_2.loss_dice: 0.2489, aux_2.acc_seg: 96.0404, loss: 0.5457
2023-05-03 23:29:07,338 - mmseg - INFO - Iter [8900/10000]	lr: 1.374e-03, eta: 0:12:29, time: 0.633, data_time: 0.230, memory: 18289, decode.loss_ce: 0.0544, decode.acc_seg: 97.0905, aux_0.loss_ce: 0.0557, aux_0.acc_seg: 97.0668, aux_1.loss_ce: 0.0673, aux_1.acc_seg: 96.4227, aux_2.loss_ce: 0.1169, aux_2.loss_dice: 0.2500, aux_2.acc_seg: 96.0936, loss: 0.5444
2023-05-03 23:29:37,870 - mmseg - INFO - Iter [8950/10000]	lr: 1.317e-03, eta: 0:11:54, time: 0.611, data_time: 0.204, memory: 18289, decode.loss_ce: 0.0546, decode.acc_seg: 97.0115, aux_0.loss_ce: 0.0558, aux_0.acc_seg: 96.9784, aux_1.loss_ce: 0.0676, aux_1.acc_seg: 96.3217, aux_2.loss_ce: 0.1150, aux_2.loss_dice: 0.2468, aux_2.acc_seg: 96.1031, loss: 0.5399
2023-05-03 23:30:13,284 - mmseg - INFO - Saving checkpoint at 9000 iterations
2023-05-03 23:30:13,699 - mmseg - INFO - Exp name: stdc1_1x16_720x960_10k_camvid.py
2023-05-03 23:30:13,699 - mmseg - INFO - Iter [9000/10000]	lr: 1.261e-03, eta: 0:11:21, time: 0.719, data_time: 0.300, memory: 18289, decode.loss_ce: 0.0538, decode.acc_seg: 97.0674, aux_0.loss_ce: 0.0551, aux_0.acc_seg: 97.0423, aux_1.loss_ce: 0.0670, aux_1.acc_seg: 96.3949, aux_2.loss_ce: 0.1168, aux_2.loss_dice: 0.2490, aux_2.acc_seg: 96.0596, loss: 0.5417
2023-05-03 23:30:20,135 - mmseg - INFO - per class results:
2023-05-03 23:30:20,136 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 86.46 | 94.96 |
|   Building  | 92.87 | 94.71 |
|     Car     | 93.28 | 95.09 |
| Column_Pole | 28.84 | 35.79 |
|    Fence    | 80.88 | 92.69 |
|  Pedestrian | 67.37 | 85.11 |
|     Road    | 97.74 | 98.69 |
|   Sidewalk  | 92.64 | 96.69 |
|  SignSymbol |  0.1  |  0.11 |
|     Sky     | 93.67 | 96.18 |
|     Tree    | 91.83 | 98.26 |
+-------------+-------+-------+
2023-05-03 23:30:20,136 - mmseg - INFO - Summary:
2023-05-03 23:30:20,136 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 96.25 | 75.06 | 80.75 |
+-------+-------+-------+
2023-05-03 23:30:20,136 - mmseg - INFO - Exp name: stdc1_1x16_720x960_10k_camvid.py
2023-05-03 23:30:20,136 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9625, mIoU: 0.7506, mAcc: 0.8075, IoU.Bicyclist: 0.8646, IoU.Building: 0.9287, IoU.Car: 0.9328, IoU.Column_Pole: 0.2884, IoU.Fence: 0.8088, IoU.Pedestrian: 0.6737, IoU.Road: 0.9774, IoU.Sidewalk: 0.9264, IoU.SignSymbol: 0.0010, IoU.Sky: 0.9367, IoU.Tree: 0.9183, Acc.Bicyclist: 0.9496, Acc.Building: 0.9471, Acc.Car: 0.9509, Acc.Column_Pole: 0.3579, Acc.Fence: 0.9269, Acc.Pedestrian: 0.8511, Acc.Road: 0.9869, Acc.Sidewalk: 0.9669, Acc.SignSymbol: 0.0011, Acc.Sky: 0.9618, Acc.Tree: 0.9826
2023-05-03 23:30:51,319 - mmseg - INFO - Iter [9050/10000]	lr: 1.204e-03, eta: 0:10:47, time: 0.750, data_time: 0.341, memory: 18289, decode.loss_ce: 0.0538, decode.acc_seg: 97.0450, aux_0.loss_ce: 0.0552, aux_0.acc_seg: 97.0236, aux_1.loss_ce: 0.0668, aux_1.acc_seg: 96.3811, aux_2.loss_ce: 0.1149, aux_2.loss_dice: 0.2467, aux_2.acc_seg: 96.1188, loss: 0.5375
2023-05-03 23:31:22,314 - mmseg - INFO - Iter [9100/10000]	lr: 1.147e-03, eta: 0:10:13, time: 0.620, data_time: 0.216, memory: 18289, decode.loss_ce: 0.0541, decode.acc_seg: 97.0973, aux_0.loss_ce: 0.0551, aux_0.acc_seg: 97.0894, aux_1.loss_ce: 0.0666, aux_1.acc_seg: 96.4620, aux_2.loss_ce: 0.1157, aux_2.loss_dice: 0.2480, aux_2.acc_seg: 96.0907, loss: 0.5395
2023-05-03 23:31:53,631 - mmseg - INFO - Iter [9150/10000]	lr: 1.090e-03, eta: 0:09:38, time: 0.626, data_time: 0.216, memory: 18289, decode.loss_ce: 0.0561, decode.acc_seg: 96.9774, aux_0.loss_ce: 0.0572, aux_0.acc_seg: 96.9676, aux_1.loss_ce: 0.0698, aux_1.acc_seg: 96.2926, aux_2.loss_ce: 0.1205, aux_2.loss_dice: 0.2507, aux_2.acc_seg: 95.9145, loss: 0.5543
2023-05-03 23:32:29,519 - mmseg - INFO - Iter [9200/10000]	lr: 1.032e-03, eta: 0:09:04, time: 0.718, data_time: 0.308, memory: 18289, decode.loss_ce: 0.0540, decode.acc_seg: 97.0496, aux_0.loss_ce: 0.0555, aux_0.acc_seg: 97.0254, aux_1.loss_ce: 0.0672, aux_1.acc_seg: 96.3715, aux_2.loss_ce: 0.1167, aux_2.loss_dice: 0.2483, aux_2.acc_seg: 96.0483, loss: 0.5417
2023-05-03 23:33:00,718 - mmseg - INFO - Iter [9250/10000]	lr: 9.738e-04, eta: 0:08:30, time: 0.624, data_time: 0.216, memory: 18289, decode.loss_ce: 0.0547, decode.acc_seg: 97.0637, aux_0.loss_ce: 0.0561, aux_0.acc_seg: 97.0428, aux_1.loss_ce: 0.0681, aux_1.acc_seg: 96.3951, aux_2.loss_ce: 0.1179, aux_2.loss_dice: 0.2507, aux_2.acc_seg: 96.0597, loss: 0.5475
2023-05-03 23:33:32,259 - mmseg - INFO - Iter [9300/10000]	lr: 9.153e-04, eta: 0:07:56, time: 0.631, data_time: 0.224, memory: 18289, decode.loss_ce: 0.0542, decode.acc_seg: 97.0806, aux_0.loss_ce: 0.0556, aux_0.acc_seg: 97.0536, aux_1.loss_ce: 0.0673, aux_1.acc_seg: 96.4202, aux_2.loss_ce: 0.1173, aux_2.loss_dice: 0.2482, aux_2.acc_seg: 96.0134, loss: 0.5425
2023-05-03 23:34:03,523 - mmseg - INFO - Iter [9350/10000]	lr: 8.564e-04, eta: 0:07:22, time: 0.625, data_time: 0.214, memory: 18289, decode.loss_ce: 0.0526, decode.acc_seg: 97.0983, aux_0.loss_ce: 0.0540, aux_0.acc_seg: 97.0727, aux_1.loss_ce: 0.0655, aux_1.acc_seg: 96.4320, aux_2.loss_ce: 0.1127, aux_2.loss_dice: 0.2445, aux_2.acc_seg: 96.1719, loss: 0.5292
2023-05-03 23:34:39,181 - mmseg - INFO - Iter [9400/10000]	lr: 7.971e-04, eta: 0:06:48, time: 0.713, data_time: 0.303, memory: 18289, decode.loss_ce: 0.0529, decode.acc_seg: 97.1480, aux_0.loss_ce: 0.0543, aux_0.acc_seg: 97.1229, aux_1.loss_ce: 0.0657, aux_1.acc_seg: 96.4884, aux_2.loss_ce: 0.1162, aux_2.loss_dice: 0.2479, aux_2.acc_seg: 96.0854, loss: 0.5370
2023-05-03 23:35:10,922 - mmseg - INFO - Iter [9450/10000]	lr: 7.372e-04, eta: 0:06:14, time: 0.635, data_time: 0.224, memory: 18289, decode.loss_ce: 0.0527, decode.acc_seg: 97.1104, aux_0.loss_ce: 0.0542, aux_0.acc_seg: 97.0775, aux_1.loss_ce: 0.0661, aux_1.acc_seg: 96.4180, aux_2.loss_ce: 0.1157, aux_2.loss_dice: 0.2485, aux_2.acc_seg: 96.0902, loss: 0.5372
2023-05-03 23:35:41,543 - mmseg - INFO - Iter [9500/10000]	lr: 6.768e-04, eta: 0:05:39, time: 0.612, data_time: 0.206, memory: 18289, decode.loss_ce: 0.0544, decode.acc_seg: 97.0467, aux_0.loss_ce: 0.0557, aux_0.acc_seg: 97.0189, aux_1.loss_ce: 0.0685, aux_1.acc_seg: 96.3222, aux_2.loss_ce: 0.1184, aux_2.loss_dice: 0.2487, aux_2.acc_seg: 95.9672, loss: 0.5457
2023-05-03 23:36:15,701 - mmseg - INFO - Iter [9550/10000]	lr: 6.158e-04, eta: 0:05:05, time: 0.683, data_time: 0.285, memory: 18289, decode.loss_ce: 0.0519, decode.acc_seg: 97.1809, aux_0.loss_ce: 0.0532, aux_0.acc_seg: 97.1588, aux_1.loss_ce: 0.0646, aux_1.acc_seg: 96.5170, aux_2.loss_ce: 0.1150, aux_2.loss_dice: 0.2479, aux_2.acc_seg: 96.1126, loss: 0.5327
2023-05-03 23:36:46,831 - mmseg - INFO - Iter [9600/10000]	lr: 5.541e-04, eta: 0:04:31, time: 0.623, data_time: 0.210, memory: 18289, decode.loss_ce: 0.0530, decode.acc_seg: 97.1457, aux_0.loss_ce: 0.0542, aux_0.acc_seg: 97.1244, aux_1.loss_ce: 0.0662, aux_1.acc_seg: 96.4692, aux_2.loss_ce: 0.1165, aux_2.loss_dice: 0.2474, aux_2.acc_seg: 96.0220, loss: 0.5373
2023-05-03 23:37:17,689 - mmseg - INFO - Iter [9650/10000]	lr: 4.916e-04, eta: 0:03:57, time: 0.617, data_time: 0.214, memory: 18289, decode.loss_ce: 0.0511, decode.acc_seg: 97.2157, aux_0.loss_ce: 0.0523, aux_0.acc_seg: 97.1894, aux_1.loss_ce: 0.0642, aux_1.acc_seg: 96.5384, aux_2.loss_ce: 0.1159, aux_2.loss_dice: 0.2462, aux_2.acc_seg: 96.0569, loss: 0.5297
2023-05-03 23:37:48,050 - mmseg - INFO - Iter [9700/10000]	lr: 4.282e-04, eta: 0:03:23, time: 0.607, data_time: 0.205, memory: 18289, decode.loss_ce: 0.0532, decode.acc_seg: 97.1148, aux_0.loss_ce: 0.0545, aux_0.acc_seg: 97.0924, aux_1.loss_ce: 0.0667, aux_1.acc_seg: 96.4214, aux_2.loss_ce: 0.1180, aux_2.loss_dice: 0.2482, aux_2.acc_seg: 95.9448, loss: 0.5406
2023-05-03 23:38:22,469 - mmseg - INFO - Iter [9750/10000]	lr: 3.638e-04, eta: 0:02:49, time: 0.688, data_time: 0.283, memory: 18289, decode.loss_ce: 0.0527, decode.acc_seg: 97.1151, aux_0.loss_ce: 0.0539, aux_0.acc_seg: 97.0982, aux_1.loss_ce: 0.0656, aux_1.acc_seg: 96.4356, aux_2.loss_ce: 0.1158, aux_2.loss_dice: 0.2479, aux_2.acc_seg: 96.0892, loss: 0.5359
2023-05-03 23:38:54,419 - mmseg - INFO - Iter [9800/10000]	lr: 2.981e-04, eta: 0:02:15, time: 0.639, data_time: 0.227, memory: 18289, decode.loss_ce: 0.0540, decode.acc_seg: 97.0907, aux_0.loss_ce: 0.0553, aux_0.acc_seg: 97.0686, aux_1.loss_ce: 0.0673, aux_1.acc_seg: 96.4112, aux_2.loss_ce: 0.1185, aux_2.loss_dice: 0.2502, aux_2.acc_seg: 95.9953, loss: 0.5453
2023-05-03 23:39:26,411 - mmseg - INFO - Iter [9850/10000]	lr: 2.306e-04, eta: 0:01:41, time: 0.640, data_time: 0.223, memory: 18289, decode.loss_ce: 0.0528, decode.acc_seg: 97.1493, aux_0.loss_ce: 0.0541, aux_0.acc_seg: 97.1217, aux_1.loss_ce: 0.0663, aux_1.acc_seg: 96.4574, aux_2.loss_ce: 0.1178, aux_2.loss_dice: 0.2481, aux_2.acc_seg: 95.9921, loss: 0.5392
2023-05-03 23:39:58,666 - mmseg - INFO - Iter [9900/10000]	lr: 1.609e-04, eta: 0:01:07, time: 0.645, data_time: 0.222, memory: 18289, decode.loss_ce: 0.0526, decode.acc_seg: 97.1429, aux_0.loss_ce: 0.0539, aux_0.acc_seg: 97.1232, aux_1.loss_ce: 0.0657, aux_1.acc_seg: 96.4711, aux_2.loss_ce: 0.1160, aux_2.loss_dice: 0.2474, aux_2.acc_seg: 96.0671, loss: 0.5356
2023-05-03 23:40:35,113 - mmseg - INFO - Iter [9950/10000]	lr: 8.745e-05, eta: 0:00:33, time: 0.729, data_time: 0.313, memory: 18289, decode.loss_ce: 0.0526, decode.acc_seg: 97.1777, aux_0.loss_ce: 0.0539, aux_0.acc_seg: 97.1626, aux_1.loss_ce: 0.0657, aux_1.acc_seg: 96.5062, aux_2.loss_ce: 0.1150, aux_2.loss_dice: 0.2475, aux_2.acc_seg: 96.1159, loss: 0.5348
2023-05-03 23:41:06,421 - mmseg - INFO - Saving checkpoint at 10000 iterations
2023-05-03 23:41:06,920 - mmseg - INFO - Exp name: stdc1_1x16_720x960_10k_camvid.py
2023-05-03 23:41:06,921 - mmseg - INFO - Iter [10000/10000]	lr: 3.512e-06, eta: 0:00:00, time: 0.639, data_time: 0.209, memory: 18289, decode.loss_ce: 0.0532, decode.acc_seg: 97.1346, aux_0.loss_ce: 0.0544, aux_0.acc_seg: 97.1149, aux_1.loss_ce: 0.0667, aux_1.acc_seg: 96.4408, aux_2.loss_ce: 0.1168, aux_2.loss_dice: 0.2486, aux_2.acc_seg: 96.0367, loss: 0.5397
2023-05-03 23:41:15,433 - mmseg - INFO - per class results:
2023-05-03 23:41:15,434 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 86.34 | 94.87 |
|   Building  | 92.58 | 94.27 |
|     Car     | 93.63 | 95.45 |
| Column_Pole | 26.48 | 32.17 |
|    Fence    | 80.91 |  95.2 |
|  Pedestrian | 68.15 | 83.27 |
|     Road    |  97.8 | 98.71 |
|   Sidewalk  | 92.68 | 97.03 |
|  SignSymbol |  0.29 |  0.29 |
|     Sky     | 93.77 |  97.2 |
|     Tree    | 92.16 | 97.87 |
+-------------+-------+-------+
2023-05-03 23:41:15,434 - mmseg - INFO - Summary:
2023-05-03 23:41:15,435 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 96.26 | 74.98 | 80.57 |
+-------+-------+-------+
2023-05-03 23:41:15,435 - mmseg - INFO - Exp name: stdc1_1x16_720x960_10k_camvid.py
2023-05-03 23:41:15,435 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9626, mIoU: 0.7498, mAcc: 0.8057, IoU.Bicyclist: 0.8634, IoU.Building: 0.9258, IoU.Car: 0.9363, IoU.Column_Pole: 0.2648, IoU.Fence: 0.8091, IoU.Pedestrian: 0.6815, IoU.Road: 0.9780, IoU.Sidewalk: 0.9268, IoU.SignSymbol: 0.0029, IoU.Sky: 0.9377, IoU.Tree: 0.9216, Acc.Bicyclist: 0.9487, Acc.Building: 0.9427, Acc.Car: 0.9545, Acc.Column_Pole: 0.3217, Acc.Fence: 0.9520, Acc.Pedestrian: 0.8327, Acc.Road: 0.9871, Acc.Sidewalk: 0.9703, Acc.SignSymbol: 0.0029, Acc.Sky: 0.9720, Acc.Tree: 0.9787
