2023-05-04 16:07:23,047 - mmseg - INFO - Multi-processing start method is `None`
2023-05-04 16:07:23,049 - mmseg - INFO - OpenCV num_threads is `96
2023-05-04 16:07:23,124 - mmseg - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.16 (default, Mar  2 2023, 03:21:46) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 3090
CUDA_HOME: None
GCC: gcc (Ubuntu 11.3.0-1ubuntu1~22.04) 11.3.0
PyTorch: 1.12.1+cu113
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86
  - CuDNN 8.3.2  (built against CUDA 11.5)
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.3.2, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.12.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.13.1+cu113
OpenCV: 4.7.0
MMCV: 1.7.0
MMCV Compiler: GCC 9.3
MMCV CUDA Compiler: 11.3
MMSegmentation: 0.30.0+e7ed570
------------------------------------------------------------

2023-05-04 16:07:23,125 - mmseg - INFO - Distributed training: False
2023-05-04 16:07:24,364 - mmseg - INFO - Config:
norm_cfg = dict(type='BN', requires_grad=True)
model = dict(
    type='EncoderDecoder',
    pretrained=None,
    backbone=dict(
        type='STDCDeTextNet',
        backbone_cfg=dict(
            type='STDCNet',
            stdc_type='STDCNet1',
            in_channels=3,
            channels=(32, 64, 256, 512, 1024),
            bottleneck_type='cat',
            num_convs=4,
            norm_cfg=dict(type='BN', requires_grad=True),
            act_cfg=dict(type='ReLU'),
            with_final_conv=False,
            init_cfg=dict(
                type='Pretrained',
                checkpoint=
                'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth'
            )),
        last_in_channels=(1024, 512),
        out_channels=128,
        ffm_cfg=dict(in_channels=384, out_channels=256, scale_factor=4),
        text_embeddings='./pretrained/textfeat_camvid_11_RN50_1024.pth'),
    decode_head=dict(
        type='FCNHead',
        in_channels=267,
        channels=256,
        num_convs=1,
        num_classes=19,
        in_index=3,
        concat_input=False,
        dropout_ratio=0.1,
        norm_cfg=dict(type='BN', requires_grad=True),
        align_corners=True,
        sampler=dict(type='OHEMPixelSampler', thresh=0.7, min_kept=690000),
        loss_decode=dict(
            type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
    auxiliary_head=[
        dict(
            type='FCNHead',
            in_channels=128,
            channels=64,
            num_convs=1,
            num_classes=11,
            in_index=2,
            norm_cfg=dict(type='BN', requires_grad=True),
            concat_input=False,
            align_corners=False,
            sampler=dict(type='OHEMPixelSampler', thresh=0.7, min_kept=690000),
            loss_decode=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
        dict(
            type='FCNHead',
            in_channels=128,
            channels=64,
            num_convs=1,
            num_classes=11,
            in_index=1,
            norm_cfg=dict(type='BN', requires_grad=True),
            concat_input=False,
            align_corners=False,
            sampler=dict(type='OHEMPixelSampler', thresh=0.7, min_kept=690000),
            loss_decode=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0)),
        dict(
            type='STDCHead',
            in_channels=256,
            channels=64,
            num_convs=1,
            num_classes=2,
            boundary_threshold=0.1,
            in_index=0,
            norm_cfg=dict(type='BN', requires_grad=True),
            concat_input=False,
            align_corners=True,
            loss_decode=[
                dict(
                    type='CrossEntropyLoss',
                    loss_name='loss_ce',
                    use_sigmoid=True,
                    loss_weight=1.0),
                dict(type='DiceLoss', loss_name='loss_dice', loss_weight=1.0)
            ]),
        dict(
            type='VanillaHead',
            temperature=0.07,
            in_channels=11,
            channels=1,
            num_classes=11,
            in_index=4,
            sampler=dict(type='OHEMPixelSampler', thresh=0.7, min_kept=690000),
            loss_decode=dict(
                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0))
    ],
    train_cfg=dict(),
    test_cfg=dict(mode='whole'))
dataset_type = 'CamVidDataset'
data_root = 'data/CamVid/'
img_norm_cfg = dict(
    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)
crop_size = (720, 960)
train_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(
        type='Resize',
        img_scale=(960, 720),
        ratio_range=(0.5, 2.5),
        scale_step_size=0.25),
    dict(type='RandomCrop', crop_size=(720, 960), cat_max_ratio=0.75),
    dict(type='RandomFlip', prob=0.5),
    dict(type='PhotoMetricDistortion'),
    dict(
        type='Normalize',
        mean=[123.675, 116.28, 103.53],
        std=[58.395, 57.12, 57.375],
        to_rgb=True),
    dict(type='Pad', size=(720, 960), pad_val=0, seg_pad_val=255),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_semantic_seg'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(960, 720),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=16,
    workers_per_gpu=4,
    train=dict(
        type='CamVidDataset',
        data_root='data/CamVid/',
        img_dir='train',
        ann_dir='train_labelIds',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(type='LoadAnnotations'),
            dict(
                type='Resize',
                img_scale=(960, 720),
                ratio_range=(0.5, 2.5),
                scale_step_size=0.25),
            dict(type='RandomCrop', crop_size=(720, 960), cat_max_ratio=0.75),
            dict(type='RandomFlip', prob=0.5),
            dict(type='PhotoMetricDistortion'),
            dict(
                type='Normalize',
                mean=[123.675, 116.28, 103.53],
                std=[58.395, 57.12, 57.375],
                to_rgb=True),
            dict(type='Pad', size=(720, 960), pad_val=0, seg_pad_val=255),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_semantic_seg'])
        ]),
    val=dict(
        type='CamVidDataset',
        data_root='data/CamVid/',
        img_dir='val',
        ann_dir='val_labelIds',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(960, 720),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CamVidDataset',
        data_root='data/CamVid/',
        img_dir='val',
        ann_dir='val_labelIds',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(960, 720),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[123.675, 116.28, 103.53],
                        std=[58.395, 57.12, 57.375],
                        to_rgb=True),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
log_config = dict(
    interval=50, hooks=[dict(type='TextLoggerHook', by_epoch=False)])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
cudnn_benchmark = True
optimizer = dict(
    type='SGD',
    lr=0.1,
    momentum=0.9,
    weight_decay=0.0005,
    paramwise_cfg=dict(
        custom_keys=dict(
            {
                'backbone.backbone': dict(lr_mult=0.1),
                'backbone.text_encoder': dict(lr_mult=0.0, decay_mult=0.0),
                '.bn.': dict(decay_mult=0.0)
            })))
optimizer_config = dict()
lr_config = dict(
    policy='poly',
    power=0.9,
    min_lr=1e-06,
    by_epoch=False,
    warmup='linear',
    warmup_iters=200,
    warmup_ratio=1e-05)
runner = dict(type='IterBasedRunner', max_iters=10000)
checkpoint_config = dict(by_epoch=False, interval=1000)
evaluation = dict(interval=1000, metric='mIoU', pre_eval=True)
checkpoint = 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth'
work_dir = './work_dirs/detextnet_stdc1_1x16_720x960_10k_camvid'
gpu_ids = [0]
auto_resume = False

2023-05-04 16:07:24,365 - mmseg - INFO - Set random seed to 954616059, deterministic: False
2023-05-04 16:07:24,375 - mmseg - INFO - Loaded 367 images
2023-05-04 16:07:25,966 - mmseg - INFO - initialize STDCNet with init_cfg {'type': 'Pretrained', 'checkpoint': 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth'}
2023-05-04 16:07:27,186 - mmseg - INFO - initialize FCNHead with init_cfg {'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
Name of parameter - Initialization information

backbone.text_embeddings - torch.Size([11, 1024]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.backbone.stages.0.conv.weight - torch.Size([32, 3, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.0.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.0.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.1.conv.weight - torch.Size([64, 32, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.1.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.0.conv.weight - torch.Size([128, 64, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.0.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.0.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.1.conv.weight - torch.Size([64, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.1.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.2.conv.weight - torch.Size([32, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.2.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.2.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.3.conv.weight - torch.Size([32, 32, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.3.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.layers.3.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.downsample.conv.weight - torch.Size([128, 1, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.downsample.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.0.downsample.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.0.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.0.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.0.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.1.conv.weight - torch.Size([64, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.1.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.1.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.2.conv.weight - torch.Size([32, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.2.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.2.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.3.conv.weight - torch.Size([32, 32, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.3.bn.weight - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.2.1.layers.3.bn.bias - torch.Size([32]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.0.conv.weight - torch.Size([256, 256, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.0.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.0.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.1.conv.weight - torch.Size([128, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.1.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.1.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.2.conv.weight - torch.Size([64, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.2.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.2.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.3.conv.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.3.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.layers.3.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.downsample.conv.weight - torch.Size([256, 1, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.downsample.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.0.downsample.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.0.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.0.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.0.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.1.conv.weight - torch.Size([128, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.1.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.1.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.2.conv.weight - torch.Size([64, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.2.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.2.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.3.conv.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.3.bn.weight - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.3.1.layers.3.bn.bias - torch.Size([64]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.0.conv.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.0.bn.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.0.bn.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.1.conv.weight - torch.Size([256, 512, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.1.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.1.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.2.conv.weight - torch.Size([128, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.2.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.2.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.3.conv.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.3.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.layers.3.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.downsample.conv.weight - torch.Size([512, 1, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.downsample.bn.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.0.downsample.bn.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.0.conv.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.0.bn.weight - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.0.bn.bias - torch.Size([512]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.1.conv.weight - torch.Size([256, 512, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.1.bn.weight - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.1.bn.bias - torch.Size([256]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.2.conv.weight - torch.Size([128, 256, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.2.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.2.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.3.conv.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.3.bn.weight - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.backbone.stages.4.1.layers.3.bn.bias - torch.Size([128]): 
PretrainedInit: load from https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth 

backbone.arms.0.conv_layer.conv.weight - torch.Size([128, 1024, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.arms.0.conv_layer.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.0.conv_layer.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.0.atten_conv_layer.1.conv.weight - torch.Size([128, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.0.atten_conv_layer.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.0.atten_conv_layer.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.conv_layer.conv.weight - torch.Size([128, 512, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.arms.1.conv_layer.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.conv_layer.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.atten_conv_layer.1.conv.weight - torch.Size([128, 128, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.atten_conv_layer.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.arms.1.atten_conv_layer.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.convs.0.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.convs.0.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.convs.0.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.convs.1.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.convs.1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.convs.1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.conv_avg.conv.weight - torch.Size([128, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.conv_avg.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.conv_avg.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.ffm.conv0.conv.weight - torch.Size([256, 384, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.ffm.conv0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.ffm.conv0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.ffm.attention.1.conv.weight - torch.Size([64, 256, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

backbone.ffm.attention.2.conv.weight - torch.Size([256, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.conv_seg.weight - torch.Size([19, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.conv_seg.bias - torch.Size([19]): 
NormalInit: mean=0, std=0.01, bias=0 

decode_head.convs.0.conv.weight - torch.Size([256, 267, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.0.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

decode_head.convs.0.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.conv_seg.weight - torch.Size([11, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.conv_seg.bias - torch.Size([11]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.convs.0.conv.weight - torch.Size([64, 128, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.convs.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.0.convs.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.conv_seg.weight - torch.Size([11, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.conv_seg.bias - torch.Size([11]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.convs.0.conv.weight - torch.Size([64, 128, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.convs.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.1.convs.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.fusion_kernel - torch.Size([1, 3, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.conv_seg.weight - torch.Size([2, 64, 1, 1]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.conv_seg.bias - torch.Size([2]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.convs.0.conv.weight - torch.Size([64, 256, 3, 3]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.convs.0.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  

auxiliary_head.2.convs.0.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of EncoderDecoder  
2023-05-04 16:07:27,195 - mmseg - INFO - EncoderDecoder(
  (backbone): STDCDeTextNet(
    (backbone): STDCNet(
      (stages): ModuleList(
        (0): ConvModule(
          (conv): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (1): ConvModule(
          (conv): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (2): Sequential(
          (0): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
            (downsample): ConvModule(
              (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
              (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (skip): AvgPool2d(kernel_size=3, stride=2, padding=1)
          )
          (1): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
          )
        )
        (3): Sequential(
          (0): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
            (downsample): ConvModule(
              (conv): Conv2d(256, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=256, bias=False)
              (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (skip): AvgPool2d(kernel_size=3, stride=2, padding=1)
          )
          (1): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
          )
        )
        (4): Sequential(
          (0): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
            (downsample): ConvModule(
              (conv): Conv2d(512, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=512, bias=False)
              (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
            (skip): AvgPool2d(kernel_size=3, stride=2, padding=1)
          )
          (1): STDCModule(
            (layers): ModuleList(
              (0): ConvModule(
                (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                (bn): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (1): ConvModule(
                (conv): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (2): ConvModule(
                (conv): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
              (3): ConvModule(
                (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (activate): ReLU(inplace=True)
              )
            )
          )
        )
      )
    )
    init_cfg={'type': 'Pretrained', 'checkpoint': 'https://download.openmmlab.com/mmsegmentation/v0.5/pretrain/stdc/stdc1_20220308-5368626c.pth'}
    (arms): ModuleList(
      (0): AttentionRefinementModule(
        (conv_layer): ConvModule(
          (conv): Conv2d(1024, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (atten_conv_layer): Sequential(
          (0): AdaptiveAvgPool2d(output_size=(1, 1))
          (1): ConvModule(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): Sigmoid()
        )
      )
      (1): AttentionRefinementModule(
        (conv_layer): ConvModule(
          (conv): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
        (atten_conv_layer): Sequential(
          (0): AdaptiveAvgPool2d(output_size=(1, 1))
          (1): ConvModule(
            (conv): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
          (2): Sigmoid()
        )
      )
    )
    (convs): ModuleList(
      (0): ConvModule(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
      (1): ConvModule(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
    (conv_avg): ConvModule(
      (conv): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (activate): ReLU(inplace=True)
    )
    (ffm): FeatureFusionModule(
      (conv0): ConvModule(
        (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
      (attention): Sequential(
        (0): AdaptiveAvgPool2d(output_size=(1, 1))
        (1): ConvModule(
          (conv): Conv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (activate): ReLU(inplace=True)
        )
        (2): ConvModule(
          (conv): Conv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
        )
        (3): Sigmoid()
      )
    )
  )
  (decode_head): FCNHead(
    input_transform=None, ignore_index=255, align_corners=True
    (loss_decode): CrossEntropyLoss(avg_non_ignore=False)
    (conv_seg): Conv2d(256, 19, kernel_size=(1, 1), stride=(1, 1))
    (dropout): Dropout2d(p=0.1, inplace=False)
    (convs): Sequential(
      (0): ConvModule(
        (conv): Conv2d(267, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU(inplace=True)
      )
    )
  )
  init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
  (auxiliary_head): ModuleList(
    (0): FCNHead(
      input_transform=None, ignore_index=255, align_corners=False
      (loss_decode): CrossEntropyLoss(avg_non_ignore=False)
      (conv_seg): Conv2d(64, 11, kernel_size=(1, 1), stride=(1, 1))
      (dropout): Dropout2d(p=0.1, inplace=False)
      (convs): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
    init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
    (1): FCNHead(
      input_transform=None, ignore_index=255, align_corners=False
      (loss_decode): CrossEntropyLoss(avg_non_ignore=False)
      (conv_seg): Conv2d(64, 11, kernel_size=(1, 1), stride=(1, 1))
      (dropout): Dropout2d(p=0.1, inplace=False)
      (convs): Sequential(
        (0): ConvModule(
          (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
    init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
    (2): STDCHead(
      input_transform=None, ignore_index=255, align_corners=True
      (loss_decode): ModuleList(
        (0): CrossEntropyLoss(avg_non_ignore=False)
        (1): DiceLoss()
      )
      (conv_seg): Conv2d(64, 2, kernel_size=(1, 1), stride=(1, 1))
      (dropout): Dropout2d(p=0.1, inplace=False)
      (convs): Sequential(
        (0): ConvModule(
          (conv): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (activate): ReLU(inplace=True)
        )
      )
    )
    init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
    (3): VanillaHead(
      input_transform=None, ignore_index=255, align_corners=False
      (loss_decode): CrossEntropyLoss(avg_non_ignore=False)
      (conv_seg): None
      (dropout): Dropout2d(p=0.1, inplace=False)
    )
    init_cfg={'type': 'Normal', 'std': 0.01, 'override': {'name': 'conv_seg'}}
  )
)
2023-05-04 16:07:30,326 - mmseg - INFO - Loaded 101 images
2023-05-04 16:07:30,328 - mmseg - INFO - Start running, host: linchiayi@cml9, work_dir: /tmp2/linchiayi/mmsegmentation/work_dirs/detextnet_stdc1_1x16_720x960_10k_camvid
2023-05-04 16:07:30,328 - mmseg - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2023-05-04 16:07:30,329 - mmseg - INFO - workflow: [('train', 1)], max: 10000 iters
2023-05-04 16:07:30,329 - mmseg - INFO - Checkpoints will be saved to /tmp2/linchiayi/mmsegmentation/work_dirs/detextnet_stdc1_1x16_720x960_10k_camvid by HardDiskBackend.
2023-05-04 16:08:24,909 - mmseg - INFO - Iter [50/10000]	lr: 2.439e-02, eta: 2:59:05, time: 1.080, data_time: 0.270, memory: 14751, decode.loss_ce: 1.3304, decode.acc_seg: 49.7389, aux_0.loss_ce: 1.3219, aux_0.acc_seg: 42.6744, aux_1.loss_ce: 1.3997, aux_1.acc_seg: 37.8286, aux_2.loss_ce: 0.3136, aux_2.loss_dice: 0.4908, aux_2.acc_seg: 93.5570, aux_3.loss_ce: 1.8535, aux_3.acc_seg: 4.6670, loss: 6.7100
2023-05-04 16:09:09,034 - mmseg - INFO - Iter [100/10000]	lr: 4.906e-02, eta: 2:41:51, time: 0.882, data_time: 0.228, memory: 14751, decode.loss_ce: 0.4880, decode.acc_seg: 80.2623, aux_0.loss_ce: 0.4967, aux_0.acc_seg: 80.6052, aux_1.loss_ce: 0.5431, aux_1.acc_seg: 78.8896, aux_2.loss_ce: 0.1639, aux_2.loss_dice: 0.4444, aux_2.acc_seg: 95.8179, aux_3.loss_ce: 1.6113, aux_3.acc_seg: 48.5892, loss: 3.7474
2023-05-04 16:09:53,720 - mmseg - INFO - Iter [150/10000]	lr: 7.350e-02, eta: 2:36:16, time: 0.894, data_time: 0.242, memory: 14751, decode.loss_ce: 0.3354, decode.acc_seg: 85.9951, aux_0.loss_ce: 0.3428, aux_0.acc_seg: 85.9828, aux_1.loss_ce: 0.3618, aux_1.acc_seg: 85.3799, aux_2.loss_ce: 0.1465, aux_2.loss_dice: 0.3231, aux_2.acc_seg: 95.9615, aux_3.loss_ce: 1.2176, aux_3.acc_seg: 80.5330, loss: 2.7272
2023-05-04 16:10:42,058 - mmseg - INFO - Iter [200/10000]	lr: 9.772e-02, eta: 2:36:04, time: 0.966, data_time: 0.315, memory: 14751, decode.loss_ce: 0.2958, decode.acc_seg: 87.9845, aux_0.loss_ce: 0.3039, aux_0.acc_seg: 87.7919, aux_1.loss_ce: 0.3245, aux_1.acc_seg: 87.1235, aux_2.loss_ce: 0.1384, aux_2.loss_dice: 0.3082, aux_2.acc_seg: 95.9812, aux_3.loss_ce: 0.9819, aux_3.acc_seg: 83.7753, loss: 2.3526
2023-05-04 16:11:21,565 - mmseg - INFO - Iter [250/10000]	lr: 9.776e-02, eta: 2:29:57, time: 0.792, data_time: 0.222, memory: 14751, decode.loss_ce: 0.2757, decode.acc_seg: 88.5832, aux_0.loss_ce: 0.2815, aux_0.acc_seg: 88.5211, aux_1.loss_ce: 0.3061, aux_1.acc_seg: 87.5696, aux_2.loss_ce: 0.1364, aux_2.loss_dice: 0.2989, aux_2.acc_seg: 95.9886, aux_3.loss_ce: 0.8428, aux_3.acc_seg: 85.7909, loss: 2.1414
2023-05-04 16:11:57,852 - mmseg - INFO - Iter [300/10000]	lr: 9.730e-02, eta: 2:23:52, time: 0.726, data_time: 0.234, memory: 14751, decode.loss_ce: 0.2340, decode.acc_seg: 90.1257, aux_0.loss_ce: 0.2411, aux_0.acc_seg: 89.9582, aux_1.loss_ce: 0.2698, aux_1.acc_seg: 89.0130, aux_2.loss_ce: 0.1351, aux_2.loss_dice: 0.2944, aux_2.acc_seg: 96.0087, aux_3.loss_ce: 0.7572, aux_3.acc_seg: 87.4135, loss: 1.9316
2023-05-04 16:12:33,542 - mmseg - INFO - Iter [350/10000]	lr: 9.685e-02, eta: 2:19:05, time: 0.714, data_time: 0.219, memory: 14751, decode.loss_ce: 0.1905, decode.acc_seg: 91.6463, aux_0.loss_ce: 0.2008, aux_0.acc_seg: 91.3279, aux_1.loss_ce: 0.2299, aux_1.acc_seg: 90.3085, aux_2.loss_ce: 0.1333, aux_2.loss_dice: 0.2875, aux_2.acc_seg: 96.0168, aux_3.loss_ce: 0.6639, aux_3.acc_seg: 88.6196, loss: 1.7059
2023-05-04 16:13:13,671 - mmseg - INFO - Iter [400/10000]	lr: 9.640e-02, eta: 2:17:07, time: 0.803, data_time: 0.314, memory: 14751, decode.loss_ce: 0.1850, decode.acc_seg: 91.9055, aux_0.loss_ce: 0.1930, aux_0.acc_seg: 91.6287, aux_1.loss_ce: 0.2205, aux_1.acc_seg: 90.6722, aux_2.loss_ce: 0.1344, aux_2.loss_dice: 0.2876, aux_2.acc_seg: 95.9443, aux_3.loss_ce: 0.6258, aux_3.acc_seg: 89.1761, loss: 1.6462
2023-05-04 16:13:49,056 - mmseg - INFO - Iter [450/10000]	lr: 9.595e-02, eta: 2:13:46, time: 0.708, data_time: 0.207, memory: 14751, decode.loss_ce: 0.2096, decode.acc_seg: 91.0519, aux_0.loss_ce: 0.2121, aux_0.acc_seg: 90.8971, aux_1.loss_ce: 0.2417, aux_1.acc_seg: 89.9909, aux_2.loss_ce: 0.1361, aux_2.loss_dice: 0.2889, aux_2.acc_seg: 95.9650, aux_3.loss_ce: 0.6230, aux_3.acc_seg: 88.6839, loss: 1.7114
2023-05-04 16:14:24,555 - mmseg - INFO - Iter [500/10000]	lr: 9.550e-02, eta: 2:11:00, time: 0.710, data_time: 0.221, memory: 14751, decode.loss_ce: 0.1886, decode.acc_seg: 91.5283, aux_0.loss_ce: 0.1933, aux_0.acc_seg: 91.3480, aux_1.loss_ce: 0.2247, aux_1.acc_seg: 90.3657, aux_2.loss_ce: 0.1315, aux_2.loss_dice: 0.2839, aux_2.acc_seg: 96.0437, aux_3.loss_ce: 0.5764, aux_3.acc_seg: 89.2432, loss: 1.5985
2023-05-04 16:14:59,364 - mmseg - INFO - Iter [550/10000]	lr: 9.505e-02, eta: 2:08:26, time: 0.696, data_time: 0.209, memory: 14751, decode.loss_ce: 0.1754, decode.acc_seg: 92.3442, aux_0.loss_ce: 0.1814, aux_0.acc_seg: 92.1182, aux_1.loss_ce: 0.2105, aux_1.acc_seg: 91.0951, aux_2.loss_ce: 0.1318, aux_2.loss_dice: 0.2824, aux_2.acc_seg: 96.0225, aux_3.loss_ce: 0.5669, aux_3.acc_seg: 89.7188, loss: 1.5485
2023-05-04 16:15:39,350 - mmseg - INFO - Iter [600/10000]	lr: 9.459e-02, eta: 2:07:33, time: 0.800, data_time: 0.299, memory: 14751, decode.loss_ce: 0.1752, decode.acc_seg: 92.3982, aux_0.loss_ce: 0.1793, aux_0.acc_seg: 92.2356, aux_1.loss_ce: 0.2068, aux_1.acc_seg: 91.2522, aux_2.loss_ce: 0.1309, aux_2.loss_dice: 0.2791, aux_2.acc_seg: 95.9998, aux_3.loss_ce: 0.5543, aux_3.acc_seg: 89.6989, loss: 1.5257
2023-05-04 16:16:14,615 - mmseg - INFO - Iter [650/10000]	lr: 9.414e-02, eta: 2:05:34, time: 0.705, data_time: 0.223, memory: 14751, decode.loss_ce: 0.1536, decode.acc_seg: 92.9259, aux_0.loss_ce: 0.1578, aux_0.acc_seg: 92.7857, aux_1.loss_ce: 0.1889, aux_1.acc_seg: 91.6884, aux_2.loss_ce: 0.1299, aux_2.loss_dice: 0.2772, aux_2.acc_seg: 95.9960, aux_3.loss_ce: 0.5185, aux_3.acc_seg: 90.3715, loss: 1.4260
2023-05-04 16:16:50,533 - mmseg - INFO - Iter [700/10000]	lr: 9.369e-02, eta: 2:03:55, time: 0.718, data_time: 0.218, memory: 14751, decode.loss_ce: 0.1498, decode.acc_seg: 93.2488, aux_0.loss_ce: 0.1556, aux_0.acc_seg: 93.0511, aux_1.loss_ce: 0.1868, aux_1.acc_seg: 91.9960, aux_2.loss_ce: 0.1314, aux_2.loss_dice: 0.2782, aux_2.acc_seg: 95.9415, aux_3.loss_ce: 0.5123, aux_3.acc_seg: 90.4149, loss: 1.4141
2023-05-04 16:17:29,807 - mmseg - INFO - Iter [750/10000]	lr: 9.323e-02, eta: 2:03:07, time: 0.786, data_time: 0.294, memory: 14751, decode.loss_ce: 0.1366, decode.acc_seg: 93.6855, aux_0.loss_ce: 0.1420, aux_0.acc_seg: 93.4668, aux_1.loss_ce: 0.1732, aux_1.acc_seg: 92.3327, aux_2.loss_ce: 0.1284, aux_2.loss_dice: 0.2757, aux_2.acc_seg: 96.0633, aux_3.loss_ce: 0.4916, aux_3.acc_seg: 90.8044, loss: 1.3475
2023-05-04 16:18:05,440 - mmseg - INFO - Iter [800/10000]	lr: 9.278e-02, eta: 2:01:37, time: 0.713, data_time: 0.213, memory: 14751, decode.loss_ce: 0.1432, decode.acc_seg: 93.3944, aux_0.loss_ce: 0.1493, aux_0.acc_seg: 93.1514, aux_1.loss_ce: 0.1755, aux_1.acc_seg: 92.2261, aux_2.loss_ce: 0.1286, aux_2.loss_dice: 0.2743, aux_2.acc_seg: 96.0268, aux_3.loss_ce: 0.4907, aux_3.acc_seg: 90.6243, loss: 1.3616
2023-05-04 16:18:40,201 - mmseg - INFO - Iter [850/10000]	lr: 9.233e-02, eta: 2:00:05, time: 0.695, data_time: 0.213, memory: 14751, decode.loss_ce: 0.1351, decode.acc_seg: 93.7324, aux_0.loss_ce: 0.1402, aux_0.acc_seg: 93.5003, aux_1.loss_ce: 0.1679, aux_1.acc_seg: 92.4756, aux_2.loss_ce: 0.1265, aux_2.loss_dice: 0.2722, aux_2.acc_seg: 96.0617, aux_3.loss_ce: 0.4709, aux_3.acc_seg: 90.9407, loss: 1.3128
2023-05-04 16:19:14,804 - mmseg - INFO - Iter [900/10000]	lr: 9.187e-02, eta: 1:58:37, time: 0.692, data_time: 0.208, memory: 14751, decode.loss_ce: 0.1313, decode.acc_seg: 93.8414, aux_0.loss_ce: 0.1362, aux_0.acc_seg: 93.6264, aux_1.loss_ce: 0.1639, aux_1.acc_seg: 92.6033, aux_2.loss_ce: 0.1253, aux_2.loss_dice: 0.2711, aux_2.acc_seg: 96.1036, aux_3.loss_ce: 0.4584, aux_3.acc_seg: 91.1417, loss: 1.2863
2023-05-04 16:19:54,053 - mmseg - INFO - Iter [950/10000]	lr: 9.142e-02, eta: 1:57:59, time: 0.785, data_time: 0.294, memory: 14751, decode.loss_ce: 0.1591, decode.acc_seg: 93.0783, aux_0.loss_ce: 0.1625, aux_0.acc_seg: 92.9250, aux_1.loss_ce: 0.1879, aux_1.acc_seg: 91.9982, aux_2.loss_ce: 0.1309, aux_2.loss_dice: 0.2762, aux_2.acc_seg: 95.9679, aux_3.loss_ce: 0.4890, aux_3.acc_seg: 90.6014, loss: 1.4055
2023-05-04 16:20:32,132 - mmseg - INFO - Saving checkpoint at 1000 iterations
2023-05-04 16:20:32,640 - mmseg - INFO - Exp name: detextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 16:20:32,640 - mmseg - INFO - Iter [1000/10000]	lr: 9.096e-02, eta: 1:57:17, time: 0.775, data_time: 0.211, memory: 14751, decode.loss_ce: 0.1382, decode.acc_seg: 93.5805, aux_0.loss_ce: 0.1427, aux_0.acc_seg: 93.4096, aux_1.loss_ce: 0.1689, aux_1.acc_seg: 92.4057, aux_2.loss_ce: 0.1250, aux_2.loss_dice: 0.2698, aux_2.acc_seg: 96.1352, aux_3.loss_ce: 0.4612, aux_3.acc_seg: 90.9093, loss: 1.3058
2023-05-04 16:20:48,128 - mmseg - INFO - per class results:
2023-05-04 16:20:48,130 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 59.35 | 61.75 |
|   Building  | 90.46 | 92.28 |
|     Car     | 91.33 | 94.11 |
| Column_Pole | 20.43 | 28.34 |
|    Fence    | 66.03 | 94.55 |
|  Pedestrian | 31.54 | 83.46 |
|     Road    | 96.62 | 97.96 |
|   Sidewalk  | 87.57 | 96.58 |
|  SignSymbol |  0.0  |  0.0  |
|     Sky     |  94.1 | 96.37 |
|     Tree    | 92.62 | 96.23 |
+-------------+-------+-------+
2023-05-04 16:20:48,130 - mmseg - INFO - Summary:
2023-05-04 16:20:48,131 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 94.27 | 66.37 | 76.51 |
+-------+-------+-------+
2023-05-04 16:20:48,131 - mmseg - INFO - Exp name: detextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 16:20:48,131 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9427, mIoU: 0.6637, mAcc: 0.7651, IoU.Bicyclist: 0.5935, IoU.Building: 0.9046, IoU.Car: 0.9133, IoU.Column_Pole: 0.2043, IoU.Fence: 0.6603, IoU.Pedestrian: 0.3154, IoU.Road: 0.9662, IoU.Sidewalk: 0.8757, IoU.SignSymbol: 0.0000, IoU.Sky: 0.9410, IoU.Tree: 0.9262, Acc.Bicyclist: 0.6175, Acc.Building: 0.9228, Acc.Car: 0.9411, Acc.Column_Pole: 0.2834, Acc.Fence: 0.9455, Acc.Pedestrian: 0.8346, Acc.Road: 0.9796, Acc.Sidewalk: 0.9658, Acc.SignSymbol: 0.0000, Acc.Sky: 0.9637, Acc.Tree: 0.9623
2023-05-04 16:21:32,627 - mmseg - INFO - Iter [1050/10000]	lr: 9.051e-02, eta: 1:59:34, time: 1.196, data_time: 0.543, memory: 14751, decode.loss_ce: 0.1218, decode.acc_seg: 94.2768, aux_0.loss_ce: 0.1282, aux_0.acc_seg: 93.9829, aux_1.loss_ce: 0.1515, aux_1.acc_seg: 93.0534, aux_2.loss_ce: 0.1269, aux_2.loss_dice: 0.2707, aux_2.acc_seg: 96.0070, aux_3.loss_ce: 0.4385, aux_3.acc_seg: 91.5925, loss: 1.2375
2023-05-04 16:22:15,471 - mmseg - INFO - Iter [1100/10000]	lr: 9.005e-02, eta: 1:59:17, time: 0.857, data_time: 0.210, memory: 14751, decode.loss_ce: 0.1181, decode.acc_seg: 94.3745, aux_0.loss_ce: 0.1244, aux_0.acc_seg: 94.1161, aux_1.loss_ce: 0.1478, aux_1.acc_seg: 93.1554, aux_2.loss_ce: 0.1251, aux_2.loss_dice: 0.2697, aux_2.acc_seg: 96.1196, aux_3.loss_ce: 0.4363, aux_3.acc_seg: 91.4949, loss: 1.2216
2023-05-04 16:23:03,101 - mmseg - INFO - Iter [1150/10000]	lr: 8.960e-02, eta: 1:59:33, time: 0.951, data_time: 0.310, memory: 14751, decode.loss_ce: 0.1168, decode.acc_seg: 94.5376, aux_0.loss_ce: 0.1222, aux_0.acc_seg: 94.3368, aux_1.loss_ce: 0.1471, aux_1.acc_seg: 93.3679, aux_2.loss_ce: 0.1271, aux_2.loss_dice: 0.2699, aux_2.acc_seg: 96.0265, aux_3.loss_ce: 0.4394, aux_3.acc_seg: 91.6903, loss: 1.2226
2023-05-04 16:23:47,128 - mmseg - INFO - Iter [1200/10000]	lr: 8.914e-02, eta: 1:59:18, time: 0.881, data_time: 0.230, memory: 14751, decode.loss_ce: 0.1319, decode.acc_seg: 93.9052, aux_0.loss_ce: 0.1373, aux_0.acc_seg: 93.6993, aux_1.loss_ce: 0.1618, aux_1.acc_seg: 92.7191, aux_2.loss_ce: 0.1283, aux_2.loss_dice: 0.2714, aux_2.acc_seg: 96.0324, aux_3.loss_ce: 0.4410, aux_3.acc_seg: 91.2484, loss: 1.2718
2023-05-04 16:24:32,971 - mmseg - INFO - Iter [1250/10000]	lr: 8.869e-02, eta: 1:59:14, time: 0.918, data_time: 0.264, memory: 14751, decode.loss_ce: 0.1259, decode.acc_seg: 94.2076, aux_0.loss_ce: 0.1311, aux_0.acc_seg: 94.0106, aux_1.loss_ce: 0.1540, aux_1.acc_seg: 93.1127, aux_2.loss_ce: 0.1263, aux_2.loss_dice: 0.2706, aux_2.acc_seg: 96.0722, aux_3.loss_ce: 0.4338, aux_3.acc_seg: 91.7184, loss: 1.2416
2023-05-04 16:25:20,179 - mmseg - INFO - Iter [1300/10000]	lr: 8.823e-02, eta: 1:59:16, time: 0.944, data_time: 0.304, memory: 14751, decode.loss_ce: 0.1136, decode.acc_seg: 94.6950, aux_0.loss_ce: 0.1188, aux_0.acc_seg: 94.4911, aux_1.loss_ce: 0.1410, aux_1.acc_seg: 93.6232, aux_2.loss_ce: 0.1239, aux_2.loss_dice: 0.2671, aux_2.acc_seg: 96.1120, aux_3.loss_ce: 0.4169, aux_3.acc_seg: 91.9573, loss: 1.1813
2023-05-04 16:26:04,404 - mmseg - INFO - Iter [1350/10000]	lr: 8.777e-02, eta: 1:58:54, time: 0.885, data_time: 0.239, memory: 14751, decode.loss_ce: 0.1146, decode.acc_seg: 94.6190, aux_0.loss_ce: 0.1198, aux_0.acc_seg: 94.3860, aux_1.loss_ce: 0.1429, aux_1.acc_seg: 93.4239, aux_2.loss_ce: 0.1255, aux_2.loss_dice: 0.2671, aux_2.acc_seg: 96.0600, aux_3.loss_ce: 0.4191, aux_3.acc_seg: 91.7604, loss: 1.1889
2023-05-04 16:26:43,216 - mmseg - INFO - Iter [1400/10000]	lr: 8.732e-02, eta: 1:57:58, time: 0.777, data_time: 0.238, memory: 14751, decode.loss_ce: 0.1103, decode.acc_seg: 94.7864, aux_0.loss_ce: 0.1147, aux_0.acc_seg: 94.6116, aux_1.loss_ce: 0.1379, aux_1.acc_seg: 93.6707, aux_2.loss_ce: 0.1257, aux_2.loss_dice: 0.2676, aux_2.acc_seg: 96.0292, aux_3.loss_ce: 0.4158, aux_3.acc_seg: 92.0342, loss: 1.1720
2023-05-04 16:27:19,740 - mmseg - INFO - Iter [1450/10000]	lr: 8.686e-02, eta: 1:56:50, time: 0.730, data_time: 0.224, memory: 14751, decode.loss_ce: 0.1066, decode.acc_seg: 94.8923, aux_0.loss_ce: 0.1109, aux_0.acc_seg: 94.7219, aux_1.loss_ce: 0.1328, aux_1.acc_seg: 93.8288, aux_2.loss_ce: 0.1256, aux_2.loss_dice: 0.2651, aux_2.acc_seg: 95.9787, aux_3.loss_ce: 0.4044, aux_3.acc_seg: 92.0309, loss: 1.1454
2023-05-04 16:27:59,600 - mmseg - INFO - Iter [1500/10000]	lr: 8.640e-02, eta: 1:56:02, time: 0.797, data_time: 0.318, memory: 14751, decode.loss_ce: 0.1023, decode.acc_seg: 95.1499, aux_0.loss_ce: 0.1076, aux_0.acc_seg: 94.9121, aux_1.loss_ce: 0.1293, aux_1.acc_seg: 94.0141, aux_2.loss_ce: 0.1248, aux_2.loss_dice: 0.2658, aux_2.acc_seg: 96.0495, aux_3.loss_ce: 0.4059, aux_3.acc_seg: 92.2976, loss: 1.1356
2023-05-04 16:28:35,412 - mmseg - INFO - Iter [1550/10000]	lr: 8.594e-02, eta: 1:54:53, time: 0.717, data_time: 0.225, memory: 14751, decode.loss_ce: 0.1020, decode.acc_seg: 95.0764, aux_0.loss_ce: 0.1066, aux_0.acc_seg: 94.8894, aux_1.loss_ce: 0.1290, aux_1.acc_seg: 93.9347, aux_2.loss_ce: 0.1246, aux_2.loss_dice: 0.2644, aux_2.acc_seg: 96.0253, aux_3.loss_ce: 0.3915, aux_3.acc_seg: 92.3392, loss: 1.1179
2023-05-04 16:29:12,358 - mmseg - INFO - Iter [1600/10000]	lr: 8.549e-02, eta: 1:53:52, time: 0.739, data_time: 0.248, memory: 14751, decode.loss_ce: 0.1134, decode.acc_seg: 94.5970, aux_0.loss_ce: 0.1179, aux_0.acc_seg: 94.4165, aux_1.loss_ce: 0.1413, aux_1.acc_seg: 93.3804, aux_2.loss_ce: 0.1248, aux_2.loss_dice: 0.2662, aux_2.acc_seg: 96.0857, aux_3.loss_ce: 0.4084, aux_3.acc_seg: 91.9241, loss: 1.1720
2023-05-04 16:29:48,035 - mmseg - INFO - Iter [1650/10000]	lr: 8.503e-02, eta: 1:52:46, time: 0.714, data_time: 0.222, memory: 14751, decode.loss_ce: 0.1088, decode.acc_seg: 94.8591, aux_0.loss_ce: 0.1139, aux_0.acc_seg: 94.6676, aux_1.loss_ce: 0.1358, aux_1.acc_seg: 93.7317, aux_2.loss_ce: 0.1254, aux_2.loss_dice: 0.2648, aux_2.acc_seg: 96.0079, aux_3.loss_ce: 0.4017, aux_3.acc_seg: 92.1144, loss: 1.1503
2023-05-04 16:30:27,348 - mmseg - INFO - Iter [1700/10000]	lr: 8.457e-02, eta: 1:52:00, time: 0.786, data_time: 0.296, memory: 14751, decode.loss_ce: 0.1049, decode.acc_seg: 95.0959, aux_0.loss_ce: 0.1091, aux_0.acc_seg: 94.9350, aux_1.loss_ce: 0.1315, aux_1.acc_seg: 93.9721, aux_2.loss_ce: 0.1255, aux_2.loss_dice: 0.2658, aux_2.acc_seg: 96.0057, aux_3.loss_ce: 0.4033, aux_3.acc_seg: 92.2656, loss: 1.1400
2023-05-04 16:31:02,555 - mmseg - INFO - Iter [1750/10000]	lr: 8.411e-02, eta: 1:50:55, time: 0.704, data_time: 0.225, memory: 14751, decode.loss_ce: 0.0992, decode.acc_seg: 95.2120, aux_0.loss_ce: 0.1036, aux_0.acc_seg: 95.0304, aux_1.loss_ce: 0.1259, aux_1.acc_seg: 94.0476, aux_2.loss_ce: 0.1240, aux_2.loss_dice: 0.2640, aux_2.acc_seg: 96.0446, aux_3.loss_ce: 0.3898, aux_3.acc_seg: 92.3806, loss: 1.1065
2023-05-04 16:31:37,668 - mmseg - INFO - Iter [1800/10000]	lr: 8.365e-02, eta: 1:49:50, time: 0.702, data_time: 0.223, memory: 14751, decode.loss_ce: 0.1034, decode.acc_seg: 94.9881, aux_0.loss_ce: 0.1076, aux_0.acc_seg: 94.8440, aux_1.loss_ce: 0.1300, aux_1.acc_seg: 93.8566, aux_2.loss_ce: 0.1266, aux_2.loss_dice: 0.2660, aux_2.acc_seg: 95.9725, aux_3.loss_ce: 0.3905, aux_3.acc_seg: 92.1545, loss: 1.1241
2023-05-04 16:32:16,834 - mmseg - INFO - Iter [1850/10000]	lr: 8.319e-02, eta: 1:49:06, time: 0.784, data_time: 0.304, memory: 14751, decode.loss_ce: 0.1043, decode.acc_seg: 95.0511, aux_0.loss_ce: 0.1081, aux_0.acc_seg: 94.8940, aux_1.loss_ce: 0.1308, aux_1.acc_seg: 93.9390, aux_2.loss_ce: 0.1241, aux_2.loss_dice: 0.2638, aux_2.acc_seg: 96.0605, aux_3.loss_ce: 0.3915, aux_3.acc_seg: 92.3335, loss: 1.1226
2023-05-04 16:32:52,438 - mmseg - INFO - Iter [1900/10000]	lr: 8.273e-02, eta: 1:48:06, time: 0.712, data_time: 0.217, memory: 14751, decode.loss_ce: 0.0999, decode.acc_seg: 95.1336, aux_0.loss_ce: 0.1040, aux_0.acc_seg: 94.9732, aux_1.loss_ce: 0.1264, aux_1.acc_seg: 93.9938, aux_2.loss_ce: 0.1247, aux_2.loss_dice: 0.2628, aux_2.acc_seg: 95.9972, aux_3.loss_ce: 0.3832, aux_3.acc_seg: 92.3742, loss: 1.1011
2023-05-04 16:33:28,814 - mmseg - INFO - Iter [1950/10000]	lr: 8.227e-02, eta: 1:47:11, time: 0.728, data_time: 0.239, memory: 14751, decode.loss_ce: 0.0983, decode.acc_seg: 95.2817, aux_0.loss_ce: 0.1025, aux_0.acc_seg: 95.1266, aux_1.loss_ce: 0.1248, aux_1.acc_seg: 94.1296, aux_2.loss_ce: 0.1241, aux_2.loss_dice: 0.2629, aux_2.acc_seg: 96.0609, aux_3.loss_ce: 0.3866, aux_3.acc_seg: 92.4571, loss: 1.0992
2023-05-04 16:34:03,863 - mmseg - INFO - Saving checkpoint at 2000 iterations
2023-05-04 16:34:04,239 - mmseg - INFO - Exp name: detextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 16:34:04,239 - mmseg - INFO - Iter [2000/10000]	lr: 8.181e-02, eta: 1:46:14, time: 0.711, data_time: 0.220, memory: 14751, decode.loss_ce: 0.0972, decode.acc_seg: 95.3662, aux_0.loss_ce: 0.1012, aux_0.acc_seg: 95.2178, aux_1.loss_ce: 0.1230, aux_1.acc_seg: 94.2936, aux_2.loss_ce: 0.1254, aux_2.loss_dice: 0.2653, aux_2.acc_seg: 96.0159, aux_3.loss_ce: 0.3862, aux_3.acc_seg: 92.6620, loss: 1.0983
2023-05-04 16:34:14,647 - mmseg - INFO - per class results:
2023-05-04 16:34:14,648 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 79.78 | 83.57 |
|   Building  | 93.67 | 96.05 |
|     Car     | 90.89 |  92.5 |
| Column_Pole |  25.0 | 30.11 |
|    Fence    | 80.26 | 92.49 |
|  Pedestrian | 55.66 | 73.75 |
|     Road    | 95.51 | 96.06 |
|   Sidewalk  | 85.25 | 98.83 |
|  SignSymbol |  0.0  |  0.0  |
|     Sky     | 94.46 | 97.22 |
|     Tree    | 93.29 | 97.65 |
+-------------+-------+-------+
2023-05-04 16:34:14,648 - mmseg - INFO - Summary:
2023-05-04 16:34:14,648 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 95.61 | 72.16 | 78.02 |
+-------+-------+-------+
2023-05-04 16:34:14,649 - mmseg - INFO - Exp name: detextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 16:34:14,649 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9561, mIoU: 0.7216, mAcc: 0.7802, IoU.Bicyclist: 0.7978, IoU.Building: 0.9367, IoU.Car: 0.9089, IoU.Column_Pole: 0.2500, IoU.Fence: 0.8026, IoU.Pedestrian: 0.5566, IoU.Road: 0.9551, IoU.Sidewalk: 0.8525, IoU.SignSymbol: 0.0000, IoU.Sky: 0.9446, IoU.Tree: 0.9329, Acc.Bicyclist: 0.8357, Acc.Building: 0.9605, Acc.Car: 0.9250, Acc.Column_Pole: 0.3011, Acc.Fence: 0.9249, Acc.Pedestrian: 0.7375, Acc.Road: 0.9606, Acc.Sidewalk: 0.9883, Acc.SignSymbol: 0.0000, Acc.Sky: 0.9722, Acc.Tree: 0.9765
2023-05-04 16:34:53,771 - mmseg - INFO - Iter [2050/10000]	lr: 8.135e-02, eta: 1:46:11, time: 0.988, data_time: 0.509, memory: 14751, decode.loss_ce: 0.0964, decode.acc_seg: 95.3781, aux_0.loss_ce: 0.1006, aux_0.acc_seg: 95.2026, aux_1.loss_ce: 0.1218, aux_1.acc_seg: 94.2594, aux_2.loss_ce: 0.1244, aux_2.loss_dice: 0.2629, aux_2.acc_seg: 96.0337, aux_3.loss_ce: 0.3790, aux_3.acc_seg: 92.6116, loss: 1.0850
2023-05-04 16:35:28,451 - mmseg - INFO - Iter [2100/10000]	lr: 8.089e-02, eta: 1:45:10, time: 0.694, data_time: 0.211, memory: 14751, decode.loss_ce: 0.1098, decode.acc_seg: 94.9294, aux_0.loss_ce: 0.1140, aux_0.acc_seg: 94.7874, aux_1.loss_ce: 0.1358, aux_1.acc_seg: 93.8229, aux_2.loss_ce: 0.1237, aux_2.loss_dice: 0.2625, aux_2.acc_seg: 96.0782, aux_3.loss_ce: 0.3857, aux_3.acc_seg: 92.4164, loss: 1.1314
2023-05-04 16:36:03,559 - mmseg - INFO - Iter [2150/10000]	lr: 8.043e-02, eta: 1:44:13, time: 0.702, data_time: 0.222, memory: 14751, decode.loss_ce: 0.1118, decode.acc_seg: 94.5396, aux_0.loss_ce: 0.1146, aux_0.acc_seg: 94.4536, aux_1.loss_ce: 0.1351, aux_1.acc_seg: 93.5571, aux_2.loss_ce: 0.1231, aux_2.loss_dice: 0.2630, aux_2.acc_seg: 96.0970, aux_3.loss_ce: 0.3807, aux_3.acc_seg: 92.0624, loss: 1.1284
2023-05-04 16:36:38,650 - mmseg - INFO - Iter [2200/10000]	lr: 7.997e-02, eta: 1:43:16, time: 0.702, data_time: 0.220, memory: 14751, decode.loss_ce: 0.1039, decode.acc_seg: 95.0615, aux_0.loss_ce: 0.1068, aux_0.acc_seg: 94.9323, aux_1.loss_ce: 0.1303, aux_1.acc_seg: 93.9293, aux_2.loss_ce: 0.1244, aux_2.loss_dice: 0.2626, aux_2.acc_seg: 96.0105, aux_3.loss_ce: 0.3799, aux_3.acc_seg: 92.4431, loss: 1.1080
2023-05-04 16:37:18,861 - mmseg - INFO - Iter [2250/10000]	lr: 7.951e-02, eta: 1:42:38, time: 0.804, data_time: 0.313, memory: 14751, decode.loss_ce: 0.0927, decode.acc_seg: 95.4587, aux_0.loss_ce: 0.0966, aux_0.acc_seg: 95.2832, aux_1.loss_ce: 0.1179, aux_1.acc_seg: 94.3391, aux_2.loss_ce: 0.1215, aux_2.loss_dice: 0.2595, aux_2.acc_seg: 96.1019, aux_3.loss_ce: 0.3650, aux_3.acc_seg: 92.7735, loss: 1.0533
2023-05-04 16:37:53,931 - mmseg - INFO - Iter [2300/10000]	lr: 7.905e-02, eta: 1:41:43, time: 0.701, data_time: 0.217, memory: 14751, decode.loss_ce: 0.0949, decode.acc_seg: 95.4144, aux_0.loss_ce: 0.0982, aux_0.acc_seg: 95.2844, aux_1.loss_ce: 0.1192, aux_1.acc_seg: 94.3598, aux_2.loss_ce: 0.1230, aux_2.loss_dice: 0.2618, aux_2.acc_seg: 96.0613, aux_3.loss_ce: 0.3776, aux_3.acc_seg: 92.6155, loss: 1.0746
2023-05-04 16:38:28,398 - mmseg - INFO - Iter [2350/10000]	lr: 7.859e-02, eta: 1:40:46, time: 0.689, data_time: 0.206, memory: 14751, decode.loss_ce: 0.0899, decode.acc_seg: 95.5810, aux_0.loss_ce: 0.0937, aux_0.acc_seg: 95.4339, aux_1.loss_ce: 0.1145, aux_1.acc_seg: 94.4830, aux_2.loss_ce: 0.1235, aux_2.loss_dice: 0.2601, aux_2.acc_seg: 96.0076, aux_3.loss_ce: 0.3617, aux_3.acc_seg: 92.7829, loss: 1.0435
2023-05-04 16:39:14,392 - mmseg - INFO - Iter [2400/10000]	lr: 7.812e-02, eta: 1:40:27, time: 0.918, data_time: 0.299, memory: 14751, decode.loss_ce: 0.0884, decode.acc_seg: 95.6559, aux_0.loss_ce: 0.0922, aux_0.acc_seg: 95.5084, aux_1.loss_ce: 0.1129, aux_1.acc_seg: 94.5788, aux_2.loss_ce: 0.1223, aux_2.loss_dice: 0.2611, aux_2.acc_seg: 96.0826, aux_3.loss_ce: 0.3617, aux_3.acc_seg: 92.8716, loss: 1.0386
2023-05-04 16:39:58,136 - mmseg - INFO - Iter [2450/10000]	lr: 7.766e-02, eta: 1:40:00, time: 0.875, data_time: 0.231, memory: 14751, decode.loss_ce: 0.0883, decode.acc_seg: 95.6163, aux_0.loss_ce: 0.0917, aux_0.acc_seg: 95.4809, aux_1.loss_ce: 0.1129, aux_1.acc_seg: 94.5193, aux_2.loss_ce: 0.1216, aux_2.loss_dice: 0.2601, aux_2.acc_seg: 96.0920, aux_3.loss_ce: 0.3625, aux_3.acc_seg: 92.8027, loss: 1.0370
2023-05-04 16:40:41,396 - mmseg - INFO - Iter [2500/10000]	lr: 7.720e-02, eta: 1:39:31, time: 0.867, data_time: 0.225, memory: 14751, decode.loss_ce: 0.0917, decode.acc_seg: 95.4783, aux_0.loss_ce: 0.0955, aux_0.acc_seg: 95.3339, aux_1.loss_ce: 0.1148, aux_1.acc_seg: 94.4614, aux_2.loss_ce: 0.1217, aux_2.loss_dice: 0.2587, aux_2.acc_seg: 96.0490, aux_3.loss_ce: 0.3605, aux_3.acc_seg: 92.6840, loss: 1.0429
2023-05-04 16:41:24,086 - mmseg - INFO - Iter [2550/10000]	lr: 7.674e-02, eta: 1:39:00, time: 0.854, data_time: 0.217, memory: 14751, decode.loss_ce: 0.0908, decode.acc_seg: 95.5560, aux_0.loss_ce: 0.0942, aux_0.acc_seg: 95.4163, aux_1.loss_ce: 0.1137, aux_1.acc_seg: 94.5562, aux_2.loss_ce: 0.1213, aux_2.loss_dice: 0.2594, aux_2.acc_seg: 96.0923, aux_3.loss_ce: 0.3604, aux_3.acc_seg: 92.8639, loss: 1.0397
2023-05-04 16:42:11,658 - mmseg - INFO - Iter [2600/10000]	lr: 7.627e-02, eta: 1:38:42, time: 0.951, data_time: 0.308, memory: 14751, decode.loss_ce: 0.0920, decode.acc_seg: 95.5923, aux_0.loss_ce: 0.0955, aux_0.acc_seg: 95.4628, aux_1.loss_ce: 0.1168, aux_1.acc_seg: 94.4929, aux_2.loss_ce: 0.1247, aux_2.loss_dice: 0.2622, aux_2.acc_seg: 95.9994, aux_3.loss_ce: 0.3690, aux_3.acc_seg: 92.8017, loss: 1.0601
2023-05-04 16:42:55,686 - mmseg - INFO - Iter [2650/10000]	lr: 7.581e-02, eta: 1:38:13, time: 0.881, data_time: 0.225, memory: 14751, decode.loss_ce: 0.1099, decode.acc_seg: 94.9217, aux_0.loss_ce: 0.1141, aux_0.acc_seg: 94.8061, aux_1.loss_ce: 0.1342, aux_1.acc_seg: 93.9066, aux_2.loss_ce: 0.1236, aux_2.loss_dice: 0.2625, aux_2.acc_seg: 96.0566, aux_3.loss_ce: 0.3809, aux_3.acc_seg: 92.3073, loss: 1.1252
2023-05-04 16:43:39,489 - mmseg - INFO - Iter [2700/10000]	lr: 7.534e-02, eta: 1:37:43, time: 0.876, data_time: 0.231, memory: 14751, decode.loss_ce: 0.1010, decode.acc_seg: 95.2242, aux_0.loss_ce: 0.1035, aux_0.acc_seg: 95.1072, aux_1.loss_ce: 0.1248, aux_1.acc_seg: 94.1727, aux_2.loss_ce: 0.1226, aux_2.loss_dice: 0.2612, aux_2.acc_seg: 96.0669, aux_3.loss_ce: 0.3680, aux_3.acc_seg: 92.5256, loss: 1.0810
2023-05-04 16:44:22,379 - mmseg - INFO - Iter [2750/10000]	lr: 7.488e-02, eta: 1:37:10, time: 0.858, data_time: 0.219, memory: 14751, decode.loss_ce: 0.0948, decode.acc_seg: 95.4489, aux_0.loss_ce: 0.0976, aux_0.acc_seg: 95.3330, aux_1.loss_ce: 0.1170, aux_1.acc_seg: 94.4567, aux_2.loss_ce: 0.1228, aux_2.loss_dice: 0.2603, aux_2.acc_seg: 96.0500, aux_3.loss_ce: 0.3638, aux_3.acc_seg: 92.7929, loss: 1.0562
2023-05-04 16:45:08,829 - mmseg - INFO - Iter [2800/10000]	lr: 7.441e-02, eta: 1:36:46, time: 0.929, data_time: 0.308, memory: 14751, decode.loss_ce: 0.0931, decode.acc_seg: 95.5358, aux_0.loss_ce: 0.0967, aux_0.acc_seg: 95.3951, aux_1.loss_ce: 0.1170, aux_1.acc_seg: 94.5032, aux_2.loss_ce: 0.1236, aux_2.loss_dice: 0.2628, aux_2.acc_seg: 96.0659, aux_3.loss_ce: 0.3662, aux_3.acc_seg: 92.8379, loss: 1.0594
2023-05-04 16:45:44,590 - mmseg - INFO - Iter [2850/10000]	lr: 7.395e-02, eta: 1:35:54, time: 0.715, data_time: 0.230, memory: 14751, decode.loss_ce: 0.0859, decode.acc_seg: 95.7454, aux_0.loss_ce: 0.0892, aux_0.acc_seg: 95.6224, aux_1.loss_ce: 0.1094, aux_1.acc_seg: 94.6933, aux_2.loss_ce: 0.1219, aux_2.loss_dice: 0.2593, aux_2.acc_seg: 96.0710, aux_3.loss_ce: 0.3579, aux_3.acc_seg: 92.9970, loss: 1.0236
2023-05-04 16:46:20,701 - mmseg - INFO - Iter [2900/10000]	lr: 7.348e-02, eta: 1:35:04, time: 0.722, data_time: 0.231, memory: 14751, decode.loss_ce: 0.0910, decode.acc_seg: 95.6301, aux_0.loss_ce: 0.0939, aux_0.acc_seg: 95.5243, aux_1.loss_ce: 0.1151, aux_1.acc_seg: 94.5619, aux_2.loss_ce: 0.1235, aux_2.loss_dice: 0.2606, aux_2.acc_seg: 96.0010, aux_3.loss_ce: 0.3634, aux_3.acc_seg: 92.9263, loss: 1.0475
2023-05-04 16:47:00,488 - mmseg - INFO - Iter [2950/10000]	lr: 7.302e-02, eta: 1:34:22, time: 0.796, data_time: 0.316, memory: 14751, decode.loss_ce: 0.0917, decode.acc_seg: 95.5349, aux_0.loss_ce: 0.0946, aux_0.acc_seg: 95.4234, aux_1.loss_ce: 0.1144, aux_1.acc_seg: 94.5232, aux_2.loss_ce: 0.1222, aux_2.loss_dice: 0.2598, aux_2.acc_seg: 96.0819, aux_3.loss_ce: 0.3576, aux_3.acc_seg: 92.8534, loss: 1.0403
2023-05-04 16:47:36,070 - mmseg - INFO - Saving checkpoint at 3000 iterations
2023-05-04 16:47:36,741 - mmseg - INFO - Exp name: detextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 16:47:36,742 - mmseg - INFO - Iter [3000/10000]	lr: 7.255e-02, eta: 1:33:33, time: 0.728, data_time: 0.228, memory: 14751, decode.loss_ce: 0.0868, decode.acc_seg: 95.6222, aux_0.loss_ce: 0.0893, aux_0.acc_seg: 95.5508, aux_1.loss_ce: 0.1089, aux_1.acc_seg: 94.6185, aux_2.loss_ce: 0.1214, aux_2.loss_dice: 0.2576, aux_2.acc_seg: 96.0713, aux_3.loss_ce: 0.3464, aux_3.acc_seg: 92.8927, loss: 1.0104
2023-05-04 16:47:52,964 - mmseg - INFO - per class results:
2023-05-04 16:47:52,965 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 84.29 |  94.0 |
|   Building  | 93.51 | 96.03 |
|     Car     | 91.85 | 93.91 |
| Column_Pole | 22.54 | 26.11 |
|    Fence    | 77.65 | 86.53 |
|  Pedestrian | 57.32 | 81.91 |
|     Road    | 97.43 | 98.28 |
|   Sidewalk  | 91.51 | 96.44 |
|  SignSymbol |  0.08 |  0.08 |
|     Sky     |  92.9 | 94.39 |
|     Tree    | 92.09 |  98.8 |
+-------------+-------+-------+
2023-05-04 16:47:52,965 - mmseg - INFO - Summary:
2023-05-04 16:47:52,966 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 96.05 | 72.83 | 78.77 |
+-------+-------+-------+
2023-05-04 16:47:52,966 - mmseg - INFO - Exp name: detextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 16:47:52,966 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9605, mIoU: 0.7283, mAcc: 0.7877, IoU.Bicyclist: 0.8429, IoU.Building: 0.9351, IoU.Car: 0.9185, IoU.Column_Pole: 0.2254, IoU.Fence: 0.7765, IoU.Pedestrian: 0.5732, IoU.Road: 0.9743, IoU.Sidewalk: 0.9151, IoU.SignSymbol: 0.0008, IoU.Sky: 0.9290, IoU.Tree: 0.9209, Acc.Bicyclist: 0.9400, Acc.Building: 0.9603, Acc.Car: 0.9391, Acc.Column_Pole: 0.2611, Acc.Fence: 0.8653, Acc.Pedestrian: 0.8191, Acc.Road: 0.9828, Acc.Sidewalk: 0.9644, Acc.SignSymbol: 0.0008, Acc.Sky: 0.9439, Acc.Tree: 0.9880
2023-05-04 16:48:29,040 - mmseg - INFO - Iter [3050/10000]	lr: 7.208e-02, eta: 1:33:21, time: 1.043, data_time: 0.561, memory: 14751, decode.loss_ce: 0.0895, decode.acc_seg: 95.7152, aux_0.loss_ce: 0.0925, aux_0.acc_seg: 95.6071, aux_1.loss_ce: 0.1125, aux_1.acc_seg: 94.7114, aux_2.loss_ce: 0.1222, aux_2.loss_dice: 0.2585, aux_2.acc_seg: 96.0114, aux_3.loss_ce: 0.3628, aux_3.acc_seg: 93.0269, loss: 1.0379
2023-05-04 16:49:03,955 - mmseg - INFO - Iter [3100/10000]	lr: 7.162e-02, eta: 1:32:29, time: 0.698, data_time: 0.223, memory: 14751, decode.loss_ce: 0.0884, decode.acc_seg: 95.6362, aux_0.loss_ce: 0.0910, aux_0.acc_seg: 95.5390, aux_1.loss_ce: 0.1102, aux_1.acc_seg: 94.6523, aux_2.loss_ce: 0.1216, aux_2.loss_dice: 0.2576, aux_2.acc_seg: 96.0261, aux_3.loss_ce: 0.3504, aux_3.acc_seg: 92.9366, loss: 1.0192
2023-05-04 16:49:42,444 - mmseg - INFO - Iter [3150/10000]	lr: 7.115e-02, eta: 1:31:45, time: 0.770, data_time: 0.289, memory: 14751, decode.loss_ce: 0.0837, decode.acc_seg: 95.8604, aux_0.loss_ce: 0.0870, aux_0.acc_seg: 95.7449, aux_1.loss_ce: 0.1059, aux_1.acc_seg: 94.8680, aux_2.loss_ce: 0.1235, aux_2.loss_dice: 0.2586, aux_2.acc_seg: 95.9792, aux_3.loss_ce: 0.3514, aux_3.acc_seg: 93.0547, loss: 1.0101
2023-05-04 16:50:17,517 - mmseg - INFO - Iter [3200/10000]	lr: 7.068e-02, eta: 1:30:54, time: 0.701, data_time: 0.226, memory: 14751, decode.loss_ce: 0.0789, decode.acc_seg: 96.0684, aux_0.loss_ce: 0.0818, aux_0.acc_seg: 95.9519, aux_1.loss_ce: 0.1007, aux_1.acc_seg: 95.0837, aux_2.loss_ce: 0.1199, aux_2.loss_dice: 0.2573, aux_2.acc_seg: 96.1331, aux_3.loss_ce: 0.3417, aux_3.acc_seg: 93.2720, loss: 0.9803
2023-05-04 16:50:52,232 - mmseg - INFO - Iter [3250/10000]	lr: 7.022e-02, eta: 1:30:02, time: 0.694, data_time: 0.216, memory: 14751, decode.loss_ce: 0.0865, decode.acc_seg: 95.7211, aux_0.loss_ce: 0.0897, aux_0.acc_seg: 95.6019, aux_1.loss_ce: 0.1102, aux_1.acc_seg: 94.6661, aux_2.loss_ce: 0.1248, aux_2.loss_dice: 0.2603, aux_2.acc_seg: 95.9441, aux_3.loss_ce: 0.3582, aux_3.acc_seg: 92.8357, loss: 1.0298
2023-05-04 16:51:26,764 - mmseg - INFO - Iter [3300/10000]	lr: 6.975e-02, eta: 1:29:11, time: 0.691, data_time: 0.212, memory: 14751, decode.loss_ce: 0.0822, decode.acc_seg: 95.8990, aux_0.loss_ce: 0.0849, aux_0.acc_seg: 95.8088, aux_1.loss_ce: 0.1041, aux_1.acc_seg: 94.9023, aux_2.loss_ce: 0.1213, aux_2.loss_dice: 0.2584, aux_2.acc_seg: 96.0686, aux_3.loss_ce: 0.3444, aux_3.acc_seg: 93.1233, loss: 0.9953
2023-05-04 16:52:05,723 - mmseg - INFO - Iter [3350/10000]	lr: 6.928e-02, eta: 1:28:29, time: 0.779, data_time: 0.283, memory: 14751, decode.loss_ce: 0.0820, decode.acc_seg: 95.8727, aux_0.loss_ce: 0.0852, aux_0.acc_seg: 95.7565, aux_1.loss_ce: 0.1040, aux_1.acc_seg: 94.8887, aux_2.loss_ce: 0.1213, aux_2.loss_dice: 0.2568, aux_2.acc_seg: 96.0134, aux_3.loss_ce: 0.3439, aux_3.acc_seg: 93.0608, loss: 0.9932
2023-05-04 16:52:41,417 - mmseg - INFO - Iter [3400/10000]	lr: 6.881e-02, eta: 1:27:41, time: 0.714, data_time: 0.231, memory: 14751, decode.loss_ce: 0.0815, decode.acc_seg: 95.9167, aux_0.loss_ce: 0.0847, aux_0.acc_seg: 95.8089, aux_1.loss_ce: 0.1026, aux_1.acc_seg: 94.9738, aux_2.loss_ce: 0.1210, aux_2.loss_dice: 0.2579, aux_2.acc_seg: 96.0773, aux_3.loss_ce: 0.3429, aux_3.acc_seg: 93.1811, loss: 0.9906
2023-05-04 16:53:16,161 - mmseg - INFO - Iter [3450/10000]	lr: 6.834e-02, eta: 1:26:52, time: 0.695, data_time: 0.220, memory: 14751, decode.loss_ce: 0.0795, decode.acc_seg: 95.9927, aux_0.loss_ce: 0.0819, aux_0.acc_seg: 95.9119, aux_1.loss_ce: 0.1012, aux_1.acc_seg: 95.0101, aux_2.loss_ce: 0.1193, aux_2.loss_dice: 0.2547, aux_2.acc_seg: 96.0653, aux_3.loss_ce: 0.3332, aux_3.acc_seg: 93.2242, loss: 0.9697
2023-05-04 16:53:54,041 - mmseg - INFO - Iter [3500/10000]	lr: 6.787e-02, eta: 1:26:08, time: 0.757, data_time: 0.289, memory: 14751, decode.loss_ce: 0.0787, decode.acc_seg: 96.0276, aux_0.loss_ce: 0.0815, aux_0.acc_seg: 95.9223, aux_1.loss_ce: 0.1009, aux_1.acc_seg: 95.0446, aux_2.loss_ce: 0.1222, aux_2.loss_dice: 0.2573, aux_2.acc_seg: 96.0180, aux_3.loss_ce: 0.3395, aux_3.acc_seg: 93.2169, loss: 0.9800
2023-05-04 16:54:28,515 - mmseg - INFO - Iter [3550/10000]	lr: 6.740e-02, eta: 1:25:19, time: 0.690, data_time: 0.210, memory: 14751, decode.loss_ce: 0.0810, decode.acc_seg: 95.9301, aux_0.loss_ce: 0.0839, aux_0.acc_seg: 95.8302, aux_1.loss_ce: 0.1030, aux_1.acc_seg: 94.9451, aux_2.loss_ce: 0.1198, aux_2.loss_dice: 0.2546, aux_2.acc_seg: 96.0599, aux_3.loss_ce: 0.3376, aux_3.acc_seg: 93.2397, loss: 0.9799
2023-05-04 16:55:02,855 - mmseg - INFO - Iter [3600/10000]	lr: 6.693e-02, eta: 1:24:30, time: 0.687, data_time: 0.207, memory: 14751, decode.loss_ce: 0.0809, decode.acc_seg: 95.9510, aux_0.loss_ce: 0.0841, aux_0.acc_seg: 95.8353, aux_1.loss_ce: 0.1025, aux_1.acc_seg: 95.0007, aux_2.loss_ce: 0.1217, aux_2.loss_dice: 0.2570, aux_2.acc_seg: 96.0224, aux_3.loss_ce: 0.3426, aux_3.acc_seg: 93.1808, loss: 0.9888
2023-05-04 16:55:37,555 - mmseg - INFO - Iter [3650/10000]	lr: 6.646e-02, eta: 1:23:41, time: 0.694, data_time: 0.217, memory: 14751, decode.loss_ce: 0.0812, decode.acc_seg: 95.9552, aux_0.loss_ce: 0.0838, aux_0.acc_seg: 95.8614, aux_1.loss_ce: 0.1021, aux_1.acc_seg: 95.0133, aux_2.loss_ce: 0.1198, aux_2.loss_dice: 0.2568, aux_2.acc_seg: 96.0952, aux_3.loss_ce: 0.3414, aux_3.acc_seg: 93.1968, loss: 0.9853
2023-05-04 16:56:16,192 - mmseg - INFO - Iter [3700/10000]	lr: 6.599e-02, eta: 1:23:00, time: 0.773, data_time: 0.290, memory: 14751, decode.loss_ce: 0.0795, decode.acc_seg: 95.9733, aux_0.loss_ce: 0.0823, aux_0.acc_seg: 95.8734, aux_1.loss_ce: 0.1008, aux_1.acc_seg: 94.9892, aux_2.loss_ce: 0.1199, aux_2.loss_dice: 0.2552, aux_2.acc_seg: 96.0453, aux_3.loss_ce: 0.3347, aux_3.acc_seg: 93.1696, loss: 0.9723
2023-05-04 16:56:52,064 - mmseg - INFO - Iter [3750/10000]	lr: 6.552e-02, eta: 1:22:15, time: 0.717, data_time: 0.240, memory: 14751, decode.loss_ce: 0.0832, decode.acc_seg: 95.8944, aux_0.loss_ce: 0.0863, aux_0.acc_seg: 95.7978, aux_1.loss_ce: 0.1042, aux_1.acc_seg: 94.9712, aux_2.loss_ce: 0.1214, aux_2.loss_dice: 0.2572, aux_2.acc_seg: 96.0331, aux_3.loss_ce: 0.3420, aux_3.acc_seg: 93.1894, loss: 0.9942
2023-05-04 16:57:29,973 - mmseg - INFO - Iter [3800/10000]	lr: 6.505e-02, eta: 1:21:33, time: 0.758, data_time: 0.210, memory: 14751, decode.loss_ce: 0.0832, decode.acc_seg: 95.9302, aux_0.loss_ce: 0.0859, aux_0.acc_seg: 95.8500, aux_1.loss_ce: 0.1049, aux_1.acc_seg: 94.9804, aux_2.loss_ce: 0.1241, aux_2.loss_dice: 0.2583, aux_2.acc_seg: 95.9209, aux_3.loss_ce: 0.3471, aux_3.acc_seg: 93.1125, loss: 1.0035
2023-05-04 16:58:12,561 - mmseg - INFO - Iter [3850/10000]	lr: 6.457e-02, eta: 1:20:58, time: 0.851, data_time: 0.215, memory: 14751, decode.loss_ce: 0.0779, decode.acc_seg: 96.0003, aux_0.loss_ce: 0.0809, aux_0.acc_seg: 95.8977, aux_1.loss_ce: 0.0988, aux_1.acc_seg: 95.0051, aux_2.loss_ce: 0.1192, aux_2.loss_dice: 0.2539, aux_2.acc_seg: 96.0654, aux_3.loss_ce: 0.3291, aux_3.acc_seg: 93.2108, loss: 0.9598
2023-05-04 16:59:00,437 - mmseg - INFO - Iter [3900/10000]	lr: 6.410e-02, eta: 1:20:32, time: 0.958, data_time: 0.321, memory: 14751, decode.loss_ce: 0.0802, decode.acc_seg: 95.9631, aux_0.loss_ce: 0.0829, aux_0.acc_seg: 95.8747, aux_1.loss_ce: 0.1022, aux_1.acc_seg: 94.9633, aux_2.loss_ce: 0.1217, aux_2.loss_dice: 0.2569, aux_2.acc_seg: 95.9780, aux_3.loss_ce: 0.3382, aux_3.acc_seg: 93.1700, loss: 0.9822
2023-05-04 16:59:43,433 - mmseg - INFO - Iter [3950/10000]	lr: 6.363e-02, eta: 1:19:57, time: 0.860, data_time: 0.226, memory: 14751, decode.loss_ce: 0.0811, decode.acc_seg: 95.8565, aux_0.loss_ce: 0.0829, aux_0.acc_seg: 95.8152, aux_1.loss_ce: 0.1013, aux_1.acc_seg: 94.9449, aux_2.loss_ce: 0.1200, aux_2.loss_dice: 0.2553, aux_2.acc_seg: 96.0395, aux_3.loss_ce: 0.3305, aux_3.acc_seg: 93.1642, loss: 0.9710
2023-05-04 17:00:25,930 - mmseg - INFO - Saving checkpoint at 4000 iterations
2023-05-04 17:00:26,446 - mmseg - INFO - Exp name: detextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 17:00:26,446 - mmseg - INFO - Iter [4000/10000]	lr: 6.315e-02, eta: 1:19:23, time: 0.863, data_time: 0.215, memory: 14751, decode.loss_ce: 0.0764, decode.acc_seg: 96.1424, aux_0.loss_ce: 0.0788, aux_0.acc_seg: 96.0585, aux_1.loss_ce: 0.0967, aux_1.acc_seg: 95.2027, aux_2.loss_ce: 0.1193, aux_2.loss_dice: 0.2553, aux_2.acc_seg: 96.0850, aux_3.loss_ce: 0.3314, aux_3.acc_seg: 93.3759, loss: 0.9580
2023-05-04 17:00:35,304 - mmseg - INFO - per class results:
2023-05-04 17:00:35,305 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 84.67 | 93.63 |
|   Building  | 93.61 | 95.38 |
|     Car     | 91.03 | 96.66 |
| Column_Pole | 31.59 | 39.74 |
|    Fence    | 81.15 | 85.63 |
|  Pedestrian | 63.79 | 87.07 |
|     Road    | 97.73 | 98.71 |
|   Sidewalk  | 92.19 | 96.94 |
|  SignSymbol |  1.53 |  1.53 |
|     Sky     | 93.95 | 96.11 |
|     Tree    | 92.13 | 98.76 |
+-------------+-------+-------+
2023-05-04 17:00:35,305 - mmseg - INFO - Summary:
2023-05-04 17:00:35,305 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 96.34 | 74.85 | 80.92 |
+-------+-------+-------+
2023-05-04 17:00:35,305 - mmseg - INFO - Exp name: detextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 17:00:35,305 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9634, mIoU: 0.7485, mAcc: 0.8092, IoU.Bicyclist: 0.8467, IoU.Building: 0.9361, IoU.Car: 0.9103, IoU.Column_Pole: 0.3159, IoU.Fence: 0.8115, IoU.Pedestrian: 0.6379, IoU.Road: 0.9773, IoU.Sidewalk: 0.9219, IoU.SignSymbol: 0.0153, IoU.Sky: 0.9395, IoU.Tree: 0.9213, Acc.Bicyclist: 0.9363, Acc.Building: 0.9538, Acc.Car: 0.9666, Acc.Column_Pole: 0.3974, Acc.Fence: 0.8563, Acc.Pedestrian: 0.8707, Acc.Road: 0.9871, Acc.Sidewalk: 0.9694, Acc.SignSymbol: 0.0153, Acc.Sky: 0.9611, Acc.Tree: 0.9876
2023-05-04 17:01:22,371 - mmseg - INFO - Iter [4050/10000]	lr: 6.268e-02, eta: 1:19:07, time: 1.115, data_time: 0.484, memory: 14751, decode.loss_ce: 0.0780, decode.acc_seg: 96.0883, aux_0.loss_ce: 0.0806, aux_0.acc_seg: 96.0010, aux_1.loss_ce: 0.0992, aux_1.acc_seg: 95.1245, aux_2.loss_ce: 0.1193, aux_2.loss_dice: 0.2545, aux_2.acc_seg: 96.0616, aux_3.loss_ce: 0.3323, aux_3.acc_seg: 93.2981, loss: 0.9637
2023-05-04 17:02:05,307 - mmseg - INFO - Iter [4100/10000]	lr: 6.221e-02, eta: 1:18:31, time: 0.857, data_time: 0.226, memory: 14751, decode.loss_ce: 0.0799, decode.acc_seg: 95.9974, aux_0.loss_ce: 0.0825, aux_0.acc_seg: 95.9152, aux_1.loss_ce: 0.1011, aux_1.acc_seg: 95.0597, aux_2.loss_ce: 0.1204, aux_2.loss_dice: 0.2554, aux_2.acc_seg: 96.0423, aux_3.loss_ce: 0.3338, aux_3.acc_seg: 93.2650, loss: 0.9730
2023-05-04 17:02:47,765 - mmseg - INFO - Iter [4150/10000]	lr: 6.173e-02, eta: 1:17:55, time: 0.851, data_time: 0.221, memory: 14751, decode.loss_ce: 0.0771, decode.acc_seg: 96.0966, aux_0.loss_ce: 0.0799, aux_0.acc_seg: 95.9980, aux_1.loss_ce: 0.0986, aux_1.acc_seg: 95.1212, aux_2.loss_ce: 0.1211, aux_2.loss_dice: 0.2559, aux_2.acc_seg: 95.9995, aux_3.loss_ce: 0.3330, aux_3.acc_seg: 93.3016, loss: 0.9657
2023-05-04 17:03:28,803 - mmseg - INFO - Iter [4200/10000]	lr: 6.126e-02, eta: 1:17:17, time: 0.821, data_time: 0.210, memory: 14751, decode.loss_ce: 0.0793, decode.acc_seg: 95.9647, aux_0.loss_ce: 0.0808, aux_0.acc_seg: 95.9232, aux_1.loss_ce: 0.0993, aux_1.acc_seg: 95.0426, aux_2.loss_ce: 0.1194, aux_2.loss_dice: 0.2551, aux_2.acc_seg: 96.1212, aux_3.loss_ce: 0.3282, aux_3.acc_seg: 93.2142, loss: 0.9622
2023-05-04 17:04:07,414 - mmseg - INFO - Iter [4250/10000]	lr: 6.078e-02, eta: 1:16:35, time: 0.772, data_time: 0.291, memory: 14751, decode.loss_ce: 0.0781, decode.acc_seg: 96.0203, aux_0.loss_ce: 0.0809, aux_0.acc_seg: 95.9261, aux_1.loss_ce: 0.0990, aux_1.acc_seg: 95.0541, aux_2.loss_ce: 0.1197, aux_2.loss_dice: 0.2535, aux_2.acc_seg: 96.0371, aux_3.loss_ce: 0.3285, aux_3.acc_seg: 93.1563, loss: 0.9597
2023-05-04 17:04:43,534 - mmseg - INFO - Iter [4300/10000]	lr: 6.031e-02, eta: 1:15:50, time: 0.722, data_time: 0.235, memory: 14751, decode.loss_ce: 0.0983, decode.acc_seg: 95.2170, aux_0.loss_ce: 0.1009, aux_0.acc_seg: 95.1865, aux_1.loss_ce: 0.1226, aux_1.acc_seg: 94.2860, aux_2.loss_ce: 0.1200, aux_2.loss_dice: 0.2555, aux_2.acc_seg: 96.0723, aux_3.loss_ce: 0.3475, aux_3.acc_seg: 92.6509, loss: 1.0449
2023-05-04 17:05:19,178 - mmseg - INFO - Iter [4350/10000]	lr: 5.983e-02, eta: 1:15:04, time: 0.713, data_time: 0.225, memory: 14751, decode.loss_ce: 0.0964, decode.acc_seg: 95.5079, aux_0.loss_ce: 0.0986, aux_0.acc_seg: 95.4155, aux_1.loss_ce: 0.1155, aux_1.acc_seg: 94.5903, aux_2.loss_ce: 0.1207, aux_2.loss_dice: 0.2553, aux_2.acc_seg: 96.0388, aux_3.loss_ce: 0.3390, aux_3.acc_seg: 93.1015, loss: 1.0254
2023-05-04 17:05:55,596 - mmseg - INFO - Iter [4400/10000]	lr: 5.935e-02, eta: 1:14:20, time: 0.727, data_time: 0.216, memory: 14751, decode.loss_ce: 0.0880, decode.acc_seg: 95.7170, aux_0.loss_ce: 0.0905, aux_0.acc_seg: 95.6508, aux_1.loss_ce: 0.1096, aux_1.acc_seg: 94.7965, aux_2.loss_ce: 0.1224, aux_2.loss_dice: 0.2578, aux_2.acc_seg: 96.0128, aux_3.loss_ce: 0.3448, aux_3.acc_seg: 93.1286, loss: 1.0130
2023-05-04 17:06:41,132 - mmseg - INFO - Iter [4450/10000]	lr: 5.888e-02, eta: 1:13:47, time: 0.911, data_time: 0.270, memory: 14751, decode.loss_ce: 0.0860, decode.acc_seg: 95.7641, aux_0.loss_ce: 0.0875, aux_0.acc_seg: 95.7157, aux_1.loss_ce: 0.1053, aux_1.acc_seg: 94.9166, aux_2.loss_ce: 0.1187, aux_2.loss_dice: 0.2546, aux_2.acc_seg: 96.1299, aux_3.loss_ce: 0.3365, aux_3.acc_seg: 93.1376, loss: 0.9885
2023-05-04 17:07:22,928 - mmseg - INFO - Iter [4500/10000]	lr: 5.840e-02, eta: 1:13:10, time: 0.836, data_time: 0.191, memory: 14751, decode.loss_ce: 0.0831, decode.acc_seg: 95.8684, aux_0.loss_ce: 0.0859, aux_0.acc_seg: 95.7692, aux_1.loss_ce: 0.1051, aux_1.acc_seg: 94.8554, aux_2.loss_ce: 0.1214, aux_2.loss_dice: 0.2562, aux_2.acc_seg: 96.0088, aux_3.loss_ce: 0.3342, aux_3.acc_seg: 93.1405, loss: 0.9858
2023-05-04 17:08:04,997 - mmseg - INFO - Iter [4550/10000]	lr: 5.792e-02, eta: 1:12:32, time: 0.841, data_time: 0.185, memory: 14751, decode.loss_ce: 0.0830, decode.acc_seg: 95.8884, aux_0.loss_ce: 0.0849, aux_0.acc_seg: 95.8413, aux_1.loss_ce: 0.1036, aux_1.acc_seg: 94.9439, aux_2.loss_ce: 0.1207, aux_2.loss_dice: 0.2562, aux_2.acc_seg: 96.0437, aux_3.loss_ce: 0.3361, aux_3.acc_seg: 93.2856, loss: 0.9843
2023-05-04 17:08:50,357 - mmseg - INFO - Iter [4600/10000]	lr: 5.744e-02, eta: 1:11:59, time: 0.906, data_time: 0.254, memory: 14751, decode.loss_ce: 0.0787, decode.acc_seg: 95.9867, aux_0.loss_ce: 0.0808, aux_0.acc_seg: 95.9365, aux_1.loss_ce: 0.0989, aux_1.acc_seg: 95.0715, aux_2.loss_ce: 0.1202, aux_2.loss_dice: 0.2540, aux_2.acc_seg: 96.0089, aux_3.loss_ce: 0.3297, aux_3.acc_seg: 93.3571, loss: 0.9623
2023-05-04 17:09:32,063 - mmseg - INFO - Iter [4650/10000]	lr: 5.696e-02, eta: 1:11:21, time: 0.834, data_time: 0.192, memory: 14751, decode.loss_ce: 0.0765, decode.acc_seg: 96.1762, aux_0.loss_ce: 0.0789, aux_0.acc_seg: 96.0973, aux_1.loss_ce: 0.0971, aux_1.acc_seg: 95.2382, aux_2.loss_ce: 0.1204, aux_2.loss_dice: 0.2553, aux_2.acc_seg: 96.0373, aux_3.loss_ce: 0.3301, aux_3.acc_seg: 93.4117, loss: 0.9583
2023-05-04 17:10:14,444 - mmseg - INFO - Iter [4700/10000]	lr: 5.648e-02, eta: 1:10:43, time: 0.849, data_time: 0.188, memory: 14751, decode.loss_ce: 0.0759, decode.acc_seg: 96.1163, aux_0.loss_ce: 0.0782, aux_0.acc_seg: 96.0501, aux_1.loss_ce: 0.0960, aux_1.acc_seg: 95.1807, aux_2.loss_ce: 0.1217, aux_2.loss_dice: 0.2534, aux_2.acc_seg: 95.9211, aux_3.loss_ce: 0.3230, aux_3.acc_seg: 93.3194, loss: 0.9481
2023-05-04 17:10:56,353 - mmseg - INFO - Iter [4750/10000]	lr: 5.600e-02, eta: 1:10:05, time: 0.838, data_time: 0.187, memory: 14751, decode.loss_ce: 0.0740, decode.acc_seg: 96.2383, aux_0.loss_ce: 0.0763, aux_0.acc_seg: 96.1681, aux_1.loss_ce: 0.0940, aux_1.acc_seg: 95.3506, aux_2.loss_ce: 0.1185, aux_2.loss_dice: 0.2522, aux_2.acc_seg: 96.0696, aux_3.loss_ce: 0.3250, aux_3.acc_seg: 93.4156, loss: 0.9400
2023-05-04 17:11:41,234 - mmseg - INFO - Iter [4800/10000]	lr: 5.552e-02, eta: 1:09:31, time: 0.896, data_time: 0.252, memory: 14751, decode.loss_ce: 0.0773, decode.acc_seg: 96.0528, aux_0.loss_ce: 0.0796, aux_0.acc_seg: 95.9978, aux_1.loss_ce: 0.0970, aux_1.acc_seg: 95.1569, aux_2.loss_ce: 0.1194, aux_2.loss_dice: 0.2541, aux_2.acc_seg: 96.0656, aux_3.loss_ce: 0.3254, aux_3.acc_seg: 93.3381, loss: 0.9529
2023-05-04 17:12:17,649 - mmseg - INFO - Iter [4850/10000]	lr: 5.504e-02, eta: 1:08:47, time: 0.730, data_time: 0.192, memory: 14751, decode.loss_ce: 0.0752, decode.acc_seg: 96.2269, aux_0.loss_ce: 0.0777, aux_0.acc_seg: 96.1608, aux_1.loss_ce: 0.0956, aux_1.acc_seg: 95.3202, aux_2.loss_ce: 0.1202, aux_2.loss_dice: 0.2555, aux_2.acc_seg: 96.0411, aux_3.loss_ce: 0.3315, aux_3.acc_seg: 93.4768, loss: 0.9557
2023-05-04 17:12:51,966 - mmseg - INFO - Iter [4900/10000]	lr: 5.456e-02, eta: 1:08:01, time: 0.686, data_time: 0.186, memory: 14751, decode.loss_ce: 0.0714, decode.acc_seg: 96.3394, aux_0.loss_ce: 0.0736, aux_0.acc_seg: 96.2760, aux_1.loss_ce: 0.0913, aux_1.acc_seg: 95.4215, aux_2.loss_ce: 0.1191, aux_2.loss_dice: 0.2534, aux_2.acc_seg: 96.0500, aux_3.loss_ce: 0.3254, aux_3.acc_seg: 93.4723, loss: 0.9340
2023-05-04 17:13:26,159 - mmseg - INFO - Iter [4950/10000]	lr: 5.408e-02, eta: 1:07:15, time: 0.684, data_time: 0.185, memory: 14751, decode.loss_ce: 0.0744, decode.acc_seg: 96.2707, aux_0.loss_ce: 0.0765, aux_0.acc_seg: 96.2132, aux_1.loss_ce: 0.0943, aux_1.acc_seg: 95.3765, aux_2.loss_ce: 0.1195, aux_2.loss_dice: 0.2542, aux_2.acc_seg: 96.0376, aux_3.loss_ce: 0.3292, aux_3.acc_seg: 93.4810, loss: 0.9481
2023-05-04 17:14:07,587 - mmseg - INFO - Saving checkpoint at 5000 iterations
2023-05-04 17:14:07,998 - mmseg - INFO - Exp name: detextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 17:14:07,998 - mmseg - INFO - Iter [5000/10000]	lr: 5.360e-02, eta: 1:06:37, time: 0.840, data_time: 0.253, memory: 14751, decode.loss_ce: 0.0718, decode.acc_seg: 96.3227, aux_0.loss_ce: 0.0739, aux_0.acc_seg: 96.2674, aux_1.loss_ce: 0.0907, aux_1.acc_seg: 95.4665, aux_2.loss_ce: 0.1193, aux_2.loss_dice: 0.2535, aux_2.acc_seg: 96.0379, aux_3.loss_ce: 0.3207, aux_3.acc_seg: 93.5850, loss: 0.9298
2023-05-04 17:14:11,448 - mmseg - INFO - per class results:
2023-05-04 17:14:11,449 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 86.67 | 94.04 |
|   Building  | 93.77 | 95.75 |
|     Car     | 93.41 | 96.41 |
| Column_Pole | 23.18 | 26.38 |
|    Fence    | 81.15 | 91.66 |
|  Pedestrian | 65.04 |  80.3 |
|     Road    | 97.72 | 98.45 |
|   Sidewalk  | 92.32 | 97.39 |
|  SignSymbol |  0.0  |  0.0  |
|     Sky     | 94.37 | 98.13 |
|     Tree    | 92.88 | 97.75 |
+-------------+-------+-------+
2023-05-04 17:14:11,449 - mmseg - INFO - Summary:
2023-05-04 17:14:11,449 - mmseg - INFO - 
+------+-------+-------+
| aAcc |  mIoU |  mAcc |
+------+-------+-------+
| 96.5 | 74.59 | 79.66 |
+------+-------+-------+
2023-05-04 17:14:11,450 - mmseg - INFO - Exp name: detextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 17:14:11,450 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9650, mIoU: 0.7459, mAcc: 0.7966, IoU.Bicyclist: 0.8667, IoU.Building: 0.9377, IoU.Car: 0.9341, IoU.Column_Pole: 0.2318, IoU.Fence: 0.8115, IoU.Pedestrian: 0.6504, IoU.Road: 0.9772, IoU.Sidewalk: 0.9232, IoU.SignSymbol: 0.0000, IoU.Sky: 0.9437, IoU.Tree: 0.9288, Acc.Bicyclist: 0.9404, Acc.Building: 0.9575, Acc.Car: 0.9641, Acc.Column_Pole: 0.2638, Acc.Fence: 0.9166, Acc.Pedestrian: 0.8030, Acc.Road: 0.9845, Acc.Sidewalk: 0.9739, Acc.SignSymbol: 0.0000, Acc.Sky: 0.9813, Acc.Tree: 0.9775
2023-05-04 17:14:52,985 - mmseg - INFO - Iter [5050/10000]	lr: 5.312e-02, eta: 1:06:01, time: 0.896, data_time: 0.245, memory: 14751, decode.loss_ce: 0.0728, decode.acc_seg: 96.3075, aux_0.loss_ce: 0.0751, aux_0.acc_seg: 96.2441, aux_1.loss_ce: 0.0925, aux_1.acc_seg: 95.4114, aux_2.loss_ce: 0.1206, aux_2.loss_dice: 0.2552, aux_2.acc_seg: 96.0108, aux_3.loss_ce: 0.3276, aux_3.acc_seg: 93.5192, loss: 0.9438
2023-05-04 17:15:34,534 - mmseg - INFO - Iter [5100/10000]	lr: 5.263e-02, eta: 1:05:23, time: 0.831, data_time: 0.176, memory: 14751, decode.loss_ce: 0.0730, decode.acc_seg: 96.2733, aux_0.loss_ce: 0.0752, aux_0.acc_seg: 96.2175, aux_1.loss_ce: 0.0924, aux_1.acc_seg: 95.4015, aux_2.loss_ce: 0.1192, aux_2.loss_dice: 0.2538, aux_2.acc_seg: 96.0506, aux_3.loss_ce: 0.3232, aux_3.acc_seg: 93.5177, loss: 0.9368
2023-05-04 17:16:19,347 - mmseg - INFO - Iter [5150/10000]	lr: 5.215e-02, eta: 1:04:47, time: 0.895, data_time: 0.245, memory: 14751, decode.loss_ce: 0.0694, decode.acc_seg: 96.3749, aux_0.loss_ce: 0.0713, aux_0.acc_seg: 96.3291, aux_1.loss_ce: 0.0884, aux_1.acc_seg: 95.5222, aux_2.loss_ce: 0.1177, aux_2.loss_dice: 0.2515, aux_2.acc_seg: 96.0764, aux_3.loss_ce: 0.3159, aux_3.acc_seg: 93.5547, loss: 0.9142
2023-05-04 17:17:00,973 - mmseg - INFO - Iter [5200/10000]	lr: 5.167e-02, eta: 1:04:09, time: 0.834, data_time: 0.177, memory: 14751, decode.loss_ce: 0.0700, decode.acc_seg: 96.3919, aux_0.loss_ce: 0.0720, aux_0.acc_seg: 96.3327, aux_1.loss_ce: 0.0890, aux_1.acc_seg: 95.5274, aux_2.loss_ce: 0.1170, aux_2.loss_dice: 0.2518, aux_2.acc_seg: 96.1292, aux_3.loss_ce: 0.3177, aux_3.acc_seg: 93.5979, loss: 0.9176
2023-05-04 17:17:42,865 - mmseg - INFO - Iter [5250/10000]	lr: 5.118e-02, eta: 1:03:30, time: 0.838, data_time: 0.177, memory: 14751, decode.loss_ce: 0.0703, decode.acc_seg: 96.3413, aux_0.loss_ce: 0.0723, aux_0.acc_seg: 96.2926, aux_1.loss_ce: 0.0897, aux_1.acc_seg: 95.4541, aux_2.loss_ce: 0.1192, aux_2.loss_dice: 0.2527, aux_2.acc_seg: 96.0419, aux_3.loss_ce: 0.3184, aux_3.acc_seg: 93.4060, loss: 0.9227
2023-05-04 17:18:24,469 - mmseg - INFO - Iter [5300/10000]	lr: 5.070e-02, eta: 1:02:51, time: 0.832, data_time: 0.180, memory: 14751, decode.loss_ce: 0.0721, decode.acc_seg: 96.2988, aux_0.loss_ce: 0.0742, aux_0.acc_seg: 96.2414, aux_1.loss_ce: 0.0922, aux_1.acc_seg: 95.3778, aux_2.loss_ce: 0.1200, aux_2.loss_dice: 0.2528, aux_2.acc_seg: 95.9797, aux_3.loss_ce: 0.3231, aux_3.acc_seg: 93.4126, loss: 0.9345
2023-05-04 17:19:09,400 - mmseg - INFO - Iter [5350/10000]	lr: 5.021e-02, eta: 1:02:16, time: 0.899, data_time: 0.252, memory: 14751, decode.loss_ce: 0.0737, decode.acc_seg: 96.2681, aux_0.loss_ce: 0.0758, aux_0.acc_seg: 96.2228, aux_1.loss_ce: 0.0936, aux_1.acc_seg: 95.3750, aux_2.loss_ce: 0.1213, aux_2.loss_dice: 0.2547, aux_2.acc_seg: 95.9739, aux_3.loss_ce: 0.3245, aux_3.acc_seg: 93.4911, loss: 0.9436
2023-05-04 17:19:50,862 - mmseg - INFO - Iter [5400/10000]	lr: 4.972e-02, eta: 1:01:36, time: 0.830, data_time: 0.176, memory: 14751, decode.loss_ce: 0.0700, decode.acc_seg: 96.3845, aux_0.loss_ce: 0.0720, aux_0.acc_seg: 96.3179, aux_1.loss_ce: 0.0888, aux_1.acc_seg: 95.5141, aux_2.loss_ce: 0.1164, aux_2.loss_dice: 0.2511, aux_2.acc_seg: 96.1570, aux_3.loss_ce: 0.3174, aux_3.acc_seg: 93.5684, loss: 0.9157
2023-05-04 17:20:24,258 - mmseg - INFO - Iter [5450/10000]	lr: 4.924e-02, eta: 1:00:51, time: 0.668, data_time: 0.178, memory: 14751, decode.loss_ce: 0.0730, decode.acc_seg: 96.2378, aux_0.loss_ce: 0.0746, aux_0.acc_seg: 96.2000, aux_1.loss_ce: 0.0922, aux_1.acc_seg: 95.3441, aux_2.loss_ce: 0.1192, aux_2.loss_dice: 0.2526, aux_2.acc_seg: 96.0223, aux_3.loss_ce: 0.3182, aux_3.acc_seg: 93.4193, loss: 0.9298
2023-05-04 17:20:58,401 - mmseg - INFO - Iter [5500/10000]	lr: 4.875e-02, eta: 1:00:06, time: 0.683, data_time: 0.182, memory: 14751, decode.loss_ce: 0.0712, decode.acc_seg: 96.3183, aux_0.loss_ce: 0.0733, aux_0.acc_seg: 96.2679, aux_1.loss_ce: 0.0908, aux_1.acc_seg: 95.4032, aux_2.loss_ce: 0.1203, aux_2.loss_dice: 0.2543, aux_2.acc_seg: 95.9930, aux_3.loss_ce: 0.3205, aux_3.acc_seg: 93.4323, loss: 0.9304
2023-05-04 17:21:35,795 - mmseg - INFO - Iter [5550/10000]	lr: 4.826e-02, eta: 0:59:23, time: 0.748, data_time: 0.250, memory: 14751, decode.loss_ce: 0.0702, decode.acc_seg: 96.3650, aux_0.loss_ce: 0.0721, aux_0.acc_seg: 96.3207, aux_1.loss_ce: 0.0893, aux_1.acc_seg: 95.4947, aux_2.loss_ce: 0.1191, aux_2.loss_dice: 0.2528, aux_2.acc_seg: 96.0452, aux_3.loss_ce: 0.3192, aux_3.acc_seg: 93.5107, loss: 0.9227
2023-05-04 17:22:16,742 - mmseg - INFO - Iter [5600/10000]	lr: 4.778e-02, eta: 0:58:44, time: 0.819, data_time: 0.177, memory: 14751, decode.loss_ce: 0.0695, decode.acc_seg: 96.3464, aux_0.loss_ce: 0.0713, aux_0.acc_seg: 96.3026, aux_1.loss_ce: 0.0878, aux_1.acc_seg: 95.4990, aux_2.loss_ce: 0.1176, aux_2.loss_dice: 0.2509, aux_2.acc_seg: 96.0639, aux_3.loss_ce: 0.3133, aux_3.acc_seg: 93.5244, loss: 0.9104
2023-05-04 17:22:58,298 - mmseg - INFO - Iter [5650/10000]	lr: 4.729e-02, eta: 0:58:05, time: 0.831, data_time: 0.178, memory: 14751, decode.loss_ce: 0.0704, decode.acc_seg: 96.4042, aux_0.loss_ce: 0.0725, aux_0.acc_seg: 96.3377, aux_1.loss_ce: 0.0897, aux_1.acc_seg: 95.5262, aux_2.loss_ce: 0.1191, aux_2.loss_dice: 0.2529, aux_2.acc_seg: 96.0385, aux_3.loss_ce: 0.3256, aux_3.acc_seg: 93.5833, loss: 0.9302
2023-05-04 17:23:43,770 - mmseg - INFO - Iter [5700/10000]	lr: 4.680e-02, eta: 0:57:29, time: 0.909, data_time: 0.250, memory: 14751, decode.loss_ce: 0.0718, decode.acc_seg: 96.3230, aux_0.loss_ce: 0.0738, aux_0.acc_seg: 96.2636, aux_1.loss_ce: 0.0911, aux_1.acc_seg: 95.4210, aux_2.loss_ce: 0.1188, aux_2.loss_dice: 0.2521, aux_2.acc_seg: 96.0254, aux_3.loss_ce: 0.3229, aux_3.acc_seg: 93.4835, loss: 0.9304
2023-05-04 17:24:25,604 - mmseg - INFO - Iter [5750/10000]	lr: 4.631e-02, eta: 0:56:50, time: 0.837, data_time: 0.176, memory: 14751, decode.loss_ce: 0.0706, decode.acc_seg: 96.3001, aux_0.loss_ce: 0.0725, aux_0.acc_seg: 96.2551, aux_1.loss_ce: 0.0883, aux_1.acc_seg: 95.5061, aux_2.loss_ce: 0.1145, aux_2.loss_dice: 0.2502, aux_2.acc_seg: 96.2148, aux_3.loss_ce: 0.3141, aux_3.acc_seg: 93.4971, loss: 0.9103
2023-05-04 17:25:07,166 - mmseg - INFO - Iter [5800/10000]	lr: 4.582e-02, eta: 0:56:11, time: 0.831, data_time: 0.177, memory: 14751, decode.loss_ce: 0.0718, decode.acc_seg: 96.3438, aux_0.loss_ce: 0.0739, aux_0.acc_seg: 96.2885, aux_1.loss_ce: 0.0902, aux_1.acc_seg: 95.4884, aux_2.loss_ce: 0.1202, aux_2.loss_dice: 0.2551, aux_2.acc_seg: 96.0180, aux_3.loss_ce: 0.3191, aux_3.acc_seg: 93.5154, loss: 0.9303
2023-05-04 17:25:48,942 - mmseg - INFO - Iter [5850/10000]	lr: 4.533e-02, eta: 0:55:32, time: 0.836, data_time: 0.179, memory: 14751, decode.loss_ce: 0.0888, decode.acc_seg: 95.7307, aux_0.loss_ce: 0.0904, aux_0.acc_seg: 95.7067, aux_1.loss_ce: 0.1062, aux_1.acc_seg: 94.8928, aux_2.loss_ce: 0.1184, aux_2.loss_dice: 0.2510, aux_2.acc_seg: 96.0685, aux_3.loss_ce: 0.3223, aux_3.acc_seg: 93.1754, loss: 0.9772
2023-05-04 17:26:33,981 - mmseg - INFO - Iter [5900/10000]	lr: 4.483e-02, eta: 0:54:56, time: 0.901, data_time: 0.245, memory: 14751, decode.loss_ce: 0.0903, decode.acc_seg: 95.5906, aux_0.loss_ce: 0.0933, aux_0.acc_seg: 95.5090, aux_1.loss_ce: 0.1123, aux_1.acc_seg: 94.6105, aux_2.loss_ce: 0.1189, aux_2.loss_dice: 0.2540, aux_2.acc_seg: 96.0527, aux_3.loss_ce: 0.3340, aux_3.acc_seg: 93.0600, loss: 1.0028
2023-05-04 17:27:15,866 - mmseg - INFO - Iter [5950/10000]	lr: 4.434e-02, eta: 0:54:16, time: 0.838, data_time: 0.178, memory: 14751, decode.loss_ce: 0.0770, decode.acc_seg: 96.1161, aux_0.loss_ce: 0.0789, aux_0.acc_seg: 96.0653, aux_1.loss_ce: 0.0963, aux_1.acc_seg: 95.1899, aux_2.loss_ce: 0.1171, aux_2.loss_dice: 0.2512, aux_2.acc_seg: 96.0950, aux_3.loss_ce: 0.3181, aux_3.acc_seg: 93.4383, loss: 0.9385
2023-05-04 17:27:54,917 - mmseg - INFO - Saving checkpoint at 6000 iterations
2023-05-04 17:27:55,223 - mmseg - INFO - Exp name: detextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 17:27:55,224 - mmseg - INFO - Iter [6000/10000]	lr: 4.385e-02, eta: 0:53:36, time: 0.790, data_time: 0.180, memory: 14751, decode.loss_ce: 0.0768, decode.acc_seg: 96.1498, aux_0.loss_ce: 0.0794, aux_0.acc_seg: 96.0677, aux_1.loss_ce: 0.0956, aux_1.acc_seg: 95.2820, aux_2.loss_ce: 0.1192, aux_2.loss_dice: 0.2542, aux_2.acc_seg: 96.0685, aux_3.loss_ce: 0.3258, aux_3.acc_seg: 93.4742, loss: 0.9510
2023-05-04 17:27:57,654 - mmseg - INFO - per class results:
2023-05-04 17:27:57,655 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 85.89 | 94.36 |
|   Building  |  92.6 | 94.04 |
|     Car     | 93.41 | 96.85 |
| Column_Pole | 26.41 | 33.04 |
|    Fence    |  76.4 | 82.49 |
|  Pedestrian | 62.65 | 86.09 |
|     Road    | 97.74 |  98.4 |
|   Sidewalk  | 91.88 | 97.89 |
|  SignSymbol |  0.0  |  0.0  |
|     Sky     | 94.04 | 98.06 |
|     Tree    | 90.92 | 98.41 |
+-------------+-------+-------+
2023-05-04 17:27:57,655 - mmseg - INFO - Summary:
2023-05-04 17:27:57,656 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 95.98 | 73.81 | 79.97 |
+-------+-------+-------+
2023-05-04 17:27:57,656 - mmseg - INFO - Exp name: detextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 17:27:57,656 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9598, mIoU: 0.7381, mAcc: 0.7997, IoU.Bicyclist: 0.8589, IoU.Building: 0.9260, IoU.Car: 0.9341, IoU.Column_Pole: 0.2641, IoU.Fence: 0.7640, IoU.Pedestrian: 0.6265, IoU.Road: 0.9774, IoU.Sidewalk: 0.9188, IoU.SignSymbol: 0.0000, IoU.Sky: 0.9404, IoU.Tree: 0.9092, Acc.Bicyclist: 0.9436, Acc.Building: 0.9404, Acc.Car: 0.9685, Acc.Column_Pole: 0.3304, Acc.Fence: 0.8249, Acc.Pedestrian: 0.8609, Acc.Road: 0.9840, Acc.Sidewalk: 0.9789, Acc.SignSymbol: 0.0000, Acc.Sky: 0.9806, Acc.Tree: 0.9841
2023-05-04 17:28:31,264 - mmseg - INFO - Iter [6050/10000]	lr: 4.336e-02, eta: 0:52:53, time: 0.718, data_time: 0.222, memory: 14751, decode.loss_ce: 0.0763, decode.acc_seg: 96.2069, aux_0.loss_ce: 0.0782, aux_0.acc_seg: 96.1622, aux_1.loss_ce: 0.0956, aux_1.acc_seg: 95.3136, aux_2.loss_ce: 0.1196, aux_2.loss_dice: 0.2534, aux_2.acc_seg: 96.0171, aux_3.loss_ce: 0.3228, aux_3.acc_seg: 93.4618, loss: 0.9460
2023-05-04 17:29:08,645 - mmseg - INFO - Iter [6100/10000]	lr: 4.286e-02, eta: 0:52:11, time: 0.748, data_time: 0.258, memory: 14751, decode.loss_ce: 0.0708, decode.acc_seg: 96.3623, aux_0.loss_ce: 0.0735, aux_0.acc_seg: 96.2762, aux_1.loss_ce: 0.0899, aux_1.acc_seg: 95.4777, aux_2.loss_ce: 0.1173, aux_2.loss_dice: 0.2508, aux_2.acc_seg: 96.0423, aux_3.loss_ce: 0.3146, aux_3.acc_seg: 93.5712, loss: 0.9170
2023-05-04 17:29:42,467 - mmseg - INFO - Iter [6150/10000]	lr: 4.237e-02, eta: 0:51:27, time: 0.676, data_time: 0.182, memory: 14751, decode.loss_ce: 0.0748, decode.acc_seg: 96.2004, aux_0.loss_ce: 0.0762, aux_0.acc_seg: 96.1726, aux_1.loss_ce: 0.0941, aux_1.acc_seg: 95.3031, aux_2.loss_ce: 0.1203, aux_2.loss_dice: 0.2531, aux_2.acc_seg: 95.9997, aux_3.loss_ce: 0.3209, aux_3.acc_seg: 93.3732, loss: 0.9395
2023-05-04 17:30:15,689 - mmseg - INFO - Iter [6200/10000]	lr: 4.187e-02, eta: 0:50:42, time: 0.664, data_time: 0.179, memory: 14751, decode.loss_ce: 0.0691, decode.acc_seg: 96.4488, aux_0.loss_ce: 0.0711, aux_0.acc_seg: 96.3950, aux_1.loss_ce: 0.0887, aux_1.acc_seg: 95.5438, aux_2.loss_ce: 0.1195, aux_2.loss_dice: 0.2522, aux_2.acc_seg: 95.9817, aux_3.loss_ce: 0.3182, aux_3.acc_seg: 93.6237, loss: 0.9188
2023-05-04 17:30:52,635 - mmseg - INFO - Iter [6250/10000]	lr: 4.138e-02, eta: 0:50:01, time: 0.739, data_time: 0.258, memory: 14751, decode.loss_ce: 0.0688, decode.acc_seg: 96.3756, aux_0.loss_ce: 0.0708, aux_0.acc_seg: 96.3317, aux_1.loss_ce: 0.0877, aux_1.acc_seg: 95.4870, aux_2.loss_ce: 0.1169, aux_2.loss_dice: 0.2498, aux_2.acc_seg: 96.0685, aux_3.loss_ce: 0.3091, aux_3.acc_seg: 93.5424, loss: 0.9031
2023-05-04 17:31:25,972 - mmseg - INFO - Iter [6300/10000]	lr: 4.088e-02, eta: 0:49:17, time: 0.667, data_time: 0.188, memory: 14751, decode.loss_ce: 0.0701, decode.acc_seg: 96.3826, aux_0.loss_ce: 0.0718, aux_0.acc_seg: 96.3540, aux_1.loss_ce: 0.0886, aux_1.acc_seg: 95.5389, aux_2.loss_ce: 0.1170, aux_2.loss_dice: 0.2517, aux_2.acc_seg: 96.1184, aux_3.loss_ce: 0.3148, aux_3.acc_seg: 93.5593, loss: 0.9140
2023-05-04 17:31:59,333 - mmseg - INFO - Iter [6350/10000]	lr: 4.038e-02, eta: 0:48:33, time: 0.667, data_time: 0.183, memory: 14751, decode.loss_ce: 0.0762, decode.acc_seg: 96.1668, aux_0.loss_ce: 0.0776, aux_0.acc_seg: 96.1411, aux_1.loss_ce: 0.0950, aux_1.acc_seg: 95.3243, aux_2.loss_ce: 0.1202, aux_2.loss_dice: 0.2544, aux_2.acc_seg: 96.0354, aux_3.loss_ce: 0.3194, aux_3.acc_seg: 93.4811, loss: 0.9429
2023-05-04 17:32:32,624 - mmseg - INFO - Iter [6400/10000]	lr: 3.988e-02, eta: 0:47:49, time: 0.666, data_time: 0.186, memory: 14751, decode.loss_ce: 0.0691, decode.acc_seg: 96.4709, aux_0.loss_ce: 0.0710, aux_0.acc_seg: 96.4207, aux_1.loss_ce: 0.0871, aux_1.acc_seg: 95.6298, aux_2.loss_ce: 0.1169, aux_2.loss_dice: 0.2506, aux_2.acc_seg: 96.1171, aux_3.loss_ce: 0.3128, aux_3.acc_seg: 93.7037, loss: 0.9075
2023-05-04 17:33:09,200 - mmseg - INFO - Iter [6450/10000]	lr: 3.938e-02, eta: 0:47:08, time: 0.732, data_time: 0.250, memory: 14751, decode.loss_ce: 0.0688, decode.acc_seg: 96.4673, aux_0.loss_ce: 0.0713, aux_0.acc_seg: 96.3966, aux_1.loss_ce: 0.0884, aux_1.acc_seg: 95.5589, aux_2.loss_ce: 0.1182, aux_2.loss_dice: 0.2511, aux_2.acc_seg: 96.0522, aux_3.loss_ce: 0.3170, aux_3.acc_seg: 93.5240, loss: 0.9149
2023-05-04 17:33:42,526 - mmseg - INFO - Iter [6500/10000]	lr: 3.888e-02, eta: 0:46:24, time: 0.667, data_time: 0.185, memory: 14751, decode.loss_ce: 0.0701, decode.acc_seg: 96.4896, aux_0.loss_ce: 0.0719, aux_0.acc_seg: 96.4443, aux_1.loss_ce: 0.0888, aux_1.acc_seg: 95.6356, aux_2.loss_ce: 0.1205, aux_2.loss_dice: 0.2547, aux_2.acc_seg: 95.9855, aux_3.loss_ce: 0.3236, aux_3.acc_seg: 93.6240, loss: 0.9296
2023-05-04 17:34:16,178 - mmseg - INFO - Iter [6550/10000]	lr: 3.838e-02, eta: 0:45:41, time: 0.673, data_time: 0.181, memory: 14751, decode.loss_ce: 0.0669, decode.acc_seg: 96.5183, aux_0.loss_ce: 0.0683, aux_0.acc_seg: 96.4871, aux_1.loss_ce: 0.0857, aux_1.acc_seg: 95.6643, aux_2.loss_ce: 0.1188, aux_2.loss_dice: 0.2512, aux_2.acc_seg: 96.0097, aux_3.loss_ce: 0.3114, aux_3.acc_seg: 93.6969, loss: 0.9024
2023-05-04 17:34:57,850 - mmseg - INFO - Iter [6600/10000]	lr: 3.788e-02, eta: 0:45:02, time: 0.833, data_time: 0.178, memory: 14751, decode.loss_ce: 0.0667, decode.acc_seg: 96.5116, aux_0.loss_ce: 0.0687, aux_0.acc_seg: 96.4694, aux_1.loss_ce: 0.0861, aux_1.acc_seg: 95.6147, aux_2.loss_ce: 0.1179, aux_2.loss_dice: 0.2512, aux_2.acc_seg: 96.0590, aux_3.loss_ce: 0.3119, aux_3.acc_seg: 93.6434, loss: 0.9025
2023-05-04 17:35:43,244 - mmseg - INFO - Iter [6650/10000]	lr: 3.738e-02, eta: 0:44:26, time: 0.908, data_time: 0.250, memory: 14751, decode.loss_ce: 0.0708, decode.acc_seg: 96.2709, aux_0.loss_ce: 0.0727, aux_0.acc_seg: 96.2326, aux_1.loss_ce: 0.0895, aux_1.acc_seg: 95.4136, aux_2.loss_ce: 0.1191, aux_2.loss_dice: 0.2507, aux_2.acc_seg: 95.9968, aux_3.loss_ce: 0.3115, aux_3.acc_seg: 93.4723, loss: 0.9144
2023-05-04 17:36:25,025 - mmseg - INFO - Iter [6700/10000]	lr: 3.688e-02, eta: 0:43:47, time: 0.836, data_time: 0.176, memory: 14751, decode.loss_ce: 0.0664, decode.acc_seg: 96.5325, aux_0.loss_ce: 0.0684, aux_0.acc_seg: 96.4802, aux_1.loss_ce: 0.0857, aux_1.acc_seg: 95.6194, aux_2.loss_ce: 0.1171, aux_2.loss_dice: 0.2505, aux_2.acc_seg: 96.0892, aux_3.loss_ce: 0.3075, aux_3.acc_seg: 93.6582, loss: 0.8955
2023-05-04 17:37:06,783 - mmseg - INFO - Iter [6750/10000]	lr: 3.638e-02, eta: 0:43:08, time: 0.834, data_time: 0.177, memory: 14751, decode.loss_ce: 0.0668, decode.acc_seg: 96.5693, aux_0.loss_ce: 0.0686, aux_0.acc_seg: 96.5219, aux_1.loss_ce: 0.0857, aux_1.acc_seg: 95.7009, aux_2.loss_ce: 0.1178, aux_2.loss_dice: 0.2515, aux_2.acc_seg: 96.0647, aux_3.loss_ce: 0.3151, aux_3.acc_seg: 93.6768, loss: 0.9055
2023-05-04 17:37:51,683 - mmseg - INFO - Iter [6800/10000]	lr: 3.587e-02, eta: 0:42:30, time: 0.899, data_time: 0.243, memory: 14751, decode.loss_ce: 0.0661, decode.acc_seg: 96.5660, aux_0.loss_ce: 0.0679, aux_0.acc_seg: 96.5152, aux_1.loss_ce: 0.0855, aux_1.acc_seg: 95.6739, aux_2.loss_ce: 0.1171, aux_2.loss_dice: 0.2504, aux_2.acc_seg: 96.0698, aux_3.loss_ce: 0.3114, aux_3.acc_seg: 93.6923, loss: 0.8984
2023-05-04 17:38:32,278 - mmseg - INFO - Iter [6850/10000]	lr: 3.537e-02, eta: 0:41:51, time: 0.813, data_time: 0.178, memory: 14751, decode.loss_ce: 0.0680, decode.acc_seg: 96.5428, aux_0.loss_ce: 0.0696, aux_0.acc_seg: 96.5046, aux_1.loss_ce: 0.0867, aux_1.acc_seg: 95.6739, aux_2.loss_ce: 0.1178, aux_2.loss_dice: 0.2521, aux_2.acc_seg: 96.1018, aux_3.loss_ce: 0.3162, aux_3.acc_seg: 93.6354, loss: 0.9105
2023-05-04 17:39:06,189 - mmseg - INFO - Iter [6900/10000]	lr: 3.486e-02, eta: 0:41:08, time: 0.678, data_time: 0.180, memory: 14751, decode.loss_ce: 0.0704, decode.acc_seg: 96.4112, aux_0.loss_ce: 0.0721, aux_0.acc_seg: 96.3590, aux_1.loss_ce: 0.0900, aux_1.acc_seg: 95.4876, aux_2.loss_ce: 0.1202, aux_2.loss_dice: 0.2528, aux_2.acc_seg: 95.9574, aux_3.loss_ce: 0.3192, aux_3.acc_seg: 93.4469, loss: 0.9247
2023-05-04 17:39:46,646 - mmseg - INFO - Iter [6950/10000]	lr: 3.436e-02, eta: 0:40:29, time: 0.809, data_time: 0.172, memory: 14751, decode.loss_ce: 0.0691, decode.acc_seg: 96.4288, aux_0.loss_ce: 0.0710, aux_0.acc_seg: 96.3828, aux_1.loss_ce: 0.0880, aux_1.acc_seg: 95.5376, aux_2.loss_ce: 0.1196, aux_2.loss_dice: 0.2532, aux_2.acc_seg: 96.0096, aux_3.loss_ce: 0.3128, aux_3.acc_seg: 93.5485, loss: 0.9137
2023-05-04 17:40:31,416 - mmseg - INFO - Saving checkpoint at 7000 iterations
2023-05-04 17:40:31,756 - mmseg - INFO - Exp name: detextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 17:40:31,756 - mmseg - INFO - Iter [7000/10000]	lr: 3.385e-02, eta: 0:39:51, time: 0.905, data_time: 0.238, memory: 14751, decode.loss_ce: 0.0648, decode.acc_seg: 96.6005, aux_0.loss_ce: 0.0666, aux_0.acc_seg: 96.5440, aux_1.loss_ce: 0.0830, aux_1.acc_seg: 95.7285, aux_2.loss_ce: 0.1172, aux_2.loss_dice: 0.2510, aux_2.acc_seg: 96.0922, aux_3.loss_ce: 0.3094, aux_3.acc_seg: 93.7012, loss: 0.8920
2023-05-04 17:40:34,395 - mmseg - INFO - per class results:
2023-05-04 17:40:34,396 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 86.71 | 94.42 |
|   Building  | 93.42 | 95.15 |
|     Car     | 92.91 |  95.2 |
| Column_Pole | 20.78 | 22.75 |
|    Fence    | 82.18 | 91.62 |
|  Pedestrian | 67.35 | 83.04 |
|     Road    | 97.73 | 98.47 |
|   Sidewalk  | 92.26 | 97.72 |
|  SignSymbol |  0.0  |  0.0  |
|     Sky     | 93.31 | 95.15 |
|     Tree    | 91.49 | 98.99 |
+-------------+-------+-------+
2023-05-04 17:40:34,396 - mmseg - INFO - Summary:
2023-05-04 17:40:34,397 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 96.29 | 74.38 | 79.32 |
+-------+-------+-------+
2023-05-04 17:40:34,397 - mmseg - INFO - Exp name: detextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 17:40:34,397 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9629, mIoU: 0.7438, mAcc: 0.7932, IoU.Bicyclist: 0.8671, IoU.Building: 0.9342, IoU.Car: 0.9291, IoU.Column_Pole: 0.2078, IoU.Fence: 0.8218, IoU.Pedestrian: 0.6735, IoU.Road: 0.9773, IoU.Sidewalk: 0.9226, IoU.SignSymbol: 0.0000, IoU.Sky: 0.9331, IoU.Tree: 0.9149, Acc.Bicyclist: 0.9442, Acc.Building: 0.9515, Acc.Car: 0.9520, Acc.Column_Pole: 0.2275, Acc.Fence: 0.9162, Acc.Pedestrian: 0.8304, Acc.Road: 0.9847, Acc.Sidewalk: 0.9772, Acc.SignSymbol: 0.0000, Acc.Sky: 0.9515, Acc.Tree: 0.9899
2023-05-04 17:41:15,911 - mmseg - INFO - Iter [7050/10000]	lr: 3.334e-02, eta: 0:39:13, time: 0.880, data_time: 0.223, memory: 14751, decode.loss_ce: 0.0657, decode.acc_seg: 96.5710, aux_0.loss_ce: 0.0675, aux_0.acc_seg: 96.5344, aux_1.loss_ce: 0.0841, aux_1.acc_seg: 95.7176, aux_2.loss_ce: 0.1171, aux_2.loss_dice: 0.2508, aux_2.acc_seg: 96.0831, aux_3.loss_ce: 0.3111, aux_3.acc_seg: 93.6666, loss: 0.8963
2023-05-04 17:41:57,697 - mmseg - INFO - Iter [7100/10000]	lr: 3.283e-02, eta: 0:38:34, time: 0.835, data_time: 0.178, memory: 14751, decode.loss_ce: 0.0654, decode.acc_seg: 96.5347, aux_0.loss_ce: 0.0671, aux_0.acc_seg: 96.4977, aux_1.loss_ce: 0.0835, aux_1.acc_seg: 95.6868, aux_2.loss_ce: 0.1166, aux_2.loss_dice: 0.2488, aux_2.acc_seg: 96.0528, aux_3.loss_ce: 0.3071, aux_3.acc_seg: 93.6163, loss: 0.8885
2023-05-04 17:42:39,792 - mmseg - INFO - Iter [7150/10000]	lr: 3.232e-02, eta: 0:37:55, time: 0.843, data_time: 0.180, memory: 14751, decode.loss_ce: 0.0675, decode.acc_seg: 96.4959, aux_0.loss_ce: 0.0695, aux_0.acc_seg: 96.4473, aux_1.loss_ce: 0.0867, aux_1.acc_seg: 95.6061, aux_2.loss_ce: 0.1194, aux_2.loss_dice: 0.2522, aux_2.acc_seg: 95.9978, aux_3.loss_ce: 0.3126, aux_3.acc_seg: 93.6208, loss: 0.9080
2023-05-04 17:43:24,018 - mmseg - INFO - Iter [7200/10000]	lr: 3.181e-02, eta: 0:37:17, time: 0.885, data_time: 0.243, memory: 14751, decode.loss_ce: 0.0641, decode.acc_seg: 96.5948, aux_0.loss_ce: 0.0659, aux_0.acc_seg: 96.5397, aux_1.loss_ce: 0.0826, aux_1.acc_seg: 95.7071, aux_2.loss_ce: 0.1173, aux_2.loss_dice: 0.2495, aux_2.acc_seg: 96.0245, aux_3.loss_ce: 0.3036, aux_3.acc_seg: 93.6984, loss: 0.8830
2023-05-04 17:43:59,700 - mmseg - INFO - Iter [7250/10000]	lr: 3.130e-02, eta: 0:36:35, time: 0.712, data_time: 0.175, memory: 14751, decode.loss_ce: 0.0674, decode.acc_seg: 96.4674, aux_0.loss_ce: 0.0692, aux_0.acc_seg: 96.4206, aux_1.loss_ce: 0.0864, aux_1.acc_seg: 95.5662, aux_2.loss_ce: 0.1184, aux_2.loss_dice: 0.2512, aux_2.acc_seg: 96.0090, aux_3.loss_ce: 0.3104, aux_3.acc_seg: 93.5101, loss: 0.9031
2023-05-04 17:44:41,664 - mmseg - INFO - Iter [7300/10000]	lr: 3.079e-02, eta: 0:35:56, time: 0.840, data_time: 0.182, memory: 14751, decode.loss_ce: 0.0643, decode.acc_seg: 96.6430, aux_0.loss_ce: 0.0660, aux_0.acc_seg: 96.6046, aux_1.loss_ce: 0.0821, aux_1.acc_seg: 95.8180, aux_2.loss_ce: 0.1174, aux_2.loss_dice: 0.2523, aux_2.acc_seg: 96.1038, aux_3.loss_ce: 0.3093, aux_3.acc_seg: 93.6680, loss: 0.8916
2023-05-04 17:45:27,130 - mmseg - INFO - Iter [7350/10000]	lr: 3.027e-02, eta: 0:35:18, time: 0.909, data_time: 0.249, memory: 14751, decode.loss_ce: 0.0648, decode.acc_seg: 96.6610, aux_0.loss_ce: 0.0668, aux_0.acc_seg: 96.6089, aux_1.loss_ce: 0.0831, aux_1.acc_seg: 95.8170, aux_2.loss_ce: 0.1178, aux_2.loss_dice: 0.2508, aux_2.acc_seg: 96.0401, aux_3.loss_ce: 0.3123, aux_3.acc_seg: 93.7591, loss: 0.8956
2023-05-04 17:46:08,977 - mmseg - INFO - Iter [7400/10000]	lr: 2.976e-02, eta: 0:34:39, time: 0.836, data_time: 0.176, memory: 14751, decode.loss_ce: 0.0669, decode.acc_seg: 96.5475, aux_0.loss_ce: 0.0688, aux_0.acc_seg: 96.4993, aux_1.loss_ce: 0.0859, aux_1.acc_seg: 95.6628, aux_2.loss_ce: 0.1208, aux_2.loss_dice: 0.2528, aux_2.acc_seg: 95.9685, aux_3.loss_ce: 0.3148, aux_3.acc_seg: 93.6143, loss: 0.9099
2023-05-04 17:46:50,963 - mmseg - INFO - Iter [7450/10000]	lr: 2.924e-02, eta: 0:33:59, time: 0.841, data_time: 0.179, memory: 14751, decode.loss_ce: 0.0668, decode.acc_seg: 96.4966, aux_0.loss_ce: 0.0684, aux_0.acc_seg: 96.4716, aux_1.loss_ce: 0.0857, aux_1.acc_seg: 95.6178, aux_2.loss_ce: 0.1199, aux_2.loss_dice: 0.2511, aux_2.acc_seg: 95.9403, aux_3.loss_ce: 0.3117, aux_3.acc_seg: 93.5418, loss: 0.9036
2023-05-04 17:47:33,062 - mmseg - INFO - Iter [7500/10000]	lr: 2.873e-02, eta: 0:33:20, time: 0.842, data_time: 0.178, memory: 14751, decode.loss_ce: 0.0628, decode.acc_seg: 96.7259, aux_0.loss_ce: 0.0646, aux_0.acc_seg: 96.6835, aux_1.loss_ce: 0.0812, aux_1.acc_seg: 95.8747, aux_2.loss_ce: 0.1154, aux_2.loss_dice: 0.2503, aux_2.acc_seg: 96.1493, aux_3.loss_ce: 0.3075, aux_3.acc_seg: 93.8189, loss: 0.8817
2023-05-04 17:48:13,942 - mmseg - INFO - Iter [7550/10000]	lr: 2.821e-02, eta: 0:32:40, time: 0.818, data_time: 0.250, memory: 14751, decode.loss_ce: 0.0638, decode.acc_seg: 96.6874, aux_0.loss_ce: 0.0658, aux_0.acc_seg: 96.6359, aux_1.loss_ce: 0.0822, aux_1.acc_seg: 95.8571, aux_2.loss_ce: 0.1176, aux_2.loss_dice: 0.2505, aux_2.acc_seg: 96.0533, aux_3.loss_ce: 0.3113, aux_3.acc_seg: 93.7535, loss: 0.8913
2023-05-04 17:48:53,024 - mmseg - INFO - Iter [7600/10000]	lr: 2.769e-02, eta: 0:32:00, time: 0.781, data_time: 0.184, memory: 14751, decode.loss_ce: 0.0630, decode.acc_seg: 96.6857, aux_0.loss_ce: 0.0650, aux_0.acc_seg: 96.6420, aux_1.loss_ce: 0.0814, aux_1.acc_seg: 95.8234, aux_2.loss_ce: 0.1169, aux_2.loss_dice: 0.2499, aux_2.acc_seg: 96.0602, aux_3.loss_ce: 0.3038, aux_3.acc_seg: 93.7716, loss: 0.8801
2023-05-04 17:49:34,924 - mmseg - INFO - Iter [7650/10000]	lr: 2.717e-02, eta: 0:31:21, time: 0.837, data_time: 0.176, memory: 14751, decode.loss_ce: 0.0642, decode.acc_seg: 96.6386, aux_0.loss_ce: 0.0663, aux_0.acc_seg: 96.5815, aux_1.loss_ce: 0.0832, aux_1.acc_seg: 95.7343, aux_2.loss_ce: 0.1199, aux_2.loss_dice: 0.2513, aux_2.acc_seg: 95.9496, aux_3.loss_ce: 0.3101, aux_3.acc_seg: 93.7162, loss: 0.8950
2023-05-04 17:50:16,671 - mmseg - INFO - Iter [7700/10000]	lr: 2.665e-02, eta: 0:30:41, time: 0.835, data_time: 0.176, memory: 14751, decode.loss_ce: 0.0626, decode.acc_seg: 96.6926, aux_0.loss_ce: 0.0644, aux_0.acc_seg: 96.6406, aux_1.loss_ce: 0.0810, aux_1.acc_seg: 95.8276, aux_2.loss_ce: 0.1175, aux_2.loss_dice: 0.2503, aux_2.acc_seg: 96.0377, aux_3.loss_ce: 0.3047, aux_3.acc_seg: 93.7676, loss: 0.8805
2023-05-04 17:51:01,717 - mmseg - INFO - Iter [7750/10000]	lr: 2.613e-02, eta: 0:30:03, time: 0.901, data_time: 0.246, memory: 14751, decode.loss_ce: 0.0626, decode.acc_seg: 96.6626, aux_0.loss_ce: 0.0647, aux_0.acc_seg: 96.6010, aux_1.loss_ce: 0.0812, aux_1.acc_seg: 95.7649, aux_2.loss_ce: 0.1175, aux_2.loss_dice: 0.2481, aux_2.acc_seg: 96.0163, aux_3.loss_ce: 0.3040, aux_3.acc_seg: 93.6612, loss: 0.8781
2023-05-04 17:51:43,663 - mmseg - INFO - Iter [7800/10000]	lr: 2.561e-02, eta: 0:29:23, time: 0.839, data_time: 0.179, memory: 14751, decode.loss_ce: 0.0613, decode.acc_seg: 96.7672, aux_0.loss_ce: 0.0630, aux_0.acc_seg: 96.7320, aux_1.loss_ce: 0.0797, aux_1.acc_seg: 95.9121, aux_2.loss_ce: 0.1177, aux_2.loss_dice: 0.2502, aux_2.acc_seg: 96.0227, aux_3.loss_ce: 0.3067, aux_3.acc_seg: 93.8105, loss: 0.8787
2023-05-04 17:52:25,903 - mmseg - INFO - Iter [7850/10000]	lr: 2.508e-02, eta: 0:28:44, time: 0.845, data_time: 0.180, memory: 14751, decode.loss_ce: 0.0626, decode.acc_seg: 96.6964, aux_0.loss_ce: 0.0645, aux_0.acc_seg: 96.6516, aux_1.loss_ce: 0.0818, aux_1.acc_seg: 95.8007, aux_2.loss_ce: 0.1185, aux_2.loss_dice: 0.2512, aux_2.acc_seg: 96.0213, aux_3.loss_ce: 0.3091, aux_3.acc_seg: 93.6801, loss: 0.8877
2023-05-04 17:53:04,349 - mmseg - INFO - Iter [7900/10000]	lr: 2.456e-02, eta: 0:28:03, time: 0.770, data_time: 0.253, memory: 14751, decode.loss_ce: 0.0623, decode.acc_seg: 96.7062, aux_0.loss_ce: 0.0644, aux_0.acc_seg: 96.6561, aux_1.loss_ce: 0.0804, aux_1.acc_seg: 95.8524, aux_2.loss_ce: 0.1168, aux_2.loss_dice: 0.2501, aux_2.acc_seg: 96.0787, aux_3.loss_ce: 0.3065, aux_3.acc_seg: 93.7330, loss: 0.8805
2023-05-04 17:53:46,146 - mmseg - INFO - Iter [7950/10000]	lr: 2.403e-02, eta: 0:27:23, time: 0.836, data_time: 0.180, memory: 14751, decode.loss_ce: 0.0629, decode.acc_seg: 96.6643, aux_0.loss_ce: 0.0646, aux_0.acc_seg: 96.6340, aux_1.loss_ce: 0.0809, aux_1.acc_seg: 95.8204, aux_2.loss_ce: 0.1159, aux_2.loss_dice: 0.2490, aux_2.acc_seg: 96.1072, aux_3.loss_ce: 0.3023, aux_3.acc_seg: 93.7131, loss: 0.8757
2023-05-04 17:54:27,721 - mmseg - INFO - Saving checkpoint at 8000 iterations
2023-05-04 17:54:28,079 - mmseg - INFO - Exp name: detextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 17:54:28,079 - mmseg - INFO - Iter [8000/10000]	lr: 2.350e-02, eta: 0:26:44, time: 0.842, data_time: 0.180, memory: 14751, decode.loss_ce: 0.0614, decode.acc_seg: 96.7210, aux_0.loss_ce: 0.0634, aux_0.acc_seg: 96.6764, aux_1.loss_ce: 0.0802, aux_1.acc_seg: 95.8502, aux_2.loss_ce: 0.1170, aux_2.loss_dice: 0.2492, aux_2.acc_seg: 96.0489, aux_3.loss_ce: 0.3019, aux_3.acc_seg: 93.7629, loss: 0.8731
2023-05-04 17:54:30,676 - mmseg - INFO - per class results:
2023-05-04 17:54:30,677 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  |  86.8 | 94.18 |
|   Building  | 92.83 |  94.9 |
|     Car     | 93.64 |  95.8 |
| Column_Pole | 29.68 | 35.49 |
|    Fence    |  82.3 | 90.91 |
|  Pedestrian | 65.76 | 80.92 |
|     Road    |  97.9 | 98.68 |
|   Sidewalk  | 92.74 | 97.02 |
|  SignSymbol |  0.09 |  0.09 |
|     Sky     | 94.31 | 96.93 |
|     Tree    | 91.79 | 98.55 |
+-------------+-------+-------+
2023-05-04 17:54:30,677 - mmseg - INFO - Summary:
2023-05-04 17:54:30,677 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 96.36 | 75.26 | 80.32 |
+-------+-------+-------+
2023-05-04 17:54:30,677 - mmseg - INFO - Exp name: detextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 17:54:30,677 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9636, mIoU: 0.7526, mAcc: 0.8032, IoU.Bicyclist: 0.8680, IoU.Building: 0.9283, IoU.Car: 0.9364, IoU.Column_Pole: 0.2968, IoU.Fence: 0.8230, IoU.Pedestrian: 0.6576, IoU.Road: 0.9790, IoU.Sidewalk: 0.9274, IoU.SignSymbol: 0.0009, IoU.Sky: 0.9431, IoU.Tree: 0.9179, Acc.Bicyclist: 0.9418, Acc.Building: 0.9490, Acc.Car: 0.9580, Acc.Column_Pole: 0.3549, Acc.Fence: 0.9091, Acc.Pedestrian: 0.8092, Acc.Road: 0.9868, Acc.Sidewalk: 0.9702, Acc.SignSymbol: 0.0009, Acc.Sky: 0.9693, Acc.Tree: 0.9855
2023-05-04 17:55:12,523 - mmseg - INFO - Iter [8050/10000]	lr: 2.297e-02, eta: 0:26:05, time: 0.886, data_time: 0.233, memory: 14751, decode.loss_ce: 0.0668, decode.acc_seg: 96.5335, aux_0.loss_ce: 0.0682, aux_0.acc_seg: 96.4965, aux_1.loss_ce: 0.0848, aux_1.acc_seg: 95.7002, aux_2.loss_ce: 0.1186, aux_2.loss_dice: 0.2513, aux_2.acc_seg: 96.0141, aux_3.loss_ce: 0.3112, aux_3.acc_seg: 93.6706, loss: 0.9008
2023-05-04 17:55:57,938 - mmseg - INFO - Iter [8100/10000]	lr: 2.244e-02, eta: 0:25:26, time: 0.908, data_time: 0.247, memory: 14751, decode.loss_ce: 0.0637, decode.acc_seg: 96.6585, aux_0.loss_ce: 0.0652, aux_0.acc_seg: 96.6404, aux_1.loss_ce: 0.0818, aux_1.acc_seg: 95.8277, aux_2.loss_ce: 0.1169, aux_2.loss_dice: 0.2500, aux_2.acc_seg: 96.0546, aux_3.loss_ce: 0.3101, aux_3.acc_seg: 93.7841, loss: 0.8877
2023-05-04 17:56:39,949 - mmseg - INFO - Iter [8150/10000]	lr: 2.191e-02, eta: 0:24:46, time: 0.840, data_time: 0.181, memory: 14751, decode.loss_ce: 0.0610, decode.acc_seg: 96.7486, aux_0.loss_ce: 0.0628, aux_0.acc_seg: 96.7098, aux_1.loss_ce: 0.0794, aux_1.acc_seg: 95.8723, aux_2.loss_ce: 0.1181, aux_2.loss_dice: 0.2497, aux_2.acc_seg: 96.0000, aux_3.loss_ce: 0.3035, aux_3.acc_seg: 93.7310, loss: 0.8745
2023-05-04 17:57:19,971 - mmseg - INFO - Iter [8200/10000]	lr: 2.138e-02, eta: 0:24:06, time: 0.801, data_time: 0.180, memory: 14751, decode.loss_ce: 0.0604, decode.acc_seg: 96.7218, aux_0.loss_ce: 0.0624, aux_0.acc_seg: 96.6771, aux_1.loss_ce: 0.0789, aux_1.acc_seg: 95.8440, aux_2.loss_ce: 0.1163, aux_2.loss_dice: 0.2485, aux_2.acc_seg: 96.0993, aux_3.loss_ce: 0.2992, aux_3.acc_seg: 93.7607, loss: 0.8657
2023-05-04 17:57:57,531 - mmseg - INFO - Iter [8250/10000]	lr: 2.084e-02, eta: 0:23:25, time: 0.750, data_time: 0.182, memory: 14751, decode.loss_ce: 0.0617, decode.acc_seg: 96.7451, aux_0.loss_ce: 0.0634, aux_0.acc_seg: 96.7028, aux_1.loss_ce: 0.0800, aux_1.acc_seg: 95.8837, aux_2.loss_ce: 0.1172, aux_2.loss_dice: 0.2498, aux_2.acc_seg: 96.0401, aux_3.loss_ce: 0.3056, aux_3.acc_seg: 93.7120, loss: 0.8778
2023-05-04 17:58:42,408 - mmseg - INFO - Iter [8300/10000]	lr: 2.031e-02, eta: 0:22:46, time: 0.898, data_time: 0.251, memory: 14751, decode.loss_ce: 0.0609, decode.acc_seg: 96.7726, aux_0.loss_ce: 0.0627, aux_0.acc_seg: 96.7317, aux_1.loss_ce: 0.0794, aux_1.acc_seg: 95.9170, aux_2.loss_ce: 0.1167, aux_2.loss_dice: 0.2492, aux_2.acc_seg: 96.0510, aux_3.loss_ce: 0.3029, aux_3.acc_seg: 93.8078, loss: 0.8717
2023-05-04 17:59:24,427 - mmseg - INFO - Iter [8350/10000]	lr: 1.977e-02, eta: 0:22:06, time: 0.839, data_time: 0.188, memory: 14751, decode.loss_ce: 0.0613, decode.acc_seg: 96.7142, aux_0.loss_ce: 0.0629, aux_0.acc_seg: 96.6769, aux_1.loss_ce: 0.0797, aux_1.acc_seg: 95.8459, aux_2.loss_ce: 0.1183, aux_2.loss_dice: 0.2489, aux_2.acc_seg: 95.9685, aux_3.loss_ce: 0.3019, aux_3.acc_seg: 93.7240, loss: 0.8730
2023-05-04 18:00:06,550 - mmseg - INFO - Iter [8400/10000]	lr: 1.923e-02, eta: 0:21:26, time: 0.843, data_time: 0.187, memory: 14751, decode.loss_ce: 0.0628, decode.acc_seg: 96.6808, aux_0.loss_ce: 0.0648, aux_0.acc_seg: 96.6396, aux_1.loss_ce: 0.0815, aux_1.acc_seg: 95.8140, aux_2.loss_ce: 0.1175, aux_2.loss_dice: 0.2502, aux_2.acc_seg: 96.0311, aux_3.loss_ce: 0.3063, aux_3.acc_seg: 93.6696, loss: 0.8831
2023-05-04 18:00:51,712 - mmseg - INFO - Iter [8450/10000]	lr: 1.869e-02, eta: 0:20:47, time: 0.903, data_time: 0.251, memory: 14751, decode.loss_ce: 0.0598, decode.acc_seg: 96.7651, aux_0.loss_ce: 0.0618, aux_0.acc_seg: 96.7147, aux_1.loss_ce: 0.0778, aux_1.acc_seg: 95.9223, aux_2.loss_ce: 0.1157, aux_2.loss_dice: 0.2482, aux_2.acc_seg: 96.0758, aux_3.loss_ce: 0.2978, aux_3.acc_seg: 93.7620, loss: 0.8610
2023-05-04 18:01:33,725 - mmseg - INFO - Iter [8500/10000]	lr: 1.815e-02, eta: 0:20:07, time: 0.840, data_time: 0.183, memory: 14751, decode.loss_ce: 0.0611, decode.acc_seg: 96.7635, aux_0.loss_ce: 0.0628, aux_0.acc_seg: 96.7334, aux_1.loss_ce: 0.0792, aux_1.acc_seg: 95.9239, aux_2.loss_ce: 0.1167, aux_2.loss_dice: 0.2499, aux_2.acc_seg: 96.0836, aux_3.loss_ce: 0.3008, aux_3.acc_seg: 93.8513, loss: 0.8705
2023-05-04 18:02:09,881 - mmseg - INFO - Iter [8550/10000]	lr: 1.760e-02, eta: 0:19:26, time: 0.725, data_time: 0.183, memory: 14751, decode.loss_ce: 0.0613, decode.acc_seg: 96.7800, aux_0.loss_ce: 0.0631, aux_0.acc_seg: 96.7341, aux_1.loss_ce: 0.0800, aux_1.acc_seg: 95.9126, aux_2.loss_ce: 0.1184, aux_2.loss_dice: 0.2507, aux_2.acc_seg: 96.0086, aux_3.loss_ce: 0.3046, aux_3.acc_seg: 93.7590, loss: 0.8781
2023-05-04 18:02:50,394 - mmseg - INFO - Iter [8600/10000]	lr: 1.705e-02, eta: 0:18:46, time: 0.809, data_time: 0.181, memory: 14751, decode.loss_ce: 0.0604, decode.acc_seg: 96.8264, aux_0.loss_ce: 0.0624, aux_0.acc_seg: 96.7854, aux_1.loss_ce: 0.0793, aux_1.acc_seg: 95.9565, aux_2.loss_ce: 0.1184, aux_2.loss_dice: 0.2503, aux_2.acc_seg: 95.9878, aux_3.loss_ce: 0.3100, aux_3.acc_seg: 93.8143, loss: 0.8808
2023-05-04 18:03:35,238 - mmseg - INFO - Iter [8650/10000]	lr: 1.650e-02, eta: 0:18:06, time: 0.897, data_time: 0.249, memory: 14751, decode.loss_ce: 0.0602, decode.acc_seg: 96.8660, aux_0.loss_ce: 0.0622, aux_0.acc_seg: 96.8210, aux_1.loss_ce: 0.0791, aux_1.acc_seg: 96.0064, aux_2.loss_ce: 0.1190, aux_2.loss_dice: 0.2519, aux_2.acc_seg: 95.9968, aux_3.loss_ce: 0.3103, aux_3.acc_seg: 93.8670, loss: 0.8827
2023-05-04 18:04:17,055 - mmseg - INFO - Iter [8700/10000]	lr: 1.595e-02, eta: 0:17:26, time: 0.836, data_time: 0.189, memory: 14751, decode.loss_ce: 0.0631, decode.acc_seg: 96.7275, aux_0.loss_ce: 0.0650, aux_0.acc_seg: 96.6706, aux_1.loss_ce: 0.0813, aux_1.acc_seg: 95.8609, aux_2.loss_ce: 0.1199, aux_2.loss_dice: 0.2515, aux_2.acc_seg: 95.9597, aux_3.loss_ce: 0.3117, aux_3.acc_seg: 93.7105, loss: 0.8925
2023-05-04 18:04:59,177 - mmseg - INFO - Iter [8750/10000]	lr: 1.540e-02, eta: 0:16:46, time: 0.842, data_time: 0.187, memory: 14751, decode.loss_ce: 0.0596, decode.acc_seg: 96.8283, aux_0.loss_ce: 0.0614, aux_0.acc_seg: 96.7884, aux_1.loss_ce: 0.0780, aux_1.acc_seg: 95.9670, aux_2.loss_ce: 0.1173, aux_2.loss_dice: 0.2500, aux_2.acc_seg: 96.0355, aux_3.loss_ce: 0.3023, aux_3.acc_seg: 93.8562, loss: 0.8686
2023-05-04 18:05:40,976 - mmseg - INFO - Iter [8800/10000]	lr: 1.485e-02, eta: 0:16:06, time: 0.836, data_time: 0.187, memory: 14751, decode.loss_ce: 0.0596, decode.acc_seg: 96.8597, aux_0.loss_ce: 0.0613, aux_0.acc_seg: 96.8294, aux_1.loss_ce: 0.0779, aux_1.acc_seg: 96.0027, aux_2.loss_ce: 0.1177, aux_2.loss_dice: 0.2503, aux_2.acc_seg: 96.0102, aux_3.loss_ce: 0.3050, aux_3.acc_seg: 93.8964, loss: 0.8717
2023-05-04 18:06:25,233 - mmseg - INFO - Iter [8850/10000]	lr: 1.429e-02, eta: 0:15:27, time: 0.886, data_time: 0.248, memory: 14751, decode.loss_ce: 0.0606, decode.acc_seg: 96.8095, aux_0.loss_ce: 0.0622, aux_0.acc_seg: 96.7724, aux_1.loss_ce: 0.0796, aux_1.acc_seg: 95.9183, aux_2.loss_ce: 0.1176, aux_2.loss_dice: 0.2495, aux_2.acc_seg: 96.0414, aux_3.loss_ce: 0.3043, aux_3.acc_seg: 93.7480, loss: 0.8737
2023-05-04 18:07:00,146 - mmseg - INFO - Iter [8900/10000]	lr: 1.373e-02, eta: 0:14:46, time: 0.698, data_time: 0.190, memory: 14751, decode.loss_ce: 0.0603, decode.acc_seg: 96.8372, aux_0.loss_ce: 0.0623, aux_0.acc_seg: 96.7900, aux_1.loss_ce: 0.0791, aux_1.acc_seg: 95.9616, aux_2.loss_ce: 0.1189, aux_2.loss_dice: 0.2499, aux_2.acc_seg: 95.9617, aux_3.loss_ce: 0.3089, aux_3.acc_seg: 93.7914, loss: 0.8793
2023-05-04 18:07:41,975 - mmseg - INFO - Iter [8950/10000]	lr: 1.317e-02, eta: 0:14:05, time: 0.837, data_time: 0.181, memory: 14751, decode.loss_ce: 0.0597, decode.acc_seg: 96.7720, aux_0.loss_ce: 0.0616, aux_0.acc_seg: 96.7322, aux_1.loss_ce: 0.0784, aux_1.acc_seg: 95.8803, aux_2.loss_ce: 0.1171, aux_2.loss_dice: 0.2499, aux_2.acc_seg: 96.0422, aux_3.loss_ce: 0.3009, aux_3.acc_seg: 93.6860, loss: 0.8675
2023-05-04 18:08:27,086 - mmseg - INFO - Saving checkpoint at 9000 iterations
2023-05-04 18:08:27,466 - mmseg - INFO - Exp name: detextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 18:08:27,466 - mmseg - INFO - Iter [9000/10000]	lr: 1.260e-02, eta: 0:13:26, time: 0.913, data_time: 0.252, memory: 14751, decode.loss_ce: 0.0601, decode.acc_seg: 96.8201, aux_0.loss_ce: 0.0619, aux_0.acc_seg: 96.7856, aux_1.loss_ce: 0.0790, aux_1.acc_seg: 95.9528, aux_2.loss_ce: 0.1180, aux_2.loss_dice: 0.2500, aux_2.acc_seg: 95.9963, aux_3.loss_ce: 0.3045, aux_3.acc_seg: 93.7883, loss: 0.8735
2023-05-04 18:08:30,266 - mmseg - INFO - per class results:
2023-05-04 18:08:30,267 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 86.76 | 93.61 |
|   Building  | 92.76 |  94.5 |
|     Car     | 93.58 | 95.89 |
| Column_Pole | 24.54 | 29.49 |
|    Fence    | 80.54 | 93.33 |
|  Pedestrian | 68.43 | 81.52 |
|     Road    | 97.83 | 98.72 |
|   Sidewalk  | 92.32 | 97.35 |
|  SignSymbol |  0.07 |  0.07 |
|     Sky     | 93.59 |  96.0 |
|     Tree    | 91.96 | 98.57 |
+-------------+-------+-------+
2023-05-04 18:08:30,267 - mmseg - INFO - Summary:
2023-05-04 18:08:30,267 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 96.25 | 74.76 | 79.91 |
+-------+-------+-------+
2023-05-04 18:08:30,267 - mmseg - INFO - Exp name: detextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 18:08:30,267 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9625, mIoU: 0.7476, mAcc: 0.7991, IoU.Bicyclist: 0.8676, IoU.Building: 0.9276, IoU.Car: 0.9358, IoU.Column_Pole: 0.2454, IoU.Fence: 0.8054, IoU.Pedestrian: 0.6843, IoU.Road: 0.9783, IoU.Sidewalk: 0.9232, IoU.SignSymbol: 0.0007, IoU.Sky: 0.9359, IoU.Tree: 0.9196, Acc.Bicyclist: 0.9361, Acc.Building: 0.9450, Acc.Car: 0.9589, Acc.Column_Pole: 0.2949, Acc.Fence: 0.9333, Acc.Pedestrian: 0.8152, Acc.Road: 0.9872, Acc.Sidewalk: 0.9735, Acc.SignSymbol: 0.0007, Acc.Sky: 0.9600, Acc.Tree: 0.9857
2023-05-04 18:09:12,050 - mmseg - INFO - Iter [9050/10000]	lr: 1.203e-02, eta: 0:12:46, time: 0.887, data_time: 0.236, memory: 14751, decode.loss_ce: 0.0607, decode.acc_seg: 96.8010, aux_0.loss_ce: 0.0626, aux_0.acc_seg: 96.7557, aux_1.loss_ce: 0.0793, aux_1.acc_seg: 95.9267, aux_2.loss_ce: 0.1186, aux_2.loss_dice: 0.2499, aux_2.acc_seg: 95.9930, aux_3.loss_ce: 0.3069, aux_3.acc_seg: 93.7958, loss: 0.8780
2023-05-04 18:09:53,740 - mmseg - INFO - Iter [9100/10000]	lr: 1.146e-02, eta: 0:12:06, time: 0.835, data_time: 0.182, memory: 14751, decode.loss_ce: 0.0594, decode.acc_seg: 96.8472, aux_0.loss_ce: 0.0613, aux_0.acc_seg: 96.8037, aux_1.loss_ce: 0.0779, aux_1.acc_seg: 95.9817, aux_2.loss_ce: 0.1175, aux_2.loss_dice: 0.2492, aux_2.acc_seg: 96.0069, aux_3.loss_ce: 0.3023, aux_3.acc_seg: 93.8388, loss: 0.8676
2023-05-04 18:10:35,729 - mmseg - INFO - Iter [9150/10000]	lr: 1.089e-02, eta: 0:11:26, time: 0.838, data_time: 0.188, memory: 14751, decode.loss_ce: 0.0592, decode.acc_seg: 96.7913, aux_0.loss_ce: 0.0611, aux_0.acc_seg: 96.7372, aux_1.loss_ce: 0.0777, aux_1.acc_seg: 95.9143, aux_2.loss_ce: 0.1165, aux_2.loss_dice: 0.2482, aux_2.acc_seg: 96.0181, aux_3.loss_ce: 0.3015, aux_3.acc_seg: 93.7190, loss: 0.8642
2023-05-04 18:11:17,000 - mmseg - INFO - Iter [9200/10000]	lr: 1.031e-02, eta: 0:10:45, time: 0.827, data_time: 0.253, memory: 14751, decode.loss_ce: 0.0585, decode.acc_seg: 96.8800, aux_0.loss_ce: 0.0605, aux_0.acc_seg: 96.8219, aux_1.loss_ce: 0.0769, aux_1.acc_seg: 96.0076, aux_2.loss_ce: 0.1166, aux_2.loss_dice: 0.2476, aux_2.acc_seg: 96.0345, aux_3.loss_ce: 0.3014, aux_3.acc_seg: 93.8557, loss: 0.8615
2023-05-04 18:11:55,777 - mmseg - INFO - Iter [9250/10000]	lr: 9.730e-03, eta: 0:10:05, time: 0.775, data_time: 0.181, memory: 14751, decode.loss_ce: 0.0574, decode.acc_seg: 96.8991, aux_0.loss_ce: 0.0591, aux_0.acc_seg: 96.8593, aux_1.loss_ce: 0.0759, aux_1.acc_seg: 96.0202, aux_2.loss_ce: 0.1159, aux_2.loss_dice: 0.2481, aux_2.acc_seg: 96.0623, aux_3.loss_ce: 0.2981, aux_3.acc_seg: 93.8548, loss: 0.8544
2023-05-04 18:12:37,623 - mmseg - INFO - Iter [9300/10000]	lr: 9.145e-03, eta: 0:09:25, time: 0.836, data_time: 0.184, memory: 14751, decode.loss_ce: 0.0603, decode.acc_seg: 96.8308, aux_0.loss_ce: 0.0623, aux_0.acc_seg: 96.7798, aux_1.loss_ce: 0.0792, aux_1.acc_seg: 95.9685, aux_2.loss_ce: 0.1187, aux_2.loss_dice: 0.2505, aux_2.acc_seg: 95.9828, aux_3.loss_ce: 0.3078, aux_3.acc_seg: 93.8107, loss: 0.8788
2023-05-04 18:13:19,441 - mmseg - INFO - Iter [9350/10000]	lr: 8.556e-03, eta: 0:08:44, time: 0.837, data_time: 0.190, memory: 14751, decode.loss_ce: 0.0579, decode.acc_seg: 96.9186, aux_0.loss_ce: 0.0598, aux_0.acc_seg: 96.8792, aux_1.loss_ce: 0.0761, aux_1.acc_seg: 96.0520, aux_2.loss_ce: 0.1169, aux_2.loss_dice: 0.2491, aux_2.acc_seg: 96.0560, aux_3.loss_ce: 0.3033, aux_3.acc_seg: 93.8567, loss: 0.8631
2023-05-04 18:14:04,792 - mmseg - INFO - Iter [9400/10000]	lr: 7.962e-03, eta: 0:08:04, time: 0.908, data_time: 0.253, memory: 14751, decode.loss_ce: 0.0580, decode.acc_seg: 96.9088, aux_0.loss_ce: 0.0601, aux_0.acc_seg: 96.8474, aux_1.loss_ce: 0.0769, aux_1.acc_seg: 96.0159, aux_2.loss_ce: 0.1171, aux_2.loss_dice: 0.2491, aux_2.acc_seg: 96.0310, aux_3.loss_ce: 0.3040, aux_3.acc_seg: 93.8474, loss: 0.8652
2023-05-04 18:14:46,539 - mmseg - INFO - Iter [9450/10000]	lr: 7.364e-03, eta: 0:07:24, time: 0.835, data_time: 0.184, memory: 14751, decode.loss_ce: 0.0588, decode.acc_seg: 96.8689, aux_0.loss_ce: 0.0606, aux_0.acc_seg: 96.8305, aux_1.loss_ce: 0.0774, aux_1.acc_seg: 95.9986, aux_2.loss_ce: 0.1176, aux_2.loss_dice: 0.2493, aux_2.acc_seg: 95.9986, aux_3.loss_ce: 0.3021, aux_3.acc_seg: 93.8113, loss: 0.8658
2023-05-04 18:15:28,229 - mmseg - INFO - Iter [9500/10000]	lr: 6.759e-03, eta: 0:06:44, time: 0.834, data_time: 0.183, memory: 14751, decode.loss_ce: 0.0599, decode.acc_seg: 96.7784, aux_0.loss_ce: 0.0620, aux_0.acc_seg: 96.7262, aux_1.loss_ce: 0.0785, aux_1.acc_seg: 95.8894, aux_2.loss_ce: 0.1161, aux_2.loss_dice: 0.2486, aux_2.acc_seg: 96.0836, aux_3.loss_ce: 0.3003, aux_3.acc_seg: 93.7343, loss: 0.8654
2023-05-04 18:16:06,190 - mmseg - INFO - Iter [9550/10000]	lr: 6.149e-03, eta: 0:06:03, time: 0.759, data_time: 0.256, memory: 14751, decode.loss_ce: 0.0600, decode.acc_seg: 96.8475, aux_0.loss_ce: 0.0618, aux_0.acc_seg: 96.8101, aux_1.loss_ce: 0.0785, aux_1.acc_seg: 95.9971, aux_2.loss_ce: 0.1196, aux_2.loss_dice: 0.2515, aux_2.acc_seg: 95.9449, aux_3.loss_ce: 0.3082, aux_3.acc_seg: 93.8105, loss: 0.8795
2023-05-04 18:16:47,957 - mmseg - INFO - Iter [9600/10000]	lr: 5.532e-03, eta: 0:05:23, time: 0.835, data_time: 0.179, memory: 14751, decode.loss_ce: 0.0580, decode.acc_seg: 96.8832, aux_0.loss_ce: 0.0596, aux_0.acc_seg: 96.8518, aux_1.loss_ce: 0.0764, aux_1.acc_seg: 96.0221, aux_2.loss_ce: 0.1173, aux_2.loss_dice: 0.2494, aux_2.acc_seg: 96.0247, aux_3.loss_ce: 0.3006, aux_3.acc_seg: 93.8286, loss: 0.8613
2023-05-04 18:17:29,568 - mmseg - INFO - Iter [9650/10000]	lr: 4.908e-03, eta: 0:04:42, time: 0.832, data_time: 0.177, memory: 14751, decode.loss_ce: 0.0553, decode.acc_seg: 97.0049, aux_0.loss_ce: 0.0572, aux_0.acc_seg: 96.9452, aux_1.loss_ce: 0.0735, aux_1.acc_seg: 96.1407, aux_2.loss_ce: 0.1145, aux_2.loss_dice: 0.2454, aux_2.acc_seg: 96.0774, aux_3.loss_ce: 0.2961, aux_3.acc_seg: 93.9107, loss: 0.8420
2023-05-04 18:18:11,311 - mmseg - INFO - Iter [9700/10000]	lr: 4.274e-03, eta: 0:04:02, time: 0.836, data_time: 0.184, memory: 14751, decode.loss_ce: 0.0576, decode.acc_seg: 96.9059, aux_0.loss_ce: 0.0595, aux_0.acc_seg: 96.8588, aux_1.loss_ce: 0.0763, aux_1.acc_seg: 96.0345, aux_2.loss_ce: 0.1169, aux_2.loss_dice: 0.2491, aux_2.acc_seg: 96.0544, aux_3.loss_ce: 0.3000, aux_3.acc_seg: 93.8393, loss: 0.8595
2023-05-04 18:18:56,142 - mmseg - INFO - Iter [9750/10000]	lr: 3.629e-03, eta: 0:03:22, time: 0.895, data_time: 0.249, memory: 14751, decode.loss_ce: 0.0599, decode.acc_seg: 96.8632, aux_0.loss_ce: 0.0621, aux_0.acc_seg: 96.7942, aux_1.loss_ce: 0.0792, aux_1.acc_seg: 95.9586, aux_2.loss_ce: 0.1199, aux_2.loss_dice: 0.2510, aux_2.acc_seg: 95.9120, aux_3.loss_ce: 0.3077, aux_3.acc_seg: 93.7112, loss: 0.8797
2023-05-04 18:19:38,323 - mmseg - INFO - Iter [9800/10000]	lr: 2.972e-03, eta: 0:02:41, time: 0.845, data_time: 0.185, memory: 14751, decode.loss_ce: 0.0570, decode.acc_seg: 96.9154, aux_0.loss_ce: 0.0591, aux_0.acc_seg: 96.8628, aux_1.loss_ce: 0.0755, aux_1.acc_seg: 96.0227, aux_2.loss_ce: 0.1161, aux_2.loss_dice: 0.2483, aux_2.acc_seg: 96.0665, aux_3.loss_ce: 0.2983, aux_3.acc_seg: 93.7830, loss: 0.8543
2023-05-04 18:20:19,165 - mmseg - INFO - Iter [9850/10000]	lr: 2.298e-03, eta: 0:02:01, time: 0.818, data_time: 0.184, memory: 14751, decode.loss_ce: 0.0568, decode.acc_seg: 96.9986, aux_0.loss_ce: 0.0586, aux_0.acc_seg: 96.9580, aux_1.loss_ce: 0.0753, aux_1.acc_seg: 96.1323, aux_2.loss_ce: 0.1164, aux_2.loss_dice: 0.2498, aux_2.acc_seg: 96.0710, aux_3.loss_ce: 0.3043, aux_3.acc_seg: 93.9022, loss: 0.8610
2023-05-04 18:20:54,953 - mmseg - INFO - Iter [9900/10000]	lr: 1.600e-03, eta: 0:01:20, time: 0.714, data_time: 0.181, memory: 14751, decode.loss_ce: 0.0571, decode.acc_seg: 96.9191, aux_0.loss_ce: 0.0590, aux_0.acc_seg: 96.8680, aux_1.loss_ce: 0.0757, aux_1.acc_seg: 96.0251, aux_2.loss_ce: 0.1168, aux_2.loss_dice: 0.2480, aux_2.acc_seg: 96.0150, aux_3.loss_ce: 0.3024, aux_3.acc_seg: 93.7909, loss: 0.8589
2023-05-04 18:21:39,963 - mmseg - INFO - Iter [9950/10000]	lr: 8.656e-04, eta: 0:00:40, time: 0.901, data_time: 0.248, memory: 14751, decode.loss_ce: 0.0577, decode.acc_seg: 96.9331, aux_0.loss_ce: 0.0594, aux_0.acc_seg: 96.8888, aux_1.loss_ce: 0.0766, aux_1.acc_seg: 96.0353, aux_2.loss_ce: 0.1171, aux_2.loss_dice: 0.2473, aux_2.acc_seg: 95.9974, aux_3.loss_ce: 0.3022, aux_3.acc_seg: 93.7816, loss: 0.8603
2023-05-04 18:22:21,661 - mmseg - INFO - Saving checkpoint at 10000 iterations
2023-05-04 18:22:22,043 - mmseg - INFO - Exp name: detextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 18:22:22,043 - mmseg - INFO - Iter [10000/10000]	lr: 2.612e-05, eta: 0:00:00, time: 0.845, data_time: 0.185, memory: 14751, decode.loss_ce: 0.0566, decode.acc_seg: 96.9611, aux_0.loss_ce: 0.0585, aux_0.acc_seg: 96.9109, aux_1.loss_ce: 0.0752, aux_1.acc_seg: 96.0827, aux_2.loss_ce: 0.1159, aux_2.loss_dice: 0.2483, aux_2.acc_seg: 96.0573, aux_3.loss_ce: 0.3006, aux_3.acc_seg: 93.8330, loss: 0.8551
2023-05-04 18:22:24,957 - mmseg - INFO - per class results:
2023-05-04 18:22:24,958 - mmseg - INFO - 
+-------------+-------+-------+
|    Class    |  IoU  |  Acc  |
+-------------+-------+-------+
|  Bicyclist  | 87.06 | 93.24 |
|   Building  | 93.47 | 95.21 |
|     Car     | 93.72 | 96.11 |
| Column_Pole | 23.85 | 27.15 |
|    Fence    | 82.39 | 92.75 |
|  Pedestrian | 68.52 | 83.62 |
|     Road    | 97.91 | 98.72 |
|   Sidewalk  | 92.63 | 97.58 |
|  SignSymbol |  0.01 |  0.01 |
|     Sky     | 94.14 | 96.59 |
|     Tree    |  92.3 | 98.59 |
+-------------+-------+-------+
2023-05-04 18:22:24,958 - mmseg - INFO - Summary:
2023-05-04 18:22:24,959 - mmseg - INFO - 
+-------+-------+-------+
|  aAcc |  mIoU |  mAcc |
+-------+-------+-------+
| 96.49 | 75.09 | 79.96 |
+-------+-------+-------+
2023-05-04 18:22:24,959 - mmseg - INFO - Exp name: detextnet_stdc1_1x16_720x960_10k_camvid.py
2023-05-04 18:22:24,959 - mmseg - INFO - Iter(val) [101]	aAcc: 0.9649, mIoU: 0.7509, mAcc: 0.7996, IoU.Bicyclist: 0.8706, IoU.Building: 0.9347, IoU.Car: 0.9372, IoU.Column_Pole: 0.2385, IoU.Fence: 0.8239, IoU.Pedestrian: 0.6852, IoU.Road: 0.9791, IoU.Sidewalk: 0.9263, IoU.SignSymbol: 0.0001, IoU.Sky: 0.9414, IoU.Tree: 0.9230, Acc.Bicyclist: 0.9324, Acc.Building: 0.9521, Acc.Car: 0.9611, Acc.Column_Pole: 0.2715, Acc.Fence: 0.9275, Acc.Pedestrian: 0.8362, Acc.Road: 0.9872, Acc.Sidewalk: 0.9758, Acc.SignSymbol: 0.0001, Acc.Sky: 0.9659, Acc.Tree: 0.9859
